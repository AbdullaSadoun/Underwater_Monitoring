
ECED4402_2022.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007788  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000afc  08007928  08007928  00017928  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008424  08008424  00020088  2**0
                  CONTENTS
  4 .ARM          00000008  08008424  08008424  00018424  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800842c  0800842c  00020088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800842c  0800842c  0001842c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008430  08008430  00018430  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000088  20000000  08008434  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00004c08  20000088  080084bc  00020088  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20004c90  080084bc  00024c90  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020088  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001b1de  00000000  00000000  000200b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003d1c  00000000  00000000  0003b296  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000015e8  00000000  00000000  0003efb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001460  00000000  00000000  000405a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a31a  00000000  00000000  00041a00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00019c72  00000000  00000000  0005bd1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00099ff9  00000000  00000000  0007598c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0010f985  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000603c  00000000  00000000  0010f9d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000088 	.word	0x20000088
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08007910 	.word	0x08007910

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000008c 	.word	0x2000008c
 80001dc:	08007910 	.word	0x08007910

080001e0 <strcmp>:
 80001e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001e8:	2a01      	cmp	r2, #1
 80001ea:	bf28      	it	cs
 80001ec:	429a      	cmpcs	r2, r3
 80001ee:	d0f7      	beq.n	80001e0 <strcmp>
 80001f0:	1ad0      	subs	r0, r2, r3
 80001f2:	4770      	bx	lr

080001f4 <strlen>:
 80001f4:	4603      	mov	r3, r0
 80001f6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001fa:	2a00      	cmp	r2, #0
 80001fc:	d1fb      	bne.n	80001f6 <strlen+0x2>
 80001fe:	1a18      	subs	r0, r3, r0
 8000200:	3801      	subs	r0, #1
 8000202:	4770      	bx	lr
	...

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b974 	b.w	80005b0 <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	4604      	mov	r4, r0
 80002e8:	468e      	mov	lr, r1
 80002ea:	2b00      	cmp	r3, #0
 80002ec:	d14d      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ee:	428a      	cmp	r2, r1
 80002f0:	4694      	mov	ip, r2
 80002f2:	d969      	bls.n	80003c8 <__udivmoddi4+0xe8>
 80002f4:	fab2 f282 	clz	r2, r2
 80002f8:	b152      	cbz	r2, 8000310 <__udivmoddi4+0x30>
 80002fa:	fa01 f302 	lsl.w	r3, r1, r2
 80002fe:	f1c2 0120 	rsb	r1, r2, #32
 8000302:	fa20 f101 	lsr.w	r1, r0, r1
 8000306:	fa0c fc02 	lsl.w	ip, ip, r2
 800030a:	ea41 0e03 	orr.w	lr, r1, r3
 800030e:	4094      	lsls	r4, r2
 8000310:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000314:	0c21      	lsrs	r1, r4, #16
 8000316:	fbbe f6f8 	udiv	r6, lr, r8
 800031a:	fa1f f78c 	uxth.w	r7, ip
 800031e:	fb08 e316 	mls	r3, r8, r6, lr
 8000322:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000326:	fb06 f107 	mul.w	r1, r6, r7
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f106 30ff 	add.w	r0, r6, #4294967295
 8000336:	f080 811f 	bcs.w	8000578 <__udivmoddi4+0x298>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 811c 	bls.w	8000578 <__udivmoddi4+0x298>
 8000340:	3e02      	subs	r6, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a5b      	subs	r3, r3, r1
 8000346:	b2a4      	uxth	r4, r4
 8000348:	fbb3 f0f8 	udiv	r0, r3, r8
 800034c:	fb08 3310 	mls	r3, r8, r0, r3
 8000350:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000354:	fb00 f707 	mul.w	r7, r0, r7
 8000358:	42a7      	cmp	r7, r4
 800035a:	d90a      	bls.n	8000372 <__udivmoddi4+0x92>
 800035c:	eb1c 0404 	adds.w	r4, ip, r4
 8000360:	f100 33ff 	add.w	r3, r0, #4294967295
 8000364:	f080 810a 	bcs.w	800057c <__udivmoddi4+0x29c>
 8000368:	42a7      	cmp	r7, r4
 800036a:	f240 8107 	bls.w	800057c <__udivmoddi4+0x29c>
 800036e:	4464      	add	r4, ip
 8000370:	3802      	subs	r0, #2
 8000372:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000376:	1be4      	subs	r4, r4, r7
 8000378:	2600      	movs	r6, #0
 800037a:	b11d      	cbz	r5, 8000384 <__udivmoddi4+0xa4>
 800037c:	40d4      	lsrs	r4, r2
 800037e:	2300      	movs	r3, #0
 8000380:	e9c5 4300 	strd	r4, r3, [r5]
 8000384:	4631      	mov	r1, r6
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d909      	bls.n	80003a2 <__udivmoddi4+0xc2>
 800038e:	2d00      	cmp	r5, #0
 8000390:	f000 80ef 	beq.w	8000572 <__udivmoddi4+0x292>
 8000394:	2600      	movs	r6, #0
 8000396:	e9c5 0100 	strd	r0, r1, [r5]
 800039a:	4630      	mov	r0, r6
 800039c:	4631      	mov	r1, r6
 800039e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003a2:	fab3 f683 	clz	r6, r3
 80003a6:	2e00      	cmp	r6, #0
 80003a8:	d14a      	bne.n	8000440 <__udivmoddi4+0x160>
 80003aa:	428b      	cmp	r3, r1
 80003ac:	d302      	bcc.n	80003b4 <__udivmoddi4+0xd4>
 80003ae:	4282      	cmp	r2, r0
 80003b0:	f200 80f9 	bhi.w	80005a6 <__udivmoddi4+0x2c6>
 80003b4:	1a84      	subs	r4, r0, r2
 80003b6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ba:	2001      	movs	r0, #1
 80003bc:	469e      	mov	lr, r3
 80003be:	2d00      	cmp	r5, #0
 80003c0:	d0e0      	beq.n	8000384 <__udivmoddi4+0xa4>
 80003c2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003c6:	e7dd      	b.n	8000384 <__udivmoddi4+0xa4>
 80003c8:	b902      	cbnz	r2, 80003cc <__udivmoddi4+0xec>
 80003ca:	deff      	udf	#255	; 0xff
 80003cc:	fab2 f282 	clz	r2, r2
 80003d0:	2a00      	cmp	r2, #0
 80003d2:	f040 8092 	bne.w	80004fa <__udivmoddi4+0x21a>
 80003d6:	eba1 010c 	sub.w	r1, r1, ip
 80003da:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003de:	fa1f fe8c 	uxth.w	lr, ip
 80003e2:	2601      	movs	r6, #1
 80003e4:	0c20      	lsrs	r0, r4, #16
 80003e6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ea:	fb07 1113 	mls	r1, r7, r3, r1
 80003ee:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003f2:	fb0e f003 	mul.w	r0, lr, r3
 80003f6:	4288      	cmp	r0, r1
 80003f8:	d908      	bls.n	800040c <__udivmoddi4+0x12c>
 80003fa:	eb1c 0101 	adds.w	r1, ip, r1
 80003fe:	f103 38ff 	add.w	r8, r3, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x12a>
 8000404:	4288      	cmp	r0, r1
 8000406:	f200 80cb 	bhi.w	80005a0 <__udivmoddi4+0x2c0>
 800040a:	4643      	mov	r3, r8
 800040c:	1a09      	subs	r1, r1, r0
 800040e:	b2a4      	uxth	r4, r4
 8000410:	fbb1 f0f7 	udiv	r0, r1, r7
 8000414:	fb07 1110 	mls	r1, r7, r0, r1
 8000418:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800041c:	fb0e fe00 	mul.w	lr, lr, r0
 8000420:	45a6      	cmp	lr, r4
 8000422:	d908      	bls.n	8000436 <__udivmoddi4+0x156>
 8000424:	eb1c 0404 	adds.w	r4, ip, r4
 8000428:	f100 31ff 	add.w	r1, r0, #4294967295
 800042c:	d202      	bcs.n	8000434 <__udivmoddi4+0x154>
 800042e:	45a6      	cmp	lr, r4
 8000430:	f200 80bb 	bhi.w	80005aa <__udivmoddi4+0x2ca>
 8000434:	4608      	mov	r0, r1
 8000436:	eba4 040e 	sub.w	r4, r4, lr
 800043a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800043e:	e79c      	b.n	800037a <__udivmoddi4+0x9a>
 8000440:	f1c6 0720 	rsb	r7, r6, #32
 8000444:	40b3      	lsls	r3, r6
 8000446:	fa22 fc07 	lsr.w	ip, r2, r7
 800044a:	ea4c 0c03 	orr.w	ip, ip, r3
 800044e:	fa20 f407 	lsr.w	r4, r0, r7
 8000452:	fa01 f306 	lsl.w	r3, r1, r6
 8000456:	431c      	orrs	r4, r3
 8000458:	40f9      	lsrs	r1, r7
 800045a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800045e:	fa00 f306 	lsl.w	r3, r0, r6
 8000462:	fbb1 f8f9 	udiv	r8, r1, r9
 8000466:	0c20      	lsrs	r0, r4, #16
 8000468:	fa1f fe8c 	uxth.w	lr, ip
 800046c:	fb09 1118 	mls	r1, r9, r8, r1
 8000470:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000474:	fb08 f00e 	mul.w	r0, r8, lr
 8000478:	4288      	cmp	r0, r1
 800047a:	fa02 f206 	lsl.w	r2, r2, r6
 800047e:	d90b      	bls.n	8000498 <__udivmoddi4+0x1b8>
 8000480:	eb1c 0101 	adds.w	r1, ip, r1
 8000484:	f108 3aff 	add.w	sl, r8, #4294967295
 8000488:	f080 8088 	bcs.w	800059c <__udivmoddi4+0x2bc>
 800048c:	4288      	cmp	r0, r1
 800048e:	f240 8085 	bls.w	800059c <__udivmoddi4+0x2bc>
 8000492:	f1a8 0802 	sub.w	r8, r8, #2
 8000496:	4461      	add	r1, ip
 8000498:	1a09      	subs	r1, r1, r0
 800049a:	b2a4      	uxth	r4, r4
 800049c:	fbb1 f0f9 	udiv	r0, r1, r9
 80004a0:	fb09 1110 	mls	r1, r9, r0, r1
 80004a4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004a8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004ac:	458e      	cmp	lr, r1
 80004ae:	d908      	bls.n	80004c2 <__udivmoddi4+0x1e2>
 80004b0:	eb1c 0101 	adds.w	r1, ip, r1
 80004b4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004b8:	d26c      	bcs.n	8000594 <__udivmoddi4+0x2b4>
 80004ba:	458e      	cmp	lr, r1
 80004bc:	d96a      	bls.n	8000594 <__udivmoddi4+0x2b4>
 80004be:	3802      	subs	r0, #2
 80004c0:	4461      	add	r1, ip
 80004c2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004c6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ca:	eba1 010e 	sub.w	r1, r1, lr
 80004ce:	42a1      	cmp	r1, r4
 80004d0:	46c8      	mov	r8, r9
 80004d2:	46a6      	mov	lr, r4
 80004d4:	d356      	bcc.n	8000584 <__udivmoddi4+0x2a4>
 80004d6:	d053      	beq.n	8000580 <__udivmoddi4+0x2a0>
 80004d8:	b15d      	cbz	r5, 80004f2 <__udivmoddi4+0x212>
 80004da:	ebb3 0208 	subs.w	r2, r3, r8
 80004de:	eb61 010e 	sbc.w	r1, r1, lr
 80004e2:	fa01 f707 	lsl.w	r7, r1, r7
 80004e6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ea:	40f1      	lsrs	r1, r6
 80004ec:	431f      	orrs	r7, r3
 80004ee:	e9c5 7100 	strd	r7, r1, [r5]
 80004f2:	2600      	movs	r6, #0
 80004f4:	4631      	mov	r1, r6
 80004f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004fa:	f1c2 0320 	rsb	r3, r2, #32
 80004fe:	40d8      	lsrs	r0, r3
 8000500:	fa0c fc02 	lsl.w	ip, ip, r2
 8000504:	fa21 f303 	lsr.w	r3, r1, r3
 8000508:	4091      	lsls	r1, r2
 800050a:	4301      	orrs	r1, r0
 800050c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000510:	fa1f fe8c 	uxth.w	lr, ip
 8000514:	fbb3 f0f7 	udiv	r0, r3, r7
 8000518:	fb07 3610 	mls	r6, r7, r0, r3
 800051c:	0c0b      	lsrs	r3, r1, #16
 800051e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000522:	fb00 f60e 	mul.w	r6, r0, lr
 8000526:	429e      	cmp	r6, r3
 8000528:	fa04 f402 	lsl.w	r4, r4, r2
 800052c:	d908      	bls.n	8000540 <__udivmoddi4+0x260>
 800052e:	eb1c 0303 	adds.w	r3, ip, r3
 8000532:	f100 38ff 	add.w	r8, r0, #4294967295
 8000536:	d22f      	bcs.n	8000598 <__udivmoddi4+0x2b8>
 8000538:	429e      	cmp	r6, r3
 800053a:	d92d      	bls.n	8000598 <__udivmoddi4+0x2b8>
 800053c:	3802      	subs	r0, #2
 800053e:	4463      	add	r3, ip
 8000540:	1b9b      	subs	r3, r3, r6
 8000542:	b289      	uxth	r1, r1
 8000544:	fbb3 f6f7 	udiv	r6, r3, r7
 8000548:	fb07 3316 	mls	r3, r7, r6, r3
 800054c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000550:	fb06 f30e 	mul.w	r3, r6, lr
 8000554:	428b      	cmp	r3, r1
 8000556:	d908      	bls.n	800056a <__udivmoddi4+0x28a>
 8000558:	eb1c 0101 	adds.w	r1, ip, r1
 800055c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000560:	d216      	bcs.n	8000590 <__udivmoddi4+0x2b0>
 8000562:	428b      	cmp	r3, r1
 8000564:	d914      	bls.n	8000590 <__udivmoddi4+0x2b0>
 8000566:	3e02      	subs	r6, #2
 8000568:	4461      	add	r1, ip
 800056a:	1ac9      	subs	r1, r1, r3
 800056c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000570:	e738      	b.n	80003e4 <__udivmoddi4+0x104>
 8000572:	462e      	mov	r6, r5
 8000574:	4628      	mov	r0, r5
 8000576:	e705      	b.n	8000384 <__udivmoddi4+0xa4>
 8000578:	4606      	mov	r6, r0
 800057a:	e6e3      	b.n	8000344 <__udivmoddi4+0x64>
 800057c:	4618      	mov	r0, r3
 800057e:	e6f8      	b.n	8000372 <__udivmoddi4+0x92>
 8000580:	454b      	cmp	r3, r9
 8000582:	d2a9      	bcs.n	80004d8 <__udivmoddi4+0x1f8>
 8000584:	ebb9 0802 	subs.w	r8, r9, r2
 8000588:	eb64 0e0c 	sbc.w	lr, r4, ip
 800058c:	3801      	subs	r0, #1
 800058e:	e7a3      	b.n	80004d8 <__udivmoddi4+0x1f8>
 8000590:	4646      	mov	r6, r8
 8000592:	e7ea      	b.n	800056a <__udivmoddi4+0x28a>
 8000594:	4620      	mov	r0, r4
 8000596:	e794      	b.n	80004c2 <__udivmoddi4+0x1e2>
 8000598:	4640      	mov	r0, r8
 800059a:	e7d1      	b.n	8000540 <__udivmoddi4+0x260>
 800059c:	46d0      	mov	r8, sl
 800059e:	e77b      	b.n	8000498 <__udivmoddi4+0x1b8>
 80005a0:	3b02      	subs	r3, #2
 80005a2:	4461      	add	r1, ip
 80005a4:	e732      	b.n	800040c <__udivmoddi4+0x12c>
 80005a6:	4630      	mov	r0, r6
 80005a8:	e709      	b.n	80003be <__udivmoddi4+0xde>
 80005aa:	4464      	add	r4, ip
 80005ac:	3802      	subs	r0, #2
 80005ae:	e742      	b.n	8000436 <__udivmoddi4+0x156>

080005b0 <__aeabi_idiv0>:
 80005b0:	4770      	bx	lr
 80005b2:	bf00      	nop

080005b4 <request_sensor_read>:
 80005b4:	b580      	push	{r7, lr}
 80005b6:	af00      	add	r7, sp, #0
 80005b8:	2201      	movs	r2, #1
 80005ba:	4903      	ldr	r1, [pc, #12]	; (80005c8 <request_sensor_read+0x14>)
 80005bc:	4803      	ldr	r0, [pc, #12]	; (80005cc <request_sensor_read+0x18>)
 80005be:	f002 fe86 	bl	80032ce <HAL_UART_Receive_IT>
 80005c2:	bf00      	nop
 80005c4:	bd80      	pop	{r7, pc}
 80005c6:	bf00      	nop
 80005c8:	200000a4 	.word	0x200000a4
 80005cc:	200001f8 	.word	0x200001f8

080005d0 <request_hostPC_read>:
 80005d0:	b580      	push	{r7, lr}
 80005d2:	af00      	add	r7, sp, #0
 80005d4:	2201      	movs	r2, #1
 80005d6:	4903      	ldr	r1, [pc, #12]	; (80005e4 <request_hostPC_read+0x14>)
 80005d8:	4803      	ldr	r0, [pc, #12]	; (80005e8 <request_hostPC_read+0x18>)
 80005da:	f002 fe78 	bl	80032ce <HAL_UART_Receive_IT>
 80005de:	bf00      	nop
 80005e0:	bd80      	pop	{r7, pc}
 80005e2:	bf00      	nop
 80005e4:	20000108 	.word	0x20000108
 80005e8:	200001b4 	.word	0x200001b4

080005ec <configure_usart_extern>:
 80005ec:	b580      	push	{r7, lr}
 80005ee:	af00      	add	r7, sp, #0
 80005f0:	f7ff ffe0 	bl	80005b4 <request_sensor_read>
 80005f4:	2200      	movs	r2, #0
 80005f6:	2101      	movs	r1, #1
 80005f8:	20c8      	movs	r0, #200	; 0xc8
 80005fa:	f003 ffd9 	bl	80045b0 <xQueueGenericCreate>
 80005fe:	4603      	mov	r3, r0
 8000600:	4a04      	ldr	r2, [pc, #16]	; (8000614 <configure_usart_extern+0x28>)
 8000602:	6013      	str	r3, [r2, #0]
 8000604:	2001      	movs	r0, #1
 8000606:	f004 f84a 	bl	800469e <xQueueCreateMutex>
 800060a:	4603      	mov	r3, r0
 800060c:	4a02      	ldr	r2, [pc, #8]	; (8000618 <configure_usart_extern+0x2c>)
 800060e:	6013      	str	r3, [r2, #0]
 8000610:	bf00      	nop
 8000612:	bd80      	pop	{r7, pc}
 8000614:	2000016c 	.word	0x2000016c
 8000618:	20000174 	.word	0x20000174

0800061c <configure_usart_hostPC>:
 800061c:	b580      	push	{r7, lr}
 800061e:	af00      	add	r7, sp, #0
 8000620:	f7ff ffd6 	bl	80005d0 <request_hostPC_read>
 8000624:	2200      	movs	r2, #0
 8000626:	2101      	movs	r1, #1
 8000628:	20c8      	movs	r0, #200	; 0xc8
 800062a:	f003 ffc1 	bl	80045b0 <xQueueGenericCreate>
 800062e:	4603      	mov	r3, r0
 8000630:	4a01      	ldr	r2, [pc, #4]	; (8000638 <configure_usart_hostPC+0x1c>)
 8000632:	6013      	str	r3, [r2, #0]
 8000634:	bf00      	nop
 8000636:	bd80      	pop	{r7, pc}
 8000638:	20000170 	.word	0x20000170

0800063c <HAL_UART_RxCpltCallback>:
 800063c:	b580      	push	{r7, lr}
 800063e:	b084      	sub	sp, #16
 8000640:	af00      	add	r7, sp, #0
 8000642:	6078      	str	r0, [r7, #4]
 8000644:	2120      	movs	r1, #32
 8000646:	4815      	ldr	r0, [pc, #84]	; (800069c <HAL_UART_RxCpltCallback+0x60>)
 8000648:	f001 fdfd 	bl	8002246 <HAL_GPIO_TogglePin>
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	4a14      	ldr	r2, [pc, #80]	; (80006a0 <HAL_UART_RxCpltCallback+0x64>)
 8000650:	4293      	cmp	r3, r2
 8000652:	d10a      	bne.n	800066a <HAL_UART_RxCpltCallback+0x2e>
 8000654:	4b13      	ldr	r3, [pc, #76]	; (80006a4 <HAL_UART_RxCpltCallback+0x68>)
 8000656:	6818      	ldr	r0, [r3, #0]
 8000658:	2300      	movs	r3, #0
 800065a:	2200      	movs	r2, #0
 800065c:	4912      	ldr	r1, [pc, #72]	; (80006a8 <HAL_UART_RxCpltCallback+0x6c>)
 800065e:	f004 f935 	bl	80048cc <xQueueGenericSendFromISR>
 8000662:	60f8      	str	r0, [r7, #12]
 8000664:	f7ff ffb4 	bl	80005d0 <request_hostPC_read>
 8000668:	e00d      	b.n	8000686 <HAL_UART_RxCpltCallback+0x4a>
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	4a0f      	ldr	r2, [pc, #60]	; (80006ac <HAL_UART_RxCpltCallback+0x70>)
 800066e:	4293      	cmp	r3, r2
 8000670:	d109      	bne.n	8000686 <HAL_UART_RxCpltCallback+0x4a>
 8000672:	4b0f      	ldr	r3, [pc, #60]	; (80006b0 <HAL_UART_RxCpltCallback+0x74>)
 8000674:	6818      	ldr	r0, [r3, #0]
 8000676:	2300      	movs	r3, #0
 8000678:	2200      	movs	r2, #0
 800067a:	490e      	ldr	r1, [pc, #56]	; (80006b4 <HAL_UART_RxCpltCallback+0x78>)
 800067c:	f004 f926 	bl	80048cc <xQueueGenericSendFromISR>
 8000680:	60f8      	str	r0, [r7, #12]
 8000682:	f7ff ff97 	bl	80005b4 <request_sensor_read>
 8000686:	68fb      	ldr	r3, [r7, #12]
 8000688:	2b01      	cmp	r3, #1
 800068a:	d103      	bne.n	8000694 <HAL_UART_RxCpltCallback+0x58>
 800068c:	2120      	movs	r1, #32
 800068e:	4803      	ldr	r0, [pc, #12]	; (800069c <HAL_UART_RxCpltCallback+0x60>)
 8000690:	f001 fdd9 	bl	8002246 <HAL_GPIO_TogglePin>
 8000694:	bf00      	nop
 8000696:	3710      	adds	r7, #16
 8000698:	46bd      	mov	sp, r7
 800069a:	bd80      	pop	{r7, pc}
 800069c:	40020000 	.word	0x40020000
 80006a0:	200001b4 	.word	0x200001b4
 80006a4:	20000170 	.word	0x20000170
 80006a8:	20000108 	.word	0x20000108
 80006ac:	200001f8 	.word	0x200001f8
 80006b0:	2000016c 	.word	0x2000016c
 80006b4:	200000a4 	.word	0x200000a4

080006b8 <printStr_extern>:
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b082      	sub	sp, #8
 80006bc:	af00      	add	r7, sp, #0
 80006be:	6078      	str	r0, [r7, #4]
 80006c0:	4b0a      	ldr	r3, [pc, #40]	; (80006ec <printStr_extern+0x34>)
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	f04f 31ff 	mov.w	r1, #4294967295
 80006c8:	4618      	mov	r0, r3
 80006ca:	f004 fa7b 	bl	8004bc4 <xQueueSemaphoreTake>
 80006ce:	6878      	ldr	r0, [r7, #4]
 80006d0:	f000 f80e 	bl	80006f0 <printStr_local_extern>
 80006d4:	4b05      	ldr	r3, [pc, #20]	; (80006ec <printStr_extern+0x34>)
 80006d6:	6818      	ldr	r0, [r3, #0]
 80006d8:	2300      	movs	r3, #0
 80006da:	2200      	movs	r2, #0
 80006dc:	2100      	movs	r1, #0
 80006de:	f003 fff7 	bl	80046d0 <xQueueGenericSend>
 80006e2:	bf00      	nop
 80006e4:	3708      	adds	r7, #8
 80006e6:	46bd      	mov	sp, r7
 80006e8:	bd80      	pop	{r7, pc}
 80006ea:	bf00      	nop
 80006ec:	20000174 	.word	0x20000174

080006f0 <printStr_local_extern>:
 80006f0:	b580      	push	{r7, lr}
 80006f2:	b082      	sub	sp, #8
 80006f4:	af00      	add	r7, sp, #0
 80006f6:	6078      	str	r0, [r7, #4]
 80006f8:	6878      	ldr	r0, [r7, #4]
 80006fa:	f7ff fd7b 	bl	80001f4 <strlen>
 80006fe:	4603      	mov	r3, r0
 8000700:	b29a      	uxth	r2, r3
 8000702:	f04f 33ff 	mov.w	r3, #4294967295
 8000706:	6879      	ldr	r1, [r7, #4]
 8000708:	4803      	ldr	r0, [pc, #12]	; (8000718 <printStr_local_extern+0x28>)
 800070a:	f002 fd4e 	bl	80031aa <HAL_UART_Transmit>
 800070e:	bf00      	nop
 8000710:	3708      	adds	r7, #8
 8000712:	46bd      	mov	sp, r7
 8000714:	bd80      	pop	{r7, pc}
 8000716:	bf00      	nop
 8000718:	200001f8 	.word	0x200001f8

0800071c <initialize_sensor_datalink>:
static void sendStringSensor(char* tx_string);

/******************************************************************************
******************************************************************************/
void initialize_sensor_datalink(void)
{
 800071c:	b580      	push	{r7, lr}
 800071e:	af00      	add	r7, sp, #0
	configure_usart_extern();
 8000720:	f7ff ff64 	bl	80005ec <configure_usart_extern>
}
 8000724:	bf00      	nop
 8000726:	bd80      	pop	{r7, pc}

08000728 <initialize_hostPC_datalink>:

void initialize_hostPC_datalink(void){
 8000728:	b580      	push	{r7, lr}
 800072a:	af00      	add	r7, sp, #0
	configure_usart_hostPC();
 800072c:	f7ff ff76 	bl	800061c <configure_usart_hostPC>
}
 8000730:	bf00      	nop
 8000732:	bd80      	pop	{r7, pc}

08000734 <sendStringSensor>:

/******************************************************************************
this function calculates the checksum and sends a given input string to the uart.
******************************************************************************/
static void sendStringSensor(char* tx_string)
{
 8000734:	b580      	push	{r7, lr}
 8000736:	b086      	sub	sp, #24
 8000738:	af00      	add	r7, sp, #0
 800073a:	6078      	str	r0, [r7, #4]
	uint8_t checksum;
	uint16_t str_length;

	// Check the length of the command
	str_length = strlen((char *)tx_string)-1;
 800073c:	6878      	ldr	r0, [r7, #4]
 800073e:	f7ff fd59 	bl	80001f4 <strlen>
 8000742:	4603      	mov	r3, r0
 8000744:	b29b      	uxth	r3, r3
 8000746:	3b01      	subs	r3, #1
 8000748:	81fb      	strh	r3, [r7, #14]

	// Compute the checksum
	checksum = tx_string[0];
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	781b      	ldrb	r3, [r3, #0]
 800074e:	75fb      	strb	r3, [r7, #23]
	for (int idx = 1; idx < str_length-2; idx++) {
 8000750:	2301      	movs	r3, #1
 8000752:	613b      	str	r3, [r7, #16]
 8000754:	e009      	b.n	800076a <sendStringSensor+0x36>
		checksum ^= tx_string[idx];
 8000756:	693b      	ldr	r3, [r7, #16]
 8000758:	687a      	ldr	r2, [r7, #4]
 800075a:	4413      	add	r3, r2
 800075c:	781a      	ldrb	r2, [r3, #0]
 800075e:	7dfb      	ldrb	r3, [r7, #23]
 8000760:	4053      	eors	r3, r2
 8000762:	75fb      	strb	r3, [r7, #23]
	for (int idx = 1; idx < str_length-2; idx++) {
 8000764:	693b      	ldr	r3, [r7, #16]
 8000766:	3301      	adds	r3, #1
 8000768:	613b      	str	r3, [r7, #16]
 800076a:	89fb      	ldrh	r3, [r7, #14]
 800076c:	3b02      	subs	r3, #2
 800076e:	693a      	ldr	r2, [r7, #16]
 8000770:	429a      	cmp	r2, r3
 8000772:	dbf0      	blt.n	8000756 <sendStringSensor+0x22>
	}

	sprintf(&tx_string[str_length-2], "%02x\n", checksum);
 8000774:	89fb      	ldrh	r3, [r7, #14]
 8000776:	3b02      	subs	r3, #2
 8000778:	687a      	ldr	r2, [r7, #4]
 800077a:	4413      	add	r3, r2
 800077c:	7dfa      	ldrb	r2, [r7, #23]
 800077e:	4905      	ldr	r1, [pc, #20]	; (8000794 <sendStringSensor+0x60>)
 8000780:	4618      	mov	r0, r3
 8000782:	f006 fc7f 	bl	8007084 <siprintf>
	printStr_extern(tx_string);
 8000786:	6878      	ldr	r0, [r7, #4]
 8000788:	f7ff ff96 	bl	80006b8 <printStr_extern>
}
 800078c:	bf00      	nop
 800078e:	3718      	adds	r7, #24
 8000790:	46bd      	mov	sp, r7
 8000792:	bd80      	pop	{r7, pc}
 8000794:	08007928 	.word	0x08007928

08000798 <parse_sensor_message>:

/******************************************************************************
This function parses the queue to identify received messages.
******************************************************************************/
void parse_sensor_message(struct CommMessage* currentRxMessage) // updated to include new sensors
{
 8000798:	b580      	push	{r7, lr}
 800079a:	b09c      	sub	sp, #112	; 0x70
 800079c:	af00      	add	r7, sp, #0
 800079e:	6078      	str	r0, [r7, #4]
	static uint16_t sensorIdIdx = 0, MessageIdIdx = 0, ParamIdx = 0, checksumIdx = 0;
	static char sensorId[6],CSStr[3];
	static uint8_t checksum_val;
	static const struct CommMessage EmptyMessage = {0};

	while(xQueueReceive(Queue_extern_UART, &CurrentChar, portMAX_DELAY) == pdPASS && currentRxMessage->IsMessageReady == false)  // as long as there are characters in the queue.
 80007a0:	e135      	b.n	8000a0e <parse_sensor_message+0x276>
	{
		if (CurrentChar == '$'){ //Reset State Machine
 80007a2:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 80007a6:	2b24      	cmp	r3, #36	; 0x24
 80007a8:	d118      	bne.n	80007dc <parse_sensor_message+0x44>
			checksum_val = CurrentChar;
 80007aa:	f897 206f 	ldrb.w	r2, [r7, #111]	; 0x6f
 80007ae:	4ba5      	ldr	r3, [pc, #660]	; (8000a44 <parse_sensor_message+0x2ac>)
 80007b0:	701a      	strb	r2, [r3, #0]
			sensorIdIdx = 0;
 80007b2:	4ba5      	ldr	r3, [pc, #660]	; (8000a48 <parse_sensor_message+0x2b0>)
 80007b4:	2200      	movs	r2, #0
 80007b6:	801a      	strh	r2, [r3, #0]
			MessageIdIdx = 0;
 80007b8:	4ba4      	ldr	r3, [pc, #656]	; (8000a4c <parse_sensor_message+0x2b4>)
 80007ba:	2200      	movs	r2, #0
 80007bc:	801a      	strh	r2, [r3, #0]
			ParamIdx = 0;
 80007be:	4ba4      	ldr	r3, [pc, #656]	; (8000a50 <parse_sensor_message+0x2b8>)
 80007c0:	2200      	movs	r2, #0
 80007c2:	801a      	strh	r2, [r3, #0]
			checksumIdx = 0;
 80007c4:	4ba3      	ldr	r3, [pc, #652]	; (8000a54 <parse_sensor_message+0x2bc>)
 80007c6:	2200      	movs	r2, #0
 80007c8:	801a      	strh	r2, [r3, #0]
			currentState = SensorID_S;
 80007ca:	4ba3      	ldr	r3, [pc, #652]	; (8000a58 <parse_sensor_message+0x2c0>)
 80007cc:	2201      	movs	r2, #1
 80007ce:	701a      	strb	r2, [r3, #0]
			*currentRxMessage = EmptyMessage;
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	461a      	mov	r2, r3
 80007d4:	2300      	movs	r3, #0
 80007d6:	6013      	str	r3, [r2, #0]
 80007d8:	6053      	str	r3, [r2, #4]
			continue;
 80007da:	e118      	b.n	8000a0e <parse_sensor_message+0x276>
		}

		// TO DO: we must calculate the received checksum!
		switch (currentState)
 80007dc:	4b9e      	ldr	r3, [pc, #632]	; (8000a58 <parse_sensor_message+0x2c0>)
 80007de:	781b      	ldrb	r3, [r3, #0]
 80007e0:	2b05      	cmp	r3, #5
 80007e2:	f200 8114 	bhi.w	8000a0e <parse_sensor_message+0x276>
 80007e6:	a201      	add	r2, pc, #4	; (adr r2, 80007ec <parse_sensor_message+0x54>)
 80007e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007ec:	08000a0f 	.word	0x08000a0f
 80007f0:	08000805 	.word	0x08000805
 80007f4:	080008d5 	.word	0x080008d5
 80007f8:	08000931 	.word	0x08000931
 80007fc:	08000983 	.word	0x08000983
 8000800:	080009a3 	.word	0x080009a3
		{
			case Waiting_S: // Do nothing
				break;
			case SensorID_S: //Get Sensor ID Code
				checksum_val ^= CurrentChar;
 8000804:	4b8f      	ldr	r3, [pc, #572]	; (8000a44 <parse_sensor_message+0x2ac>)
 8000806:	781a      	ldrb	r2, [r3, #0]
 8000808:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 800080c:	4053      	eors	r3, r2
 800080e:	b2da      	uxtb	r2, r3
 8000810:	4b8c      	ldr	r3, [pc, #560]	; (8000a44 <parse_sensor_message+0x2ac>)
 8000812:	701a      	strb	r2, [r3, #0]
				if(CurrentChar == ','){
 8000814:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8000818:	2b2c      	cmp	r3, #44	; 0x2c
 800081a:	d103      	bne.n	8000824 <parse_sensor_message+0x8c>
					currentState = MessageID_S;
 800081c:	4b8e      	ldr	r3, [pc, #568]	; (8000a58 <parse_sensor_message+0x2c0>)
 800081e:	2202      	movs	r2, #2
 8000820:	701a      	strb	r2, [r3, #0]
					break;
 8000822:	e0f4      	b.n	8000a0e <parse_sensor_message+0x276>
				}
				else if (sensorIdIdx < 5){
 8000824:	4b88      	ldr	r3, [pc, #544]	; (8000a48 <parse_sensor_message+0x2b0>)
 8000826:	881b      	ldrh	r3, [r3, #0]
 8000828:	2b04      	cmp	r3, #4
 800082a:	d80a      	bhi.n	8000842 <parse_sensor_message+0xaa>
					sensorId[sensorIdIdx++] = CurrentChar;
 800082c:	4b86      	ldr	r3, [pc, #536]	; (8000a48 <parse_sensor_message+0x2b0>)
 800082e:	881b      	ldrh	r3, [r3, #0]
 8000830:	1c5a      	adds	r2, r3, #1
 8000832:	b291      	uxth	r1, r2
 8000834:	4a84      	ldr	r2, [pc, #528]	; (8000a48 <parse_sensor_message+0x2b0>)
 8000836:	8011      	strh	r1, [r2, #0]
 8000838:	461a      	mov	r2, r3
 800083a:	f897 106f 	ldrb.w	r1, [r7, #111]	; 0x6f
 800083e:	4b87      	ldr	r3, [pc, #540]	; (8000a5c <parse_sensor_message+0x2c4>)
 8000840:	5499      	strb	r1, [r3, r2]
				}
				if(sensorIdIdx == 5){
 8000842:	4b81      	ldr	r3, [pc, #516]	; (8000a48 <parse_sensor_message+0x2b0>)
 8000844:	881b      	ldrh	r3, [r3, #0]
 8000846:	2b05      	cmp	r3, #5
 8000848:	f040 80e1 	bne.w	8000a0e <parse_sensor_message+0x276>
				    // Add NULL Terminator
				    sensorId[sensorIdIdx] = '\0';
 800084c:	4b7e      	ldr	r3, [pc, #504]	; (8000a48 <parse_sensor_message+0x2b0>)
 800084e:	881b      	ldrh	r3, [r3, #0]
 8000850:	461a      	mov	r2, r3
 8000852:	4b82      	ldr	r3, [pc, #520]	; (8000a5c <parse_sensor_message+0x2c4>)
 8000854:	2100      	movs	r1, #0
 8000856:	5499      	strb	r1, [r3, r2]

				    if(strcmp(sensorId, "CNTRL") == 0) // Sensor ID: Controller
 8000858:	4981      	ldr	r1, [pc, #516]	; (8000a60 <parse_sensor_message+0x2c8>)
 800085a:	4880      	ldr	r0, [pc, #512]	; (8000a5c <parse_sensor_message+0x2c4>)
 800085c:	f7ff fcc0 	bl	80001e0 <strcmp>
 8000860:	4603      	mov	r3, r0
 8000862:	2b00      	cmp	r3, #0
 8000864:	d103      	bne.n	800086e <parse_sensor_message+0xd6>
				        currentRxMessage->SensorID = Controller;
 8000866:	687b      	ldr	r3, [r7, #4]
 8000868:	2201      	movs	r2, #1
 800086a:	701a      	strb	r2, [r3, #0]
 800086c:	e0cf      	b.n	8000a0e <parse_sensor_message+0x276>
				    else if(strcmp(sensorId, "ACST1") == 0) // Sensor ID: Acoustic
 800086e:	497d      	ldr	r1, [pc, #500]	; (8000a64 <parse_sensor_message+0x2cc>)
 8000870:	487a      	ldr	r0, [pc, #488]	; (8000a5c <parse_sensor_message+0x2c4>)
 8000872:	f7ff fcb5 	bl	80001e0 <strcmp>
 8000876:	4603      	mov	r3, r0
 8000878:	2b00      	cmp	r3, #0
 800087a:	d103      	bne.n	8000884 <parse_sensor_message+0xec>
				        currentRxMessage->SensorID = Acoustic;
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	2202      	movs	r2, #2
 8000880:	701a      	strb	r2, [r3, #0]
 8000882:	e0c4      	b.n	8000a0e <parse_sensor_message+0x276>
				    // else if(strcmp(sensorId, "ACST2") == 0) // Sensor ID: Acoustic2
				    //     currentRxMessage->SensorID = Acoustic2;
				    else if(strcmp(sensorId, "PRS01") == 0) // Sensor ID: Pressure
 8000884:	4978      	ldr	r1, [pc, #480]	; (8000a68 <parse_sensor_message+0x2d0>)
 8000886:	4875      	ldr	r0, [pc, #468]	; (8000a5c <parse_sensor_message+0x2c4>)
 8000888:	f7ff fcaa 	bl	80001e0 <strcmp>
 800088c:	4603      	mov	r3, r0
 800088e:	2b00      	cmp	r3, #0
 8000890:	d103      	bne.n	800089a <parse_sensor_message+0x102>
				        currentRxMessage->SensorID = Pressure;
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	2203      	movs	r2, #3
 8000896:	701a      	strb	r2, [r3, #0]
 8000898:	e0b9      	b.n	8000a0e <parse_sensor_message+0x276>
				    //     currentRxMessage->SensorID = Pressure2;
				    // else if(strcmp(sensorId, "FLRAT") == 0) // Sensor ID: Flow Rate
				    //     currentRxMessage->SensorID = FlowRate;
				    // else if(strcmp(sensorId, "CORRN") == 0) // Sensor ID: Corrosion
				    //     currentRxMessage->SensorID = Corrosion;
				    else if(strcmp(sensorId, "HZ21W") == 0) // Sensor ID: Hall Effect
 800089a:	4974      	ldr	r1, [pc, #464]	; (8000a6c <parse_sensor_message+0x2d4>)
 800089c:	486f      	ldr	r0, [pc, #444]	; (8000a5c <parse_sensor_message+0x2c4>)
 800089e:	f7ff fc9f 	bl	80001e0 <strcmp>
 80008a2:	4603      	mov	r3, r0
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	d103      	bne.n	80008b0 <parse_sensor_message+0x118>
				        currentRxMessage->SensorID = HallEffect;
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	2205      	movs	r2, #5
 80008ac:	701a      	strb	r2, [r3, #0]
 80008ae:	e0ae      	b.n	8000a0e <parse_sensor_message+0x276>
				    else if(strcmp(sensorId, "DS18B") == 0) // Sensor ID: Temperature
 80008b0:	496f      	ldr	r1, [pc, #444]	; (8000a70 <parse_sensor_message+0x2d8>)
 80008b2:	486a      	ldr	r0, [pc, #424]	; (8000a5c <parse_sensor_message+0x2c4>)
 80008b4:	f7ff fc94 	bl	80001e0 <strcmp>
 80008b8:	4603      	mov	r3, r0
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	d103      	bne.n	80008c6 <parse_sensor_message+0x12e>
				        currentRxMessage->SensorID = Temperature;
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	2204      	movs	r2, #4
 80008c2:	701a      	strb	r2, [r3, #0]
 80008c4:	e0a3      	b.n	8000a0e <parse_sensor_message+0x276>
				    else { // Sensor ID: None
				        currentRxMessage->SensorID = None;
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	2200      	movs	r2, #0
 80008ca:	701a      	strb	r2, [r3, #0]
				        currentState = Waiting_S;
 80008cc:	4b62      	ldr	r3, [pc, #392]	; (8000a58 <parse_sensor_message+0x2c0>)
 80008ce:	2200      	movs	r2, #0
 80008d0:	701a      	strb	r2, [r3, #0]
				    }
				}
				break;
 80008d2:	e09c      	b.n	8000a0e <parse_sensor_message+0x276>

			case MessageID_S: //Get Message Type
				checksum_val ^= CurrentChar;
 80008d4:	4b5b      	ldr	r3, [pc, #364]	; (8000a44 <parse_sensor_message+0x2ac>)
 80008d6:	781a      	ldrb	r2, [r3, #0]
 80008d8:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 80008dc:	4053      	eors	r3, r2
 80008de:	b2da      	uxtb	r2, r3
 80008e0:	4b58      	ldr	r3, [pc, #352]	; (8000a44 <parse_sensor_message+0x2ac>)
 80008e2:	701a      	strb	r2, [r3, #0]
				if(CurrentChar == ','){
 80008e4:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 80008e8:	2b2c      	cmp	r3, #44	; 0x2c
 80008ea:	d103      	bne.n	80008f4 <parse_sensor_message+0x15c>
					currentState = ParamsID_S;
 80008ec:	4b5a      	ldr	r3, [pc, #360]	; (8000a58 <parse_sensor_message+0x2c0>)
 80008ee:	2203      	movs	r2, #3
 80008f0:	701a      	strb	r2, [r3, #0]
 80008f2:	e08c      	b.n	8000a0e <parse_sensor_message+0x276>
				}
				else{
					if(MessageIdIdx < 2){
 80008f4:	4b55      	ldr	r3, [pc, #340]	; (8000a4c <parse_sensor_message+0x2b4>)
 80008f6:	881b      	ldrh	r3, [r3, #0]
 80008f8:	2b01      	cmp	r3, #1
 80008fa:	d812      	bhi.n	8000922 <parse_sensor_message+0x18a>
						currentRxMessage->messageId = currentRxMessage->messageId * 10;
 80008fc:	687b      	ldr	r3, [r7, #4]
 80008fe:	785b      	ldrb	r3, [r3, #1]
 8000900:	461a      	mov	r2, r3
 8000902:	0092      	lsls	r2, r2, #2
 8000904:	4413      	add	r3, r2
 8000906:	005b      	lsls	r3, r3, #1
 8000908:	b2da      	uxtb	r2, r3
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	705a      	strb	r2, [r3, #1]
						currentRxMessage->messageId += CurrentChar -  '0';
 800090e:	687b      	ldr	r3, [r7, #4]
 8000910:	785a      	ldrb	r2, [r3, #1]
 8000912:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8000916:	4413      	add	r3, r2
 8000918:	b2db      	uxtb	r3, r3
 800091a:	3b30      	subs	r3, #48	; 0x30
 800091c:	b2da      	uxtb	r2, r3
 800091e:	687b      	ldr	r3, [r7, #4]
 8000920:	705a      	strb	r2, [r3, #1]
					}
					MessageIdIdx++;
 8000922:	4b4a      	ldr	r3, [pc, #296]	; (8000a4c <parse_sensor_message+0x2b4>)
 8000924:	881b      	ldrh	r3, [r3, #0]
 8000926:	3301      	adds	r3, #1
 8000928:	b29a      	uxth	r2, r3
 800092a:	4b48      	ldr	r3, [pc, #288]	; (8000a4c <parse_sensor_message+0x2b4>)
 800092c:	801a      	strh	r2, [r3, #0]
				}
				break;
 800092e:	e06e      	b.n	8000a0e <parse_sensor_message+0x276>

			case ParamsID_S: //Get Message Parameter (Period/Data)
				checksum_val ^= CurrentChar;
 8000930:	4b44      	ldr	r3, [pc, #272]	; (8000a44 <parse_sensor_message+0x2ac>)
 8000932:	781a      	ldrb	r2, [r3, #0]
 8000934:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8000938:	4053      	eors	r3, r2
 800093a:	b2da      	uxtb	r2, r3
 800093c:	4b41      	ldr	r3, [pc, #260]	; (8000a44 <parse_sensor_message+0x2ac>)
 800093e:	701a      	strb	r2, [r3, #0]

				if(CurrentChar == ','){
 8000940:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8000944:	2b2c      	cmp	r3, #44	; 0x2c
 8000946:	d103      	bne.n	8000950 <parse_sensor_message+0x1b8>
					currentState = Star_S;
 8000948:	4b43      	ldr	r3, [pc, #268]	; (8000a58 <parse_sensor_message+0x2c0>)
 800094a:	2204      	movs	r2, #4
 800094c:	701a      	strb	r2, [r3, #0]
 800094e:	e05e      	b.n	8000a0e <parse_sensor_message+0x276>
				}
				else if(ParamIdx < 8){
 8000950:	4b3f      	ldr	r3, [pc, #252]	; (8000a50 <parse_sensor_message+0x2b8>)
 8000952:	881b      	ldrh	r3, [r3, #0]
 8000954:	2b07      	cmp	r3, #7
 8000956:	d85a      	bhi.n	8000a0e <parse_sensor_message+0x276>
					currentRxMessage->params = currentRxMessage->params * 10;
 8000958:	687b      	ldr	r3, [r7, #4]
 800095a:	885b      	ldrh	r3, [r3, #2]
 800095c:	461a      	mov	r2, r3
 800095e:	0092      	lsls	r2, r2, #2
 8000960:	4413      	add	r3, r2
 8000962:	005b      	lsls	r3, r3, #1
 8000964:	b29a      	uxth	r2, r3
 8000966:	687b      	ldr	r3, [r7, #4]
 8000968:	805a      	strh	r2, [r3, #2]
					currentRxMessage->params += CurrentChar -  '0';
 800096a:	687b      	ldr	r3, [r7, #4]
 800096c:	885a      	ldrh	r2, [r3, #2]
 800096e:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8000972:	b29b      	uxth	r3, r3
 8000974:	4413      	add	r3, r2
 8000976:	b29b      	uxth	r3, r3
 8000978:	3b30      	subs	r3, #48	; 0x30
 800097a:	b29a      	uxth	r2, r3
 800097c:	687b      	ldr	r3, [r7, #4]
 800097e:	805a      	strh	r2, [r3, #2]
				}
				break;
 8000980:	e045      	b.n	8000a0e <parse_sensor_message+0x276>

			case Star_S:
				checksum_val ^= CurrentChar;
 8000982:	4b30      	ldr	r3, [pc, #192]	; (8000a44 <parse_sensor_message+0x2ac>)
 8000984:	781a      	ldrb	r2, [r3, #0]
 8000986:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 800098a:	4053      	eors	r3, r2
 800098c:	b2da      	uxtb	r2, r3
 800098e:	4b2d      	ldr	r3, [pc, #180]	; (8000a44 <parse_sensor_message+0x2ac>)
 8000990:	701a      	strb	r2, [r3, #0]
				if(CurrentChar == ','){
 8000992:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8000996:	2b2c      	cmp	r3, #44	; 0x2c
 8000998:	d139      	bne.n	8000a0e <parse_sensor_message+0x276>
					currentState = CS_S;
 800099a:	4b2f      	ldr	r3, [pc, #188]	; (8000a58 <parse_sensor_message+0x2c0>)
 800099c:	2205      	movs	r2, #5
 800099e:	701a      	strb	r2, [r3, #0]
				}
				break;
 80009a0:	e035      	b.n	8000a0e <parse_sensor_message+0x276>

			case CS_S:
				if(checksumIdx < 2){
 80009a2:	4b2c      	ldr	r3, [pc, #176]	; (8000a54 <parse_sensor_message+0x2bc>)
 80009a4:	881b      	ldrh	r3, [r3, #0]
 80009a6:	2b01      	cmp	r3, #1
 80009a8:	d80a      	bhi.n	80009c0 <parse_sensor_message+0x228>
					CSStr[checksumIdx++] = CurrentChar;
 80009aa:	4b2a      	ldr	r3, [pc, #168]	; (8000a54 <parse_sensor_message+0x2bc>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	1c5a      	adds	r2, r3, #1
 80009b0:	b291      	uxth	r1, r2
 80009b2:	4a28      	ldr	r2, [pc, #160]	; (8000a54 <parse_sensor_message+0x2bc>)
 80009b4:	8011      	strh	r1, [r2, #0]
 80009b6:	461a      	mov	r2, r3
 80009b8:	f897 106f 	ldrb.w	r1, [r7, #111]	; 0x6f
 80009bc:	4b2d      	ldr	r3, [pc, #180]	; (8000a74 <parse_sensor_message+0x2dc>)
 80009be:	5499      	strb	r1, [r3, r2]
				}
				if(checksumIdx == 2){
 80009c0:	4b24      	ldr	r3, [pc, #144]	; (8000a54 <parse_sensor_message+0x2bc>)
 80009c2:	881b      	ldrh	r3, [r3, #0]
 80009c4:	2b02      	cmp	r3, #2
 80009c6:	d121      	bne.n	8000a0c <parse_sensor_message+0x274>
					currentState = Waiting_S;
 80009c8:	4b23      	ldr	r3, [pc, #140]	; (8000a58 <parse_sensor_message+0x2c0>)
 80009ca:	2200      	movs	r2, #0
 80009cc:	701a      	strb	r2, [r3, #0]
					CSStr[checksumIdx] = '\0';
 80009ce:	4b21      	ldr	r3, [pc, #132]	; (8000a54 <parse_sensor_message+0x2bc>)
 80009d0:	881b      	ldrh	r3, [r3, #0]
 80009d2:	461a      	mov	r2, r3
 80009d4:	4b27      	ldr	r3, [pc, #156]	; (8000a74 <parse_sensor_message+0x2dc>)
 80009d6:	2100      	movs	r1, #0
 80009d8:	5499      	strb	r1, [r3, r2]
					currentRxMessage->checksum = strtol(CSStr, NULL, 16);
 80009da:	2210      	movs	r2, #16
 80009dc:	2100      	movs	r1, #0
 80009de:	4825      	ldr	r0, [pc, #148]	; (8000a74 <parse_sensor_message+0x2dc>)
 80009e0:	f006 fbf2 	bl	80071c8 <strtol>
 80009e4:	4603      	mov	r3, r0
 80009e6:	b2da      	uxtb	r2, r3
 80009e8:	687b      	ldr	r3, [r7, #4]
 80009ea:	711a      	strb	r2, [r3, #4]
					if(currentRxMessage->checksum == checksum_val){
 80009ec:	687b      	ldr	r3, [r7, #4]
 80009ee:	791a      	ldrb	r2, [r3, #4]
 80009f0:	4b14      	ldr	r3, [pc, #80]	; (8000a44 <parse_sensor_message+0x2ac>)
 80009f2:	781b      	ldrb	r3, [r3, #0]
 80009f4:	429a      	cmp	r2, r3
 80009f6:	d106      	bne.n	8000a06 <parse_sensor_message+0x26e>
						currentRxMessage->IsMessageReady = true;
 80009f8:	687b      	ldr	r3, [r7, #4]
 80009fa:	2201      	movs	r2, #1
 80009fc:	719a      	strb	r2, [r3, #6]
						currentRxMessage->IsCheckSumValid = true;
 80009fe:	687b      	ldr	r3, [r7, #4]
 8000a00:	2201      	movs	r2, #1
 8000a02:	715a      	strb	r2, [r3, #5]
 8000a04:	e002      	b.n	8000a0c <parse_sensor_message+0x274>
					}else{
						currentRxMessage->IsCheckSumValid = false;
 8000a06:	687b      	ldr	r3, [r7, #4]
 8000a08:	2200      	movs	r2, #0
 8000a0a:	715a      	strb	r2, [r3, #5]
					}
				}
					break;
 8000a0c:	bf00      	nop
	while(xQueueReceive(Queue_extern_UART, &CurrentChar, portMAX_DELAY) == pdPASS && currentRxMessage->IsMessageReady == false)  // as long as there are characters in the queue.
 8000a0e:	4b1a      	ldr	r3, [pc, #104]	; (8000a78 <parse_sensor_message+0x2e0>)
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	f107 016f 	add.w	r1, r7, #111	; 0x6f
 8000a16:	f04f 32ff 	mov.w	r2, #4294967295
 8000a1a:	4618      	mov	r0, r3
 8000a1c:	f003 fff2 	bl	8004a04 <xQueueReceive>
 8000a20:	4603      	mov	r3, r0
 8000a22:	2b01      	cmp	r3, #1
 8000a24:	d107      	bne.n	8000a36 <parse_sensor_message+0x29e>
 8000a26:	687b      	ldr	r3, [r7, #4]
 8000a28:	799b      	ldrb	r3, [r3, #6]
 8000a2a:	f083 0301 	eor.w	r3, r3, #1
 8000a2e:	b2db      	uxtb	r3, r3
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	f47f aeb6 	bne.w	80007a2 <parse_sensor_message+0xa>
			}
		}

	if(currentRxMessage->IsMessageReady == true) {
 8000a36:	687b      	ldr	r3, [r7, #4]
 8000a38:	799b      	ldrb	r3, [r3, #6]
 8000a3a:	2b00      	cmp	r3, #0
		// 		currentRxMessage->SensorID, currentRxMessage->messageId,
		// 		currentRxMessage->params, currentRxMessage->checksum);
		// print_str(str);

	}
}
 8000a3c:	bf00      	nop
 8000a3e:	3770      	adds	r7, #112	; 0x70
 8000a40:	46bd      	mov	sp, r7
 8000a42:	bd80      	pop	{r7, pc}
 8000a44:	20000178 	.word	0x20000178
 8000a48:	2000017a 	.word	0x2000017a
 8000a4c:	2000017c 	.word	0x2000017c
 8000a50:	2000017e 	.word	0x2000017e
 8000a54:	20000180 	.word	0x20000180
 8000a58:	20000182 	.word	0x20000182
 8000a5c:	20000184 	.word	0x20000184
 8000a60:	08007930 	.word	0x08007930
 8000a64:	08007938 	.word	0x08007938
 8000a68:	08007940 	.word	0x08007940
 8000a6c:	08007948 	.word	0x08007948
 8000a70:	08007950 	.word	0x08007950
 8000a74:	2000018c 	.word	0x2000018c
 8000a78:	2000016c 	.word	0x2000016c

08000a7c <parse_hostPC_message>:



enum HostPCCommands parse_hostPC_message(){
 8000a7c:	b580      	push	{r7, lr}
 8000a7e:	b082      	sub	sp, #8
 8000a80:	af00      	add	r7, sp, #0
	uint8_t CurrentChar;
	static char HostPCMessage[10];
	static uint16_t HostPCMessage_IDX = 0;


	while (xQueueReceive(Queue_hostPC_UART, &CurrentChar, portMAX_DELAY) == pdPASS){
 8000a82:	e032      	b.n	8000aea <parse_hostPC_message+0x6e>
		if(CurrentChar == '\n' || CurrentChar == '\r'|| HostPCMessage_IDX >=6){
 8000a84:	79fb      	ldrb	r3, [r7, #7]
 8000a86:	2b0a      	cmp	r3, #10
 8000a88:	d006      	beq.n	8000a98 <parse_hostPC_message+0x1c>
 8000a8a:	79fb      	ldrb	r3, [r7, #7]
 8000a8c:	2b0d      	cmp	r3, #13
 8000a8e:	d003      	beq.n	8000a98 <parse_hostPC_message+0x1c>
 8000a90:	4b1e      	ldr	r3, [pc, #120]	; (8000b0c <parse_hostPC_message+0x90>)
 8000a92:	881b      	ldrh	r3, [r3, #0]
 8000a94:	2b05      	cmp	r3, #5
 8000a96:	d91e      	bls.n	8000ad6 <parse_hostPC_message+0x5a>
			HostPCMessage[HostPCMessage_IDX++] = '\0';
 8000a98:	4b1c      	ldr	r3, [pc, #112]	; (8000b0c <parse_hostPC_message+0x90>)
 8000a9a:	881b      	ldrh	r3, [r3, #0]
 8000a9c:	1c5a      	adds	r2, r3, #1
 8000a9e:	b291      	uxth	r1, r2
 8000aa0:	4a1a      	ldr	r2, [pc, #104]	; (8000b0c <parse_hostPC_message+0x90>)
 8000aa2:	8011      	strh	r1, [r2, #0]
 8000aa4:	461a      	mov	r2, r3
 8000aa6:	4b1a      	ldr	r3, [pc, #104]	; (8000b10 <parse_hostPC_message+0x94>)
 8000aa8:	2100      	movs	r1, #0
 8000aaa:	5499      	strb	r1, [r3, r2]
			HostPCMessage_IDX = 0;
 8000aac:	4b17      	ldr	r3, [pc, #92]	; (8000b0c <parse_hostPC_message+0x90>)
 8000aae:	2200      	movs	r2, #0
 8000ab0:	801a      	strh	r2, [r3, #0]
			if(strcmp(HostPCMessage, "START") == 0)
 8000ab2:	4918      	ldr	r1, [pc, #96]	; (8000b14 <parse_hostPC_message+0x98>)
 8000ab4:	4816      	ldr	r0, [pc, #88]	; (8000b10 <parse_hostPC_message+0x94>)
 8000ab6:	f7ff fb93 	bl	80001e0 <strcmp>
 8000aba:	4603      	mov	r3, r0
 8000abc:	2b00      	cmp	r3, #0
 8000abe:	d101      	bne.n	8000ac4 <parse_hostPC_message+0x48>
				return PC_Command_START;
 8000ac0:	2301      	movs	r3, #1
 8000ac2:	e01e      	b.n	8000b02 <parse_hostPC_message+0x86>
			else if(strcmp(HostPCMessage, "RESET") == 0)
 8000ac4:	4914      	ldr	r1, [pc, #80]	; (8000b18 <parse_hostPC_message+0x9c>)
 8000ac6:	4812      	ldr	r0, [pc, #72]	; (8000b10 <parse_hostPC_message+0x94>)
 8000ac8:	f7ff fb8a 	bl	80001e0 <strcmp>
 8000acc:	4603      	mov	r3, r0
 8000ace:	2b00      	cmp	r3, #0
 8000ad0:	d10b      	bne.n	8000aea <parse_hostPC_message+0x6e>
				return PC_Command_RESET;
 8000ad2:	2302      	movs	r3, #2
 8000ad4:	e015      	b.n	8000b02 <parse_hostPC_message+0x86>
		}else{
			HostPCMessage[HostPCMessage_IDX++] = CurrentChar;
 8000ad6:	4b0d      	ldr	r3, [pc, #52]	; (8000b0c <parse_hostPC_message+0x90>)
 8000ad8:	881b      	ldrh	r3, [r3, #0]
 8000ada:	1c5a      	adds	r2, r3, #1
 8000adc:	b291      	uxth	r1, r2
 8000ade:	4a0b      	ldr	r2, [pc, #44]	; (8000b0c <parse_hostPC_message+0x90>)
 8000ae0:	8011      	strh	r1, [r2, #0]
 8000ae2:	461a      	mov	r2, r3
 8000ae4:	79f9      	ldrb	r1, [r7, #7]
 8000ae6:	4b0a      	ldr	r3, [pc, #40]	; (8000b10 <parse_hostPC_message+0x94>)
 8000ae8:	5499      	strb	r1, [r3, r2]
	while (xQueueReceive(Queue_hostPC_UART, &CurrentChar, portMAX_DELAY) == pdPASS){
 8000aea:	4b0c      	ldr	r3, [pc, #48]	; (8000b1c <parse_hostPC_message+0xa0>)
 8000aec:	681b      	ldr	r3, [r3, #0]
 8000aee:	1df9      	adds	r1, r7, #7
 8000af0:	f04f 32ff 	mov.w	r2, #4294967295
 8000af4:	4618      	mov	r0, r3
 8000af6:	f003 ff85 	bl	8004a04 <xQueueReceive>
 8000afa:	4603      	mov	r3, r0
 8000afc:	2b01      	cmp	r3, #1
 8000afe:	d0c1      	beq.n	8000a84 <parse_hostPC_message+0x8>
		}

	}
	return PC_Command_NONE;
 8000b00:	2300      	movs	r3, #0
}
 8000b02:	4618      	mov	r0, r3
 8000b04:	3708      	adds	r7, #8
 8000b06:	46bd      	mov	sp, r7
 8000b08:	bd80      	pop	{r7, pc}
 8000b0a:	bf00      	nop
 8000b0c:	20000190 	.word	0x20000190
 8000b10:	20000194 	.word	0x20000194
 8000b14:	08007958 	.word	0x08007958
 8000b18:	08007960 	.word	0x08007960
 8000b1c:	20000170 	.word	0x20000170

08000b20 <send_sensorEnable_message>:
        break;
    }
    sendStringSensor(tx_sensor_buffer);
}

void send_sensorEnable_message(enum SensorId_t sensorType, uint16_t TimePeriod){
 8000b20:	b580      	push	{r7, lr}
 8000b22:	b0a8      	sub	sp, #160	; 0xa0
 8000b24:	af00      	add	r7, sp, #0
 8000b26:	4603      	mov	r3, r0
 8000b28:	460a      	mov	r2, r1
 8000b2a:	71fb      	strb	r3, [r7, #7]
 8000b2c:	4613      	mov	r3, r2
 8000b2e:	80bb      	strh	r3, [r7, #4]
    char tx_sensor_buffer[50];
    char str[100];

    switch(sensorType){
 8000b30:	79fb      	ldrb	r3, [r7, #7]
 8000b32:	3b02      	subs	r3, #2
 8000b34:	2b03      	cmp	r3, #3
 8000b36:	d82b      	bhi.n	8000b90 <send_sensorEnable_message+0x70>
 8000b38:	a201      	add	r2, pc, #4	; (adr r2, 8000b40 <send_sensorEnable_message+0x20>)
 8000b3a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b3e:	bf00      	nop
 8000b40:	08000b51 	.word	0x08000b51
 8000b44:	08000b61 	.word	0x08000b61
 8000b48:	08000b81 	.word	0x08000b81
 8000b4c:	08000b71 	.word	0x08000b71
    case Acoustic:
        sprintf(tx_sensor_buffer, "$ACST1,00,%08u,*,00\n", TimePeriod);
 8000b50:	88ba      	ldrh	r2, [r7, #4]
 8000b52:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8000b56:	4915      	ldr	r1, [pc, #84]	; (8000bac <send_sensorEnable_message+0x8c>)
 8000b58:	4618      	mov	r0, r3
 8000b5a:	f006 fa93 	bl	8007084 <siprintf>
		//sprintf(tx_sensor_buffer, "$ACSTC,03,%08u,*,00\n", TimePeriod);
        break;
 8000b5e:	e018      	b.n	8000b92 <send_sensorEnable_message+0x72>
    // case Acoustic2:
    //     sprintf(tx_sensor_buffer, "$ACST2,00,%08u,*,00\n", TimePeriod);
    //     break;
    case Pressure:
        sprintf(tx_sensor_buffer, "$PRS01,00,%08u,*,00\n", TimePeriod);
 8000b60:	88ba      	ldrh	r2, [r7, #4]
 8000b62:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8000b66:	4912      	ldr	r1, [pc, #72]	; (8000bb0 <send_sensorEnable_message+0x90>)
 8000b68:	4618      	mov	r0, r3
 8000b6a:	f006 fa8b 	bl	8007084 <siprintf>
        break;
 8000b6e:	e010      	b.n	8000b92 <send_sensorEnable_message+0x72>
    //     break;
    // case Corrosion:
    //     sprintf(tx_sensor_buffer, "$CORRN,00,%08u,*,00\n", TimePeriod);
    //     break;
    case HallEffect:
        sprintf(tx_sensor_buffer, "$HZ21W,00,%08u,*,00\n", TimePeriod);
 8000b70:	88ba      	ldrh	r2, [r7, #4]
 8000b72:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8000b76:	490f      	ldr	r1, [pc, #60]	; (8000bb4 <send_sensorEnable_message+0x94>)
 8000b78:	4618      	mov	r0, r3
 8000b7a:	f006 fa83 	bl	8007084 <siprintf>
        break;
 8000b7e:	e008      	b.n	8000b92 <send_sensorEnable_message+0x72>
    case Temperature:
        sprintf(tx_sensor_buffer, "$DS18B,00,%08u,*,00\n", TimePeriod);
 8000b80:	88ba      	ldrh	r2, [r7, #4]
 8000b82:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8000b86:	490c      	ldr	r1, [pc, #48]	; (8000bb8 <send_sensorEnable_message+0x98>)
 8000b88:	4618      	mov	r0, r3
 8000b8a:	f006 fa7b 	bl	8007084 <siprintf>
        break;
 8000b8e:	e000      	b.n	8000b92 <send_sensorEnable_message+0x72>
    default:
        // Optional: Handle unknown sensor type or add a default case if needed
        break;
 8000b90:	bf00      	nop
    }
    sendStringSensor(tx_sensor_buffer);
 8000b92:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8000b96:	4618      	mov	r0, r3
 8000b98:	f7ff fdcc 	bl	8000734 <sendStringSensor>
    vTaskDelay(pdMS_TO_TICKS(50));  // Add delay between messages
 8000b9c:	2032      	movs	r0, #50	; 0x32
 8000b9e:	f004 fc5b 	bl	8005458 <vTaskDelay>
}
 8000ba2:	bf00      	nop
 8000ba4:	37a0      	adds	r7, #160	; 0xa0
 8000ba6:	46bd      	mov	sp, r7
 8000ba8:	bd80      	pop	{r7, pc}
 8000baa:	bf00      	nop
 8000bac:	08007a00 	.word	0x08007a00
 8000bb0:	08007a18 	.word	0x08007a18
 8000bb4:	08007a30 	.word	0x08007a30
 8000bb8:	08007a48 	.word	0x08007a48

08000bbc <send_sensorReset_message>:


void send_sensorReset_message(void){
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	b08e      	sub	sp, #56	; 0x38
 8000bc0:	af00      	add	r7, sp, #0
	char tx_sensor_buffer[50];

	sprintf(tx_sensor_buffer, "$CNTRL,00,,*,00\n");
 8000bc2:	1d3b      	adds	r3, r7, #4
 8000bc4:	4905      	ldr	r1, [pc, #20]	; (8000bdc <send_sensorReset_message+0x20>)
 8000bc6:	4618      	mov	r0, r3
 8000bc8:	f006 fa5c 	bl	8007084 <siprintf>

	sendStringSensor(tx_sensor_buffer);
 8000bcc:	1d3b      	adds	r3, r7, #4
 8000bce:	4618      	mov	r0, r3
 8000bd0:	f7ff fdb0 	bl	8000734 <sendStringSensor>
}
 8000bd4:	bf00      	nop
 8000bd6:	3738      	adds	r7, #56	; 0x38
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	bd80      	pop	{r7, pc}
 8000bdc:	08007a60 	.word	0x08007a60

08000be0 <initialize_plotter>:
    // Format: @PLOT,sensor_id,timestamp,value\n
    sprintf(plot_buffer, "@PLOT,%d,%lu,%u\n", sensorType, timestamp, data);
    print_str(plot_buffer);
}

void initialize_plotter(void) {
 8000be0:	b580      	push	{r7, lr}
 8000be2:	af00      	add	r7, sp, #0
    print_str("@PLOT_INIT\n");
 8000be4:	4802      	ldr	r0, [pc, #8]	; (8000bf0 <initialize_plotter+0x10>)
 8000be6:	f000 fc99 	bl	800151c <print_str>
 8000bea:	bf00      	nop
 8000bec:	bd80      	pop	{r7, pc}
 8000bee:	bf00      	nop
 8000bf0:	08007aec 	.word	0x08007aec

08000bf4 <ResetMessageStruct>:
TimerHandle_t xTimer;

enum states {Start_Sensors, Parse_Sensor_Data, Disable_Sensors, Wait_};
char states_str[3][6] = {"EMPTY", "START", "RESET"};

static void ResetMessageStruct(struct CommMessage* currentRxMessage){
 8000bf4:	b480      	push	{r7}
 8000bf6:	b083      	sub	sp, #12
 8000bf8:	af00      	add	r7, sp, #0
 8000bfa:	6078      	str	r0, [r7, #4]

	static const struct CommMessage EmptyMessage = {0};
	*currentRxMessage = EmptyMessage;
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	461a      	mov	r2, r3
 8000c00:	2300      	movs	r3, #0
 8000c02:	6013      	str	r3, [r2, #0]
 8000c04:	6053      	str	r3, [r2, #4]
}
 8000c06:	bf00      	nop
 8000c08:	370c      	adds	r7, #12
 8000c0a:	46bd      	mov	sp, r7
 8000c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c10:	4770      	bx	lr
	...

08000c14 <CheckEnableSensor>:

void CheckEnableSensor( TimerHandle_t xTimer )
{
 8000c14:	b480      	push	{r7}
 8000c16:	b083      	sub	sp, #12
 8000c18:	af00      	add	r7, sp, #0
 8000c1a:	6078      	str	r0, [r7, #4]
	Sensors_Expired = 1;
 8000c1c:	4b04      	ldr	r3, [pc, #16]	; (8000c30 <CheckEnableSensor+0x1c>)
 8000c1e:	2201      	movs	r2, #1
 8000c20:	601a      	str	r2, [r3, #0]

}
 8000c22:	bf00      	nop
 8000c24:	370c      	adds	r7, #12
 8000c26:	46bd      	mov	sp, r7
 8000c28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c2c:	4770      	bx	lr
 8000c2e:	bf00      	nop
 8000c30:	200001a8 	.word	0x200001a8

08000c34 <SensorControllerTask>:

/**************************
This task is created from the main.
**************************/
void SensorControllerTask(void *params)
{
 8000c34:	b590      	push	{r4, r7, lr}
 8000c36:	f5ad 7d21 	sub.w	sp, sp, #644	; 0x284
 8000c3a:	af02      	add	r7, sp, #8
 8000c3c:	f507 731e 	add.w	r3, r7, #632	; 0x278
 8000c40:	f5a3 731d 	sub.w	r3, r3, #628	; 0x274
 8000c44:	6018      	str	r0, [r3, #0]
	// All variable declarations at the start
	struct CommMessage currentRxMessage = {0};
 8000c46:	f507 730f 	add.w	r3, r7, #572	; 0x23c
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	601a      	str	r2, [r3, #0]
 8000c4e:	605a      	str	r2, [r3, #4]
	int Acoustic_enabled = 0, Pressure_enabled = 0, HallEffect_enabled = 0, Temperature_enabled = 0; // FlowRate_enabled = 0;
 8000c50:	2300      	movs	r3, #0
 8000c52:	f8c7 3268 	str.w	r3, [r7, #616]	; 0x268
 8000c56:	2300      	movs	r3, #0
 8000c58:	f8c7 3264 	str.w	r3, [r7, #612]	; 0x264
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	f8c7 3260 	str.w	r3, [r7, #608]	; 0x260
 8000c62:	2300      	movs	r3, #0
 8000c64:	f8c7 325c 	str.w	r3, [r7, #604]	; 0x25c
	int Disabled = 0;  // Corrosion_enabled = 0;
 8000c68:	2300      	movs	r3, #0
 8000c6a:	f8c7 3258 	str.w	r3, [r7, #600]	; 0x258
	int sensorDataCounter = 0;
 8000c6e:	2300      	movs	r3, #0
 8000c70:	f8c7 3274 	str.w	r3, [r7, #628]	; 0x274
	char *PressureStatus;
	char *HallEffectStatus;
	char *TemperatureStatus;


	int retry_count = 0;
 8000c74:	2300      	movs	r3, #0
 8000c76:	f8c7 326c 	str.w	r3, [r7, #620]	; 0x26c
	const int MAX_RETRIES = 3;
 8000c7a:	2303      	movs	r3, #3
 8000c7c:	f8c7 3254 	str.w	r3, [r7, #596]	; 0x254

	// Initialize variables
	state = Wait_;
 8000c80:	2303      	movs	r3, #3
 8000c82:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
	HostPCCommand = PC_Command_NONE;
 8000c86:	2300      	movs	r3, #0
 8000c88:	f887 323b 	strb.w	r3, [r7, #571]	; 0x23b

	xTimer = xTimerCreate("Timer1", 10000, pdTRUE, (void *)0, CheckEnableSensor); // was 5000 new
 8000c8c:	4bd7      	ldr	r3, [pc, #860]	; (8000fec <SensorControllerTask+0x3b8>)
 8000c8e:	9300      	str	r3, [sp, #0]
 8000c90:	2300      	movs	r3, #0
 8000c92:	2201      	movs	r2, #1
 8000c94:	f242 7110 	movw	r1, #10000	; 0x2710
 8000c98:	48d5      	ldr	r0, [pc, #852]	; (8000ff0 <SensorControllerTask+0x3bc>)
 8000c9a:	f005 fa93 	bl	80061c4 <xTimerCreate>
 8000c9e:	4603      	mov	r3, r0
 8000ca0:	4ad4      	ldr	r2, [pc, #848]	; (8000ff4 <SensorControllerTask+0x3c0>)
 8000ca2:	6013      	str	r3, [r2, #0]

	// Initialize the plotter
	initialize_plotter();
 8000ca4:	f7ff ff9c 	bl	8000be0 <initialize_plotter>

	do {
		switch(state) {
 8000ca8:	f897 3273 	ldrb.w	r3, [r7, #627]	; 0x273
 8000cac:	2b03      	cmp	r3, #3
 8000cae:	d8fb      	bhi.n	8000ca8 <SensorControllerTask+0x74>
 8000cb0:	a201      	add	r2, pc, #4	; (adr r2, 8000cb8 <SensorControllerTask+0x84>)
 8000cb2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000cb6:	bf00      	nop
 8000cb8:	08000d43 	.word	0x08000d43
 8000cbc:	08001071 	.word	0x08001071
 8000cc0:	08001261 	.word	0x08001261
 8000cc4:	08000cc9 	.word	0x08000cc9
			case Wait_:
				sprintf(str, "Polling\r\n");
 8000cc8:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000ccc:	49ca      	ldr	r1, [pc, #808]	; (8000ff8 <SensorControllerTask+0x3c4>)
 8000cce:	4618      	mov	r0, r3
 8000cd0:	f006 f9d8 	bl	8007084 <siprintf>
				print_str(str);
 8000cd4:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000cd8:	4618      	mov	r0, r3
 8000cda:	f000 fc1f 	bl	800151c <print_str>

				if(xQueueReceive(Queue_HostPC_Data, &HostPCCommand, 0) == pdPASS) {
 8000cde:	4bc7      	ldr	r3, [pc, #796]	; (8000ffc <SensorControllerTask+0x3c8>)
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	f207 213b 	addw	r1, r7, #571	; 0x23b
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	4618      	mov	r0, r3
 8000cea:	f003 fe8b 	bl	8004a04 <xQueueReceive>
 8000cee:	4603      	mov	r3, r0
 8000cf0:	2b01      	cmp	r3, #1
 8000cf2:	d11f      	bne.n	8000d34 <SensorControllerTask+0x100>
					sprintf(str, "Prompt from host: %s\r\n", states_str[HostPCCommand]);
 8000cf4:	f897 323b 	ldrb.w	r3, [r7, #571]	; 0x23b
 8000cf8:	461a      	mov	r2, r3
 8000cfa:	4613      	mov	r3, r2
 8000cfc:	005b      	lsls	r3, r3, #1
 8000cfe:	4413      	add	r3, r2
 8000d00:	005b      	lsls	r3, r3, #1
 8000d02:	4abf      	ldr	r2, [pc, #764]	; (8001000 <SensorControllerTask+0x3cc>)
 8000d04:	441a      	add	r2, r3
 8000d06:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000d0a:	49be      	ldr	r1, [pc, #760]	; (8001004 <SensorControllerTask+0x3d0>)
 8000d0c:	4618      	mov	r0, r3
 8000d0e:	f006 f9b9 	bl	8007084 <siprintf>
					print_str(str);
 8000d12:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000d16:	4618      	mov	r0, r3
 8000d18:	f000 fc00 	bl	800151c <print_str>
					if(HostPCCommand == PC_Command_START) {
 8000d1c:	f897 323b 	ldrb.w	r3, [r7, #571]	; 0x23b
 8000d20:	2b01      	cmp	r3, #1
 8000d22:	f040 82ae 	bne.w	8001282 <SensorControllerTask+0x64e>
						state = Start_Sensors;
 8000d26:	2300      	movs	r3, #0
 8000d28:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
						Sensors_Expired = 0;
 8000d2c:	4bb6      	ldr	r3, [pc, #728]	; (8001008 <SensorControllerTask+0x3d4>)
 8000d2e:	2200      	movs	r2, #0
 8000d30:	601a      	str	r2, [r3, #0]
					}
				} else {
					state = Wait_;
					Sensors_Expired = 0;
				}
				break;
 8000d32:	e2a6      	b.n	8001282 <SensorControllerTask+0x64e>
					state = Wait_;
 8000d34:	2303      	movs	r3, #3
 8000d36:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
					Sensors_Expired = 0;
 8000d3a:	4bb3      	ldr	r3, [pc, #716]	; (8001008 <SensorControllerTask+0x3d4>)
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	601a      	str	r2, [r3, #0]
				break;
 8000d40:	e29f      	b.n	8001282 <SensorControllerTask+0x64e>

			case Start_Sensors:
				if(retry_count >= MAX_RETRIES) {
 8000d42:	f8d7 226c 	ldr.w	r2, [r7, #620]	; 0x26c
 8000d46:	f8d7 3254 	ldr.w	r3, [r7, #596]	; 0x254
 8000d4a:	429a      	cmp	r2, r3
 8000d4c:	db11      	blt.n	8000d72 <SensorControllerTask+0x13e>
					sprintf(str, "Max retries reached, returning to Wait state\r\n");
 8000d4e:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000d52:	49ae      	ldr	r1, [pc, #696]	; (800100c <SensorControllerTask+0x3d8>)
 8000d54:	4618      	mov	r0, r3
 8000d56:	f006 f995 	bl	8007084 <siprintf>
					print_str(str);
 8000d5a:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000d5e:	4618      	mov	r0, r3
 8000d60:	f000 fbdc 	bl	800151c <print_str>
					state = Wait_;
 8000d64:	2303      	movs	r3, #3
 8000d66:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
					retry_count = 0;
 8000d6a:	2300      	movs	r3, #0
 8000d6c:	f8c7 326c 	str.w	r3, [r7, #620]	; 0x26c
					break;
 8000d70:	e28a      	b.n	8001288 <SensorControllerTask+0x654>
				}
				retry_count++;
 8000d72:	f8d7 326c 	ldr.w	r3, [r7, #620]	; 0x26c
 8000d76:	3301      	adds	r3, #1
 8000d78:	f8c7 326c 	str.w	r3, [r7, #620]	; 0x26c
				sprintf(str, "\n\nStarting Sensors Initialization\r\n");
 8000d7c:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000d80:	49a3      	ldr	r1, [pc, #652]	; (8001010 <SensorControllerTask+0x3dc>)
 8000d82:	4618      	mov	r0, r3
 8000d84:	f006 f97e 	bl	8007084 <siprintf>
				print_str(str);
 8000d88:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000d8c:	4618      	mov	r0, r3
 8000d8e:	f000 fbc5 	bl	800151c <print_str>

				// Reset all enable flags before starting
				Acoustic_enabled = 0;
 8000d92:	2300      	movs	r3, #0
 8000d94:	f8c7 3268 	str.w	r3, [r7, #616]	; 0x268
				Pressure_enabled = 0;
 8000d98:	2300      	movs	r3, #0
 8000d9a:	f8c7 3264 	str.w	r3, [r7, #612]	; 0x264
				// FlowRate_enabled = 0;
				// Corrosion_enabled = 0;
				// Acoustic2_enabled = 0;
				// Pressure2_enabled = 0;
				HallEffect_enabled = 0;
 8000d9e:	2300      	movs	r3, #0
 8000da0:	f8c7 3260 	str.w	r3, [r7, #608]	; 0x260
				Temperature_enabled = 0;
 8000da4:	2300      	movs	r3, #0
 8000da6:	f8c7 325c 	str.w	r3, [r7, #604]	; 0x25c

				// Send enable messages with debug prints
				sprintf(str, "Sending enable messages to sensors...\r\n");
 8000daa:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000dae:	4999      	ldr	r1, [pc, #612]	; (8001014 <SensorControllerTask+0x3e0>)
 8000db0:	4618      	mov	r0, r3
 8000db2:	f006 f967 	bl	8007084 <siprintf>
				print_str(str);
 8000db6:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000dba:	4618      	mov	r0, r3
 8000dbc:	f000 fbae 	bl	800151c <print_str>
				
				send_sensorEnable_message(Acoustic, 1000);
 8000dc0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000dc4:	2002      	movs	r0, #2
 8000dc6:	f7ff feab 	bl	8000b20 <send_sensorEnable_message>
				sprintf(str, "Sent enable message to Acoustic (ID: 2) with period 1000\r\n");
 8000dca:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000dce:	4992      	ldr	r1, [pc, #584]	; (8001018 <SensorControllerTask+0x3e4>)
 8000dd0:	4618      	mov	r0, r3
 8000dd2:	f006 f957 	bl	8007084 <siprintf>
				print_str(str);
 8000dd6:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000dda:	4618      	mov	r0, r3
 8000ddc:	f000 fb9e 	bl	800151c <print_str>
				
				send_sensorEnable_message(Pressure, 2000);
 8000de0:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8000de4:	2003      	movs	r0, #3
 8000de6:	f7ff fe9b 	bl	8000b20 <send_sensorEnable_message>
				sprintf(str, "Sent enable message to Pressure (ID: 3) with period 2000\r\n");
 8000dea:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000dee:	498b      	ldr	r1, [pc, #556]	; (800101c <SensorControllerTask+0x3e8>)
 8000df0:	4618      	mov	r0, r3
 8000df2:	f006 f947 	bl	8007084 <siprintf>
				print_str(str);
 8000df6:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000dfa:	4618      	mov	r0, r3
 8000dfc:	f000 fb8e 	bl	800151c <print_str>
				
				send_sensorEnable_message(Temperature, 3000);
 8000e00:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000e04:	2004      	movs	r0, #4
 8000e06:	f7ff fe8b 	bl	8000b20 <send_sensorEnable_message>
				sprintf(str, "Sent enable message to Temperature (ID: 4) with period 3000\r\n");
 8000e0a:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000e0e:	4984      	ldr	r1, [pc, #528]	; (8001020 <SensorControllerTask+0x3ec>)
 8000e10:	4618      	mov	r0, r3
 8000e12:	f006 f937 	bl	8007084 <siprintf>
				print_str(str);
 8000e16:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000e1a:	4618      	mov	r0, r3
 8000e1c:	f000 fb7e 	bl	800151c <print_str>
				
				send_sensorEnable_message(HallEffect, 4000);
 8000e20:	f44f 617a 	mov.w	r1, #4000	; 0xfa0
 8000e24:	2005      	movs	r0, #5
 8000e26:	f7ff fe7b 	bl	8000b20 <send_sensorEnable_message>
				sprintf(str, "Sent enable message to HallEffect (ID: 5) with period 4000\r\n");
 8000e2a:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000e2e:	497d      	ldr	r1, [pc, #500]	; (8001024 <SensorControllerTask+0x3f0>)
 8000e30:	4618      	mov	r0, r3
 8000e32:	f006 f927 	bl	8007084 <siprintf>
				print_str(str);
 8000e36:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000e3a:	4618      	mov	r0, r3
 8000e3c:	f000 fb6e 	bl	800151c <print_str>
				

				sprintf(str, "Waiting for sensor acknowledgments...\r\n");
 8000e40:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000e44:	4978      	ldr	r1, [pc, #480]	; (8001028 <SensorControllerTask+0x3f4>)
 8000e46:	4618      	mov	r0, r3
 8000e48:	f006 f91c 	bl	8007084 <siprintf>
				print_str(str);
 8000e4c:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000e50:	4618      	mov	r0, r3
 8000e52:	f000 fb63 	bl	800151c <print_str>

				Sensors_Expired = 0;
 8000e56:	4b6c      	ldr	r3, [pc, #432]	; (8001008 <SensorControllerTask+0x3d4>)
 8000e58:	2200      	movs	r2, #0
 8000e5a:	601a      	str	r2, [r3, #0]
				xTimerStart(xTimer, 0);
 8000e5c:	4b65      	ldr	r3, [pc, #404]	; (8000ff4 <SensorControllerTask+0x3c0>)
 8000e5e:	681c      	ldr	r4, [r3, #0]
 8000e60:	f004 fc4a 	bl	80056f8 <xTaskGetTickCount>
 8000e64:	4602      	mov	r2, r0
 8000e66:	2300      	movs	r3, #0
 8000e68:	9300      	str	r3, [sp, #0]
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	2101      	movs	r1, #1
 8000e6e:	4620      	mov	r0, r4
 8000e70:	f005 fa04 	bl	800627c <xTimerGenericCommand>

				while(!Sensors_Expired) {
 8000e74:	e05a      	b.n	8000f2c <SensorControllerTask+0x2f8>
					if(xQueueReceive(Queue_Sensor_Data, &currentRxMessage, 0) == pdPASS) {
 8000e76:	4b6d      	ldr	r3, [pc, #436]	; (800102c <SensorControllerTask+0x3f8>)
 8000e78:	681b      	ldr	r3, [r3, #0]
 8000e7a:	f507 710f 	add.w	r1, r7, #572	; 0x23c
 8000e7e:	2200      	movs	r2, #0
 8000e80:	4618      	mov	r0, r3
 8000e82:	f003 fdbf 	bl	8004a04 <xQueueReceive>
 8000e86:	4603      	mov	r3, r0
 8000e88:	2b01      	cmp	r3, #1
 8000e8a:	d149      	bne.n	8000f20 <SensorControllerTask+0x2ec>
						sprintf(str, "Processing message - SensorID: %d, MsgID: %d\r\n",
								currentRxMessage.SensorID, currentRxMessage.messageId);
 8000e8c:	f897 323c 	ldrb.w	r3, [r7, #572]	; 0x23c
						sprintf(str, "Processing message - SensorID: %d, MsgID: %d\r\n",
 8000e90:	461a      	mov	r2, r3
								currentRxMessage.SensorID, currentRxMessage.messageId);
 8000e92:	f897 323d 	ldrb.w	r3, [r7, #573]	; 0x23d
						sprintf(str, "Processing message - SensorID: %d, MsgID: %d\r\n",
 8000e96:	f507 70fe 	add.w	r0, r7, #508	; 0x1fc
 8000e9a:	4965      	ldr	r1, [pc, #404]	; (8001030 <SensorControllerTask+0x3fc>)
 8000e9c:	f006 f8f2 	bl	8007084 <siprintf>
						print_str(str);
 8000ea0:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000ea4:	4618      	mov	r0, r3
 8000ea6:	f000 fb39 	bl	800151c <print_str>
						
						if(currentRxMessage.messageId == 1) {  // Acknowledgment message
 8000eaa:	f897 323d 	ldrb.w	r3, [r7, #573]	; 0x23d
 8000eae:	2b01      	cmp	r3, #1
 8000eb0:	d136      	bne.n	8000f20 <SensorControllerTask+0x2ec>
							switch(currentRxMessage.SensorID) {
 8000eb2:	f897 323c 	ldrb.w	r3, [r7, #572]	; 0x23c
 8000eb6:	3b02      	subs	r3, #2
 8000eb8:	2b03      	cmp	r3, #3
 8000eba:	d833      	bhi.n	8000f24 <SensorControllerTask+0x2f0>
 8000ebc:	a201      	add	r2, pc, #4	; (adr r2, 8000ec4 <SensorControllerTask+0x290>)
 8000ebe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ec2:	bf00      	nop
 8000ec4:	08000ed5 	.word	0x08000ed5
 8000ec8:	08000ef3 	.word	0x08000ef3
 8000ecc:	08000f03 	.word	0x08000f03
 8000ed0:	08000efb 	.word	0x08000efb
								case Acoustic:
									Acoustic_enabled = 1;
 8000ed4:	2301      	movs	r3, #1
 8000ed6:	f8c7 3268 	str.w	r3, [r7, #616]	; 0x268
									sprintf(str, "Acoustic sensor enabled\r\n");
 8000eda:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000ede:	4955      	ldr	r1, [pc, #340]	; (8001034 <SensorControllerTask+0x400>)
 8000ee0:	4618      	mov	r0, r3
 8000ee2:	f006 f8cf 	bl	8007084 <siprintf>
									print_str(str);
 8000ee6:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000eea:	4618      	mov	r0, r3
 8000eec:	f000 fb16 	bl	800151c <print_str>
									break;
 8000ef0:	e019      	b.n	8000f26 <SensorControllerTask+0x2f2>
								case Pressure:
									Pressure_enabled = 1;
 8000ef2:	2301      	movs	r3, #1
 8000ef4:	f8c7 3264 	str.w	r3, [r7, #612]	; 0x264
									break;
 8000ef8:	e015      	b.n	8000f26 <SensorControllerTask+0x2f2>
								case HallEffect:
									HallEffect_enabled = 1;
 8000efa:	2301      	movs	r3, #1
 8000efc:	f8c7 3260 	str.w	r3, [r7, #608]	; 0x260
									break;
 8000f00:	e011      	b.n	8000f26 <SensorControllerTask+0x2f2>
								case Temperature:
									Temperature_enabled = 1;
 8000f02:	2301      	movs	r3, #1
 8000f04:	f8c7 325c 	str.w	r3, [r7, #604]	; 0x25c
									sprintf(str, "Temp sensor enabled\r\n");
 8000f08:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000f0c:	494a      	ldr	r1, [pc, #296]	; (8001038 <SensorControllerTask+0x404>)
 8000f0e:	4618      	mov	r0, r3
 8000f10:	f006 f8b8 	bl	8007084 <siprintf>
									print_str(str);
 8000f14:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000f18:	4618      	mov	r0, r3
 8000f1a:	f000 faff 	bl	800151c <print_str>
									break;
 8000f1e:	e002      	b.n	8000f26 <SensorControllerTask+0x2f2>
								default:
									break;
							}
						}
 8000f20:	bf00      	nop
 8000f22:	e000      	b.n	8000f26 <SensorControllerTask+0x2f2>
									break;
 8000f24:	bf00      	nop
					}
					vTaskDelay(pdMS_TO_TICKS(10));
 8000f26:	200a      	movs	r0, #10
 8000f28:	f004 fa96 	bl	8005458 <vTaskDelay>
				while(!Sensors_Expired) {
 8000f2c:	4b36      	ldr	r3, [pc, #216]	; (8001008 <SensorControllerTask+0x3d4>)
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	d0a0      	beq.n	8000e76 <SensorControllerTask+0x242>
				}
				Acoustic_enabled = 1;
 8000f34:	2301      	movs	r3, #1
 8000f36:	f8c7 3268 	str.w	r3, [r7, #616]	; 0x268
				Pressure_enabled = 1;
 8000f3a:	2301      	movs	r3, #1
 8000f3c:	f8c7 3264 	str.w	r3, [r7, #612]	; 0x264
				HallEffect_enabled = 1;
 8000f40:	2301      	movs	r3, #1
 8000f42:	f8c7 3260 	str.w	r3, [r7, #608]	; 0x260
				Temperature_enabled = 1;
 8000f46:	2301      	movs	r3, #1
 8000f48:	f8c7 325c 	str.w	r3, [r7, #604]	; 0x25c
				xTimerStop(xTimer, 0);
 8000f4c:	4b29      	ldr	r3, [pc, #164]	; (8000ff4 <SensorControllerTask+0x3c0>)
 8000f4e:	6818      	ldr	r0, [r3, #0]
 8000f50:	2300      	movs	r3, #0
 8000f52:	9300      	str	r3, [sp, #0]
 8000f54:	2300      	movs	r3, #0
 8000f56:	2200      	movs	r2, #0
 8000f58:	2103      	movs	r1, #3
 8000f5a:	f005 f98f 	bl	800627c <xTimerGenericCommand>


				// Print status of all sensors
				sprintf(str, "\nSensor Enable Status:\r\n");
 8000f5e:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000f62:	4936      	ldr	r1, [pc, #216]	; (800103c <SensorControllerTask+0x408>)
 8000f64:	4618      	mov	r0, r3
 8000f66:	f006 f88d 	bl	8007084 <siprintf>
				print_str(str);
 8000f6a:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000f6e:	4618      	mov	r0, r3
 8000f70:	f000 fad4 	bl	800151c <print_str>
				sprintf(str, "Acoustic: %d, Pressure: %d\r\n", 
 8000f74:	f507 70fe 	add.w	r0, r7, #508	; 0x1fc
 8000f78:	f8d7 3264 	ldr.w	r3, [r7, #612]	; 0x264
 8000f7c:	f8d7 2268 	ldr.w	r2, [r7, #616]	; 0x268
 8000f80:	492f      	ldr	r1, [pc, #188]	; (8001040 <SensorControllerTask+0x40c>)
 8000f82:	f006 f87f 	bl	8007084 <siprintf>
						Acoustic_enabled, Pressure_enabled);
				print_str(str);
 8000f86:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000f8a:	4618      	mov	r0, r3
 8000f8c:	f000 fac6 	bl	800151c <print_str>
				sprintf(str, "HallEffect: %d, Temperature: %d\r\n",
 8000f90:	f507 70fe 	add.w	r0, r7, #508	; 0x1fc
 8000f94:	f8d7 325c 	ldr.w	r3, [r7, #604]	; 0x25c
 8000f98:	f8d7 2260 	ldr.w	r2, [r7, #608]	; 0x260
 8000f9c:	4929      	ldr	r1, [pc, #164]	; (8001044 <SensorControllerTask+0x410>)
 8000f9e:	f006 f871 	bl	8007084 <siprintf>
						HallEffect_enabled, Temperature_enabled);
				print_str(str);
 8000fa2:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000fa6:	4618      	mov	r0, r3
 8000fa8:	f000 fab8 	bl	800151c <print_str>

				if(Acoustic_enabled && Pressure_enabled && HallEffect_enabled && Temperature_enabled) {
 8000fac:	f8d7 3268 	ldr.w	r3, [r7, #616]	; 0x268
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d04b      	beq.n	800104c <SensorControllerTask+0x418>
 8000fb4:	f8d7 3264 	ldr.w	r3, [r7, #612]	; 0x264
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d047      	beq.n	800104c <SensorControllerTask+0x418>
 8000fbc:	f8d7 3260 	ldr.w	r3, [r7, #608]	; 0x260
 8000fc0:	2b00      	cmp	r3, #0
 8000fc2:	d043      	beq.n	800104c <SensorControllerTask+0x418>
 8000fc4:	f8d7 325c 	ldr.w	r3, [r7, #604]	; 0x25c
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d03f      	beq.n	800104c <SensorControllerTask+0x418>
					state = Parse_Sensor_Data;
 8000fcc:	2301      	movs	r3, #1
 8000fce:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
					sprintf(str, "All sensors enabled, moving to Parse_Sensor_Data\r\n");
 8000fd2:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000fd6:	491c      	ldr	r1, [pc, #112]	; (8001048 <SensorControllerTask+0x414>)
 8000fd8:	4618      	mov	r0, r3
 8000fda:	f006 f853 	bl	8007084 <siprintf>
					print_str(str);
 8000fde:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	f000 fa9a 	bl	800151c <print_str>
 8000fe8:	e03e      	b.n	8001068 <SensorControllerTask+0x434>
 8000fea:	bf00      	nop
 8000fec:	08000c15 	.word	0x08000c15
 8000ff0:	08007af8 	.word	0x08007af8
 8000ff4:	200001ac 	.word	0x200001ac
 8000ff8:	08007b00 	.word	0x08007b00
 8000ffc:	200001a4 	.word	0x200001a4
 8001000:	20000000 	.word	0x20000000
 8001004:	08007b0c 	.word	0x08007b0c
 8001008:	200001a8 	.word	0x200001a8
 800100c:	08007b24 	.word	0x08007b24
 8001010:	08007b54 	.word	0x08007b54
 8001014:	08007b78 	.word	0x08007b78
 8001018:	08007ba0 	.word	0x08007ba0
 800101c:	08007bdc 	.word	0x08007bdc
 8001020:	08007c18 	.word	0x08007c18
 8001024:	08007c58 	.word	0x08007c58
 8001028:	08007c98 	.word	0x08007c98
 800102c:	200001a0 	.word	0x200001a0
 8001030:	08007cc0 	.word	0x08007cc0
 8001034:	08007cf0 	.word	0x08007cf0
 8001038:	08007d0c 	.word	0x08007d0c
 800103c:	08007d24 	.word	0x08007d24
 8001040:	08007d40 	.word	0x08007d40
 8001044:	08007d60 	.word	0x08007d60
 8001048:	08007d84 	.word	0x08007d84
				} else {
					sprintf(str, "Not all sensors enabled, retrying\r\n");
 800104c:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8001050:	498e      	ldr	r1, [pc, #568]	; (800128c <SensorControllerTask+0x658>)
 8001052:	4618      	mov	r0, r3
 8001054:	f006 f816 	bl	8007084 <siprintf>
					print_str(str);
 8001058:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 800105c:	4618      	mov	r0, r3
 800105e:	f000 fa5d 	bl	800151c <print_str>
					state = Start_Sensors;
 8001062:	2300      	movs	r3, #0
 8001064:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
				}
				Sensors_Expired = 0;
 8001068:	4b89      	ldr	r3, [pc, #548]	; (8001290 <SensorControllerTask+0x65c>)
 800106a:	2200      	movs	r2, #0
 800106c:	601a      	str	r2, [r3, #0]
				break;
 800106e:	e10b      	b.n	8001288 <SensorControllerTask+0x654>

			case Parse_Sensor_Data:
				sprintf(str, "Processing Sensor Data\r\n");
 8001070:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8001074:	4987      	ldr	r1, [pc, #540]	; (8001294 <SensorControllerTask+0x660>)
 8001076:	4618      	mov	r0, r3
 8001078:	f006 f804 	bl	8007084 <siprintf>
				print_str(str);
 800107c:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8001080:	4618      	mov	r0, r3
 8001082:	f000 fa4b 	bl	800151c <print_str>

				xTimerStart(xTimer, 0);
 8001086:	4b84      	ldr	r3, [pc, #528]	; (8001298 <SensorControllerTask+0x664>)
 8001088:	681c      	ldr	r4, [r3, #0]
 800108a:	f004 fb35 	bl	80056f8 <xTaskGetTickCount>
 800108e:	4602      	mov	r2, r0
 8001090:	2300      	movs	r3, #0
 8001092:	9300      	str	r3, [sp, #0]
 8001094:	2300      	movs	r3, #0
 8001096:	2101      	movs	r1, #1
 8001098:	4620      	mov	r0, r4
 800109a:	f005 f8ef 	bl	800627c <xTimerGenericCommand>

				while(!Sensors_Expired) {
 800109e:	e068      	b.n	8001172 <SensorControllerTask+0x53e>
					if(xQueueReceive(Queue_Sensor_Data, &currentRxMessage, 0) == pdPASS) {
 80010a0:	4b7e      	ldr	r3, [pc, #504]	; (800129c <SensorControllerTask+0x668>)
 80010a2:	681b      	ldr	r3, [r3, #0]
 80010a4:	f507 710f 	add.w	r1, r7, #572	; 0x23c
 80010a8:	2200      	movs	r2, #0
 80010aa:	4618      	mov	r0, r3
 80010ac:	f003 fcaa 	bl	8004a04 <xQueueReceive>
 80010b0:	4603      	mov	r3, r0
 80010b2:	2b01      	cmp	r3, #1
 80010b4:	d15c      	bne.n	8001170 <SensorControllerTask+0x53c>
						if(currentRxMessage.messageId == 3) {
 80010b6:	f897 323d 	ldrb.w	r3, [r7, #573]	; 0x23d
 80010ba:	2b03      	cmp	r3, #3
 80010bc:	d158      	bne.n	8001170 <SensorControllerTask+0x53c>
							switch(currentRxMessage.SensorID) {
 80010be:	f897 323c 	ldrb.w	r3, [r7, #572]	; 0x23c
 80010c2:	3b02      	subs	r3, #2
 80010c4:	2b03      	cmp	r3, #3
 80010c6:	d854      	bhi.n	8001172 <SensorControllerTask+0x53e>
 80010c8:	a201      	add	r2, pc, #4	; (adr r2, 80010d0 <SensorControllerTask+0x49c>)
 80010ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80010ce:	bf00      	nop
 80010d0:	080010e1 	.word	0x080010e1
 80010d4:	08001105 	.word	0x08001105
 80010d8:	0800114d 	.word	0x0800114d
 80010dc:	08001129 	.word	0x08001129
								case Acoustic:
									AcousticStatus = analyzeAcousticValue(currentRxMessage.params);
 80010e0:	f8b7 323e 	ldrh.w	r3, [r7, #574]	; 0x23e
 80010e4:	4618      	mov	r0, r3
 80010e6:	f000 f94b 	bl	8001380 <analyzeAcousticValue>
 80010ea:	f8c7 0244 	str.w	r0, [r7, #580]	; 0x244
									sprintf(strAcoustic, "Acoustic Sensor Data: %d dB - Status: %s\r\n", 
											currentRxMessage.params, AcousticStatus);
 80010ee:	f8b7 323e 	ldrh.w	r3, [r7, #574]	; 0x23e
									sprintf(strAcoustic, "Acoustic Sensor Data: %d dB - Status: %s\r\n", 
 80010f2:	461a      	mov	r2, r3
 80010f4:	f507 70cc 	add.w	r0, r7, #408	; 0x198
 80010f8:	f8d7 3244 	ldr.w	r3, [r7, #580]	; 0x244
 80010fc:	4968      	ldr	r1, [pc, #416]	; (80012a0 <SensorControllerTask+0x66c>)
 80010fe:	f005 ffc1 	bl	8007084 <siprintf>
									break;
 8001102:	e036      	b.n	8001172 <SensorControllerTask+0x53e>
								case Pressure:
									PressureStatus = analyzePressureValue(currentRxMessage.params);
 8001104:	f8b7 323e 	ldrh.w	r3, [r7, #574]	; 0x23e
 8001108:	4618      	mov	r0, r3
 800110a:	f000 f957 	bl	80013bc <analyzePressureValue>
 800110e:	f8c7 0248 	str.w	r0, [r7, #584]	; 0x248
									sprintf(strPressure, "Pressure Sensor Data: %d PSI - Status: %s\r\n", 
											currentRxMessage.params, PressureStatus);
 8001112:	f8b7 323e 	ldrh.w	r3, [r7, #574]	; 0x23e
									sprintf(strPressure, "Pressure Sensor Data: %d PSI - Status: %s\r\n", 
 8001116:	461a      	mov	r2, r3
 8001118:	f507 709a 	add.w	r0, r7, #308	; 0x134
 800111c:	f8d7 3248 	ldr.w	r3, [r7, #584]	; 0x248
 8001120:	4960      	ldr	r1, [pc, #384]	; (80012a4 <SensorControllerTask+0x670>)
 8001122:	f005 ffaf 	bl	8007084 <siprintf>
									break;
 8001126:	e024      	b.n	8001172 <SensorControllerTask+0x53e>
								// 	CorrosionStatus = analyzeCorrosionValue(currentRxMessage.params);
								// 	sprintf(strCorrosion, "Corrosion Sensor Data: %d - Status: %s\r\n", 
								// 			currentRxMessage.params, CorrosionStatus);
								// 	break;
								case HallEffect:
									HallEffectStatus = analyzeHallEffectValue(currentRxMessage.params);
 8001128:	f8b7 323e 	ldrh.w	r3, [r7, #574]	; 0x23e
 800112c:	4618      	mov	r0, r3
 800112e:	f000 f961 	bl	80013f4 <analyzeHallEffectValue>
 8001132:	f8c7 0250 	str.w	r0, [r7, #592]	; 0x250
									sprintf(strHallEffect, "Hall Effect Sensor Data: %d - Status: %s\r\n", 
											currentRxMessage.params, HallEffectStatus);
 8001136:	f8b7 323e 	ldrh.w	r3, [r7, #574]	; 0x23e
									sprintf(strHallEffect, "Hall Effect Sensor Data: %d - Status: %s\r\n", 
 800113a:	461a      	mov	r2, r3
 800113c:	f107 00d0 	add.w	r0, r7, #208	; 0xd0
 8001140:	f8d7 3250 	ldr.w	r3, [r7, #592]	; 0x250
 8001144:	4958      	ldr	r1, [pc, #352]	; (80012a8 <SensorControllerTask+0x674>)
 8001146:	f005 ff9d 	bl	8007084 <siprintf>
									break;
 800114a:	e012      	b.n	8001172 <SensorControllerTask+0x53e>
								case Temperature:
									TemperatureStatus = analyzeTemperatureValue(currentRxMessage.params);
 800114c:	f8b7 323e 	ldrh.w	r3, [r7, #574]	; 0x23e
 8001150:	4618      	mov	r0, r3
 8001152:	f000 f96b 	bl	800142c <analyzeTemperatureValue>
 8001156:	f8c7 024c 	str.w	r0, [r7, #588]	; 0x24c
									sprintf(strTemperature, "Temperature Sensor Data: %d C - Status: %s\r\n", 
											currentRxMessage.params, TemperatureStatus);
 800115a:	f8b7 323e 	ldrh.w	r3, [r7, #574]	; 0x23e
									sprintf(strTemperature, "Temperature Sensor Data: %d C - Status: %s\r\n", 
 800115e:	461a      	mov	r2, r3
 8001160:	f107 006c 	add.w	r0, r7, #108	; 0x6c
 8001164:	f8d7 324c 	ldr.w	r3, [r7, #588]	; 0x24c
 8001168:	4950      	ldr	r1, [pc, #320]	; (80012ac <SensorControllerTask+0x678>)
 800116a:	f005 ff8b 	bl	8007084 <siprintf>
									break;
 800116e:	e000      	b.n	8001172 <SensorControllerTask+0x53e>
								default:
									break;
							}
						}
 8001170:	bf00      	nop
				while(!Sensors_Expired) {
 8001172:	4b47      	ldr	r3, [pc, #284]	; (8001290 <SensorControllerTask+0x65c>)
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	2b00      	cmp	r3, #0
 8001178:	d092      	beq.n	80010a0 <SensorControllerTask+0x46c>
					}
				}

				// switch (sensorDataCounter % 6) {
				switch (sensorDataCounter % 4) {
 800117a:	f8d7 3274 	ldr.w	r3, [r7, #628]	; 0x274
 800117e:	425a      	negs	r2, r3
 8001180:	f003 0303 	and.w	r3, r3, #3
 8001184:	f002 0203 	and.w	r2, r2, #3
 8001188:	bf58      	it	pl
 800118a:	4253      	negpl	r3, r2
 800118c:	2b03      	cmp	r3, #3
 800118e:	d823      	bhi.n	80011d8 <SensorControllerTask+0x5a4>
 8001190:	a201      	add	r2, pc, #4	; (adr r2, 8001198 <SensorControllerTask+0x564>)
 8001192:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001196:	bf00      	nop
 8001198:	080011a9 	.word	0x080011a9
 800119c:	080011b5 	.word	0x080011b5
 80011a0:	080011c1 	.word	0x080011c1
 80011a4:	080011cd 	.word	0x080011cd
					case 0:
						print_str(strAcoustic);
 80011a8:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 80011ac:	4618      	mov	r0, r3
 80011ae:	f000 f9b5 	bl	800151c <print_str>
						break;
 80011b2:	e011      	b.n	80011d8 <SensorControllerTask+0x5a4>
					case 1:
						print_str(strPressure);
 80011b4:	f507 739a 	add.w	r3, r7, #308	; 0x134
 80011b8:	4618      	mov	r0, r3
 80011ba:	f000 f9af 	bl	800151c <print_str>
						break;
 80011be:	e00b      	b.n	80011d8 <SensorControllerTask+0x5a4>
					case 2:
						print_str(strHallEffect);
 80011c0:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 80011c4:	4618      	mov	r0, r3
 80011c6:	f000 f9a9 	bl	800151c <print_str>
						break;
 80011ca:	e005      	b.n	80011d8 <SensorControllerTask+0x5a4>
					case 3:
						print_str(strTemperature);
 80011cc:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 80011d0:	4618      	mov	r0, r3
 80011d2:	f000 f9a3 	bl	800151c <print_str>
						break;
 80011d6:	bf00      	nop
				}

				sensorDataCounter++;
 80011d8:	f8d7 3274 	ldr.w	r3, [r7, #628]	; 0x274
 80011dc:	3301      	adds	r3, #1
 80011de:	f8c7 3274 	str.w	r3, [r7, #628]	; 0x274
				xTimerStop(xTimer, 0);
 80011e2:	4b2d      	ldr	r3, [pc, #180]	; (8001298 <SensorControllerTask+0x664>)
 80011e4:	6818      	ldr	r0, [r3, #0]
 80011e6:	2300      	movs	r3, #0
 80011e8:	9300      	str	r3, [sp, #0]
 80011ea:	2300      	movs	r3, #0
 80011ec:	2200      	movs	r2, #0
 80011ee:	2103      	movs	r1, #3
 80011f0:	f005 f844 	bl	800627c <xTimerGenericCommand>
				print_str(str);
 80011f4:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 80011f8:	4618      	mov	r0, r3
 80011fa:	f000 f98f 	bl	800151c <print_str>

				if(xQueueReceive(Queue_HostPC_Data, &HostPCCommand, 0) == pdPASS) {
 80011fe:	4b2c      	ldr	r3, [pc, #176]	; (80012b0 <SensorControllerTask+0x67c>)
 8001200:	681b      	ldr	r3, [r3, #0]
 8001202:	f207 213b 	addw	r1, r7, #571	; 0x23b
 8001206:	2200      	movs	r2, #0
 8001208:	4618      	mov	r0, r3
 800120a:	f003 fbfb 	bl	8004a04 <xQueueReceive>
 800120e:	4603      	mov	r3, r0
 8001210:	2b01      	cmp	r3, #1
 8001212:	d11e      	bne.n	8001252 <SensorControllerTask+0x61e>
					sprintf(str, "Prompt from host: %s\r\n", states_str[HostPCCommand]);
 8001214:	f897 323b 	ldrb.w	r3, [r7, #571]	; 0x23b
 8001218:	461a      	mov	r2, r3
 800121a:	4613      	mov	r3, r2
 800121c:	005b      	lsls	r3, r3, #1
 800121e:	4413      	add	r3, r2
 8001220:	005b      	lsls	r3, r3, #1
 8001222:	4a24      	ldr	r2, [pc, #144]	; (80012b4 <SensorControllerTask+0x680>)
 8001224:	441a      	add	r2, r3
 8001226:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 800122a:	4923      	ldr	r1, [pc, #140]	; (80012b8 <SensorControllerTask+0x684>)
 800122c:	4618      	mov	r0, r3
 800122e:	f005 ff29 	bl	8007084 <siprintf>
					print_str(str);
 8001232:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8001236:	4618      	mov	r0, r3
 8001238:	f000 f970 	bl	800151c <print_str>
					if(HostPCCommand == PC_Command_RESET) {
 800123c:	f897 323b 	ldrb.w	r3, [r7, #571]	; 0x23b
 8001240:	2b02      	cmp	r3, #2
 8001242:	d120      	bne.n	8001286 <SensorControllerTask+0x652>
						state = Disable_Sensors;
 8001244:	2302      	movs	r3, #2
 8001246:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
						Sensors_Expired = 0;
 800124a:	4b11      	ldr	r3, [pc, #68]	; (8001290 <SensorControllerTask+0x65c>)
 800124c:	2200      	movs	r2, #0
 800124e:	601a      	str	r2, [r3, #0]
					}
				} else {
					state = Parse_Sensor_Data;
					Sensors_Expired = 0;
				}
				break;
 8001250:	e019      	b.n	8001286 <SensorControllerTask+0x652>
					state = Parse_Sensor_Data;
 8001252:	2301      	movs	r3, #1
 8001254:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
					Sensors_Expired = 0;
 8001258:	4b0d      	ldr	r3, [pc, #52]	; (8001290 <SensorControllerTask+0x65c>)
 800125a:	2200      	movs	r2, #0
 800125c:	601a      	str	r2, [r3, #0]
				break;
 800125e:	e012      	b.n	8001286 <SensorControllerTask+0x652>

			case Disable_Sensors:
				sprintf(str, "Stopping sensors\r\n");
 8001260:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8001264:	4915      	ldr	r1, [pc, #84]	; (80012bc <SensorControllerTask+0x688>)
 8001266:	4618      	mov	r0, r3
 8001268:	f005 ff0c 	bl	8007084 <siprintf>
				print_str(str);
 800126c:	f507 73fe 	add.w	r3, r7, #508	; 0x1fc
 8001270:	4618      	mov	r0, r3
 8001272:	f000 f953 	bl	800151c <print_str>
				send_sensorReset_message();
 8001276:	f7ff fca1 	bl	8000bbc <send_sensorReset_message>
				state = Wait_;
 800127a:	2303      	movs	r3, #3
 800127c:	f887 3273 	strb.w	r3, [r7, #627]	; 0x273
				break;
 8001280:	e002      	b.n	8001288 <SensorControllerTask+0x654>
				break;
 8001282:	bf00      	nop
 8001284:	e510      	b.n	8000ca8 <SensorControllerTask+0x74>
				break;
 8001286:	bf00      	nop
		switch(state) {
 8001288:	e50e      	b.n	8000ca8 <SensorControllerTask+0x74>
 800128a:	bf00      	nop
 800128c:	08007db8 	.word	0x08007db8
 8001290:	200001a8 	.word	0x200001a8
 8001294:	08007ddc 	.word	0x08007ddc
 8001298:	200001ac 	.word	0x200001ac
 800129c:	200001a0 	.word	0x200001a0
 80012a0:	08007df8 	.word	0x08007df8
 80012a4:	08007e24 	.word	0x08007e24
 80012a8:	08007e50 	.word	0x08007e50
 80012ac:	08007e7c 	.word	0x08007e7c
 80012b0:	200001a4 	.word	0x200001a4
 80012b4:	20000000 	.word	0x20000000
 80012b8:	08007b0c 	.word	0x08007b0c
 80012bc:	08007eac 	.word	0x08007eac

080012c0 <SensorPlatform_RX_Task>:

/*
 * This task reads the queue of characters from the Sensor Platform when available
 * It then sends the processed data to the Sensor Controller Task
 */
void SensorPlatform_RX_Task(){
 80012c0:	b580      	push	{r7, lr}
 80012c2:	b094      	sub	sp, #80	; 0x50
 80012c4:	af02      	add	r7, sp, #8
	char str[60];
	struct CommMessage currentRxMessage = {0};
 80012c6:	1d3b      	adds	r3, r7, #4
 80012c8:	2200      	movs	r2, #0
 80012ca:	601a      	str	r2, [r3, #0]
 80012cc:	605a      	str	r2, [r3, #4]
	Queue_Sensor_Data = xQueueCreate(200, sizeof(struct CommMessage));
 80012ce:	2200      	movs	r2, #0
 80012d0:	2108      	movs	r1, #8
 80012d2:	20c8      	movs	r0, #200	; 0xc8
 80012d4:	f003 f96c 	bl	80045b0 <xQueueGenericCreate>
 80012d8:	4603      	mov	r3, r0
 80012da:	4a17      	ldr	r2, [pc, #92]	; (8001338 <SensorPlatform_RX_Task+0x78>)
 80012dc:	6013      	str	r3, [r2, #0]

	request_sensor_read();
 80012de:	f7ff f969 	bl	80005b4 <request_sensor_read>

	while(1){
		parse_sensor_message(&currentRxMessage);
 80012e2:	1d3b      	adds	r3, r7, #4
 80012e4:	4618      	mov	r0, r3
 80012e6:	f7ff fa57 	bl	8000798 <parse_sensor_message>

		if(currentRxMessage.IsMessageReady == true && currentRxMessage.IsCheckSumValid == true){
 80012ea:	7abb      	ldrb	r3, [r7, #10]
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d01e      	beq.n	800132e <SensorPlatform_RX_Task+0x6e>
 80012f0:	7a7b      	ldrb	r3, [r7, #9]
 80012f2:	2b00      	cmp	r3, #0
 80012f4:	d01b      	beq.n	800132e <SensorPlatform_RX_Task+0x6e>
			sprintf(str, "Received message - SensorID: %d, MsgID: %d, Params: %d\r\n", // debug print 
					currentRxMessage.SensorID, currentRxMessage.messageId, currentRxMessage.params);
 80012f6:	793b      	ldrb	r3, [r7, #4]
			sprintf(str, "Received message - SensorID: %d, MsgID: %d, Params: %d\r\n", // debug print 
 80012f8:	461a      	mov	r2, r3
					currentRxMessage.SensorID, currentRxMessage.messageId, currentRxMessage.params);
 80012fa:	797b      	ldrb	r3, [r7, #5]
			sprintf(str, "Received message - SensorID: %d, MsgID: %d, Params: %d\r\n", // debug print 
 80012fc:	4619      	mov	r1, r3
					currentRxMessage.SensorID, currentRxMessage.messageId, currentRxMessage.params);
 80012fe:	88fb      	ldrh	r3, [r7, #6]
			sprintf(str, "Received message - SensorID: %d, MsgID: %d, Params: %d\r\n", // debug print 
 8001300:	f107 000c 	add.w	r0, r7, #12
 8001304:	9300      	str	r3, [sp, #0]
 8001306:	460b      	mov	r3, r1
 8001308:	490c      	ldr	r1, [pc, #48]	; (800133c <SensorPlatform_RX_Task+0x7c>)
 800130a:	f005 febb 	bl	8007084 <siprintf>
			print_str(str);
 800130e:	f107 030c 	add.w	r3, r7, #12
 8001312:	4618      	mov	r0, r3
 8001314:	f000 f902 	bl	800151c <print_str>

			xQueueSendToBack(Queue_Sensor_Data, &currentRxMessage, 0);
 8001318:	4b07      	ldr	r3, [pc, #28]	; (8001338 <SensorPlatform_RX_Task+0x78>)
 800131a:	6818      	ldr	r0, [r3, #0]
 800131c:	1d39      	adds	r1, r7, #4
 800131e:	2300      	movs	r3, #0
 8001320:	2200      	movs	r2, #0
 8001322:	f003 f9d5 	bl	80046d0 <xQueueGenericSend>
			ResetMessageStruct(&currentRxMessage);
 8001326:	1d3b      	adds	r3, r7, #4
 8001328:	4618      	mov	r0, r3
 800132a:	f7ff fc63 	bl	8000bf4 <ResetMessageStruct>
		}
		vTaskDelay(pdMS_TO_TICKS(10));
 800132e:	200a      	movs	r0, #10
 8001330:	f004 f892 	bl	8005458 <vTaskDelay>
		parse_sensor_message(&currentRxMessage);
 8001334:	e7d5      	b.n	80012e2 <SensorPlatform_RX_Task+0x22>
 8001336:	bf00      	nop
 8001338:	200001a0 	.word	0x200001a0
 800133c:	08007ec0 	.word	0x08007ec0

08001340 <HostPC_RX_Task>:

/*
 * This task reads the queue of characters from the Host PC when available
 * It then sends the processed data to the Sensor Controller Task
 */
void HostPC_RX_Task(){
 8001340:	b580      	push	{r7, lr}
 8001342:	b082      	sub	sp, #8
 8001344:	af00      	add	r7, sp, #0

	enum HostPCCommands HostPCCommand = PC_Command_NONE;
 8001346:	2300      	movs	r3, #0
 8001348:	71fb      	strb	r3, [r7, #7]

	Queue_HostPC_Data = xQueueCreate(200, sizeof(enum HostPCCommands));
 800134a:	2200      	movs	r2, #0
 800134c:	2101      	movs	r1, #1
 800134e:	20c8      	movs	r0, #200	; 0xc8
 8001350:	f003 f92e 	bl	80045b0 <xQueueGenericCreate>
 8001354:	4603      	mov	r3, r0
 8001356:	4a09      	ldr	r2, [pc, #36]	; (800137c <HostPC_RX_Task+0x3c>)
 8001358:	6013      	str	r3, [r2, #0]

	request_hostPC_read();
 800135a:	f7ff f939 	bl	80005d0 <request_hostPC_read>

	while(1){
		HostPCCommand = parse_hostPC_message();
 800135e:	f7ff fb8d 	bl	8000a7c <parse_hostPC_message>
 8001362:	4603      	mov	r3, r0
 8001364:	71fb      	strb	r3, [r7, #7]

		if (HostPCCommand != PC_Command_NONE){
 8001366:	79fb      	ldrb	r3, [r7, #7]
 8001368:	2b00      	cmp	r3, #0
 800136a:	d0f8      	beq.n	800135e <HostPC_RX_Task+0x1e>
			xQueueSendToBack(Queue_HostPC_Data, &HostPCCommand, 0);
 800136c:	4b03      	ldr	r3, [pc, #12]	; (800137c <HostPC_RX_Task+0x3c>)
 800136e:	6818      	ldr	r0, [r3, #0]
 8001370:	1df9      	adds	r1, r7, #7
 8001372:	2300      	movs	r3, #0
 8001374:	2200      	movs	r2, #0
 8001376:	f003 f9ab 	bl	80046d0 <xQueueGenericSend>
		HostPCCommand = parse_hostPC_message();
 800137a:	e7f0      	b.n	800135e <HostPC_RX_Task+0x1e>
 800137c:	200001a4 	.word	0x200001a4

08001380 <analyzeAcousticValue>:

	}
}

// Analyze Acoustic data for oil pipeline monitoring
char* analyzeAcousticValue(int acousticValue) {
 8001380:	b480      	push	{r7}
 8001382:	b083      	sub	sp, #12
 8001384:	af00      	add	r7, sp, #0
 8001386:	6078      	str	r0, [r7, #4]
    if (acousticValue < 50) {
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	2b31      	cmp	r3, #49	; 0x31
 800138c:	dc01      	bgt.n	8001392 <analyzeAcousticValue+0x12>
        return "Normal Operation - No Leakage Detected";
 800138e:	4b08      	ldr	r3, [pc, #32]	; (80013b0 <analyzeAcousticValue+0x30>)
 8001390:	e008      	b.n	80013a4 <analyzeAcousticValue+0x24>
    } else if (acousticValue >= 50 && acousticValue <= 80) {
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	2b31      	cmp	r3, #49	; 0x31
 8001396:	dd04      	ble.n	80013a2 <analyzeAcousticValue+0x22>
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	2b50      	cmp	r3, #80	; 0x50
 800139c:	dc01      	bgt.n	80013a2 <analyzeAcousticValue+0x22>
        return "Caution - Possible Disturbance";
 800139e:	4b05      	ldr	r3, [pc, #20]	; (80013b4 <analyzeAcousticValue+0x34>)
 80013a0:	e000      	b.n	80013a4 <analyzeAcousticValue+0x24>
    } else {
        return "Alert - Potential Leakage or Structural Issue Detected";
 80013a2:	4b05      	ldr	r3, [pc, #20]	; (80013b8 <analyzeAcousticValue+0x38>)
    }
}
 80013a4:	4618      	mov	r0, r3
 80013a6:	370c      	adds	r7, #12
 80013a8:	46bd      	mov	sp, r7
 80013aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ae:	4770      	bx	lr
 80013b0:	08007efc 	.word	0x08007efc
 80013b4:	08007f24 	.word	0x08007f24
 80013b8:	08007f44 	.word	0x08007f44

080013bc <analyzePressureValue>:

// Analyze Pressure data for oil pipeline monitoring
char* analyzePressureValue(int pressureValue) {
 80013bc:	b480      	push	{r7}
 80013be:	b083      	sub	sp, #12
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	6078      	str	r0, [r7, #4]
    if (pressureValue < 100) {
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	2b63      	cmp	r3, #99	; 0x63
 80013c8:	dc01      	bgt.n	80013ce <analyzePressureValue+0x12>
        return "Low Pressure - Possible Leakage Detected";
 80013ca:	4b07      	ldr	r3, [pc, #28]	; (80013e8 <analyzePressureValue+0x2c>)
 80013cc:	e005      	b.n	80013da <analyzePressureValue+0x1e>
    } else if (pressureValue > 200) {
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	2bc8      	cmp	r3, #200	; 0xc8
 80013d2:	dd01      	ble.n	80013d8 <analyzePressureValue+0x1c>
        return "High Pressure - Risk of Pipeline Rupture";
 80013d4:	4b05      	ldr	r3, [pc, #20]	; (80013ec <analyzePressureValue+0x30>)
 80013d6:	e000      	b.n	80013da <analyzePressureValue+0x1e>
    } else {
        return "Normal Pressure - Pipeline Operating Safely";
 80013d8:	4b05      	ldr	r3, [pc, #20]	; (80013f0 <analyzePressureValue+0x34>)
    }
}
 80013da:	4618      	mov	r0, r3
 80013dc:	370c      	adds	r7, #12
 80013de:	46bd      	mov	sp, r7
 80013e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e4:	4770      	bx	lr
 80013e6:	bf00      	nop
 80013e8:	08007f7c 	.word	0x08007f7c
 80013ec:	08007fa8 	.word	0x08007fa8
 80013f0:	08007fd4 	.word	0x08007fd4

080013f4 <analyzeHallEffectValue>:
    } else {
        return "Normal Pressure - Pipeline Operating Safely";
    }
}

char* analyzeHallEffectValue(int hallValue) {
 80013f4:	b480      	push	{r7}
 80013f6:	b083      	sub	sp, #12
 80013f8:	af00      	add	r7, sp, #0
 80013fa:	6078      	str	r0, [r7, #4]
    if (hallValue < 100) {
 80013fc:	687b      	ldr	r3, [r7, #4]
 80013fe:	2b63      	cmp	r3, #99	; 0x63
 8001400:	dc01      	bgt.n	8001406 <analyzeHallEffectValue+0x12>
        return "Low Magnetic Field - Possible Structure Deformation";
 8001402:	4b07      	ldr	r3, [pc, #28]	; (8001420 <analyzeHallEffectValue+0x2c>)
 8001404:	e005      	b.n	8001412 <analyzeHallEffectValue+0x1e>
    } else if (hallValue > 150) {
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	2b96      	cmp	r3, #150	; 0x96
 800140a:	dd01      	ble.n	8001410 <analyzeHallEffectValue+0x1c>
        return "High Magnetic Field - Potential Metal Stress";
 800140c:	4b05      	ldr	r3, [pc, #20]	; (8001424 <analyzeHallEffectValue+0x30>)
 800140e:	e000      	b.n	8001412 <analyzeHallEffectValue+0x1e>
    } else {
        return "Normal Magnetic Field - Structure Intact";
 8001410:	4b05      	ldr	r3, [pc, #20]	; (8001428 <analyzeHallEffectValue+0x34>)
    }
}
 8001412:	4618      	mov	r0, r3
 8001414:	370c      	adds	r7, #12
 8001416:	46bd      	mov	sp, r7
 8001418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800141c:	4770      	bx	lr
 800141e:	bf00      	nop
 8001420:	0800811c 	.word	0x0800811c
 8001424:	08008150 	.word	0x08008150
 8001428:	08008180 	.word	0x08008180

0800142c <analyzeTemperatureValue>:

char* analyzeTemperatureValue(int tempValue) {
 800142c:	b480      	push	{r7}
 800142e:	b083      	sub	sp, #12
 8001430:	af00      	add	r7, sp, #0
 8001432:	6078      	str	r0, [r7, #4]
    if (tempValue < 20) {
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	2b13      	cmp	r3, #19
 8001438:	dc01      	bgt.n	800143e <analyzeTemperatureValue+0x12>
        return "Low Temperature - Monitor for Freezing Risk";
 800143a:	4b07      	ldr	r3, [pc, #28]	; (8001458 <analyzeTemperatureValue+0x2c>)
 800143c:	e005      	b.n	800144a <analyzeTemperatureValue+0x1e>
    } else if (tempValue > 30) {
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	2b1e      	cmp	r3, #30
 8001442:	dd01      	ble.n	8001448 <analyzeTemperatureValue+0x1c>
        return "High Temperature - Check for Overheating";
 8001444:	4b05      	ldr	r3, [pc, #20]	; (800145c <analyzeTemperatureValue+0x30>)
 8001446:	e000      	b.n	800144a <analyzeTemperatureValue+0x1e>
    } else {
        return "Normal Temperature Range";
 8001448:	4b05      	ldr	r3, [pc, #20]	; (8001460 <analyzeTemperatureValue+0x34>)
    }
}
 800144a:	4618      	mov	r0, r3
 800144c:	370c      	adds	r7, #12
 800144e:	46bd      	mov	sp, r7
 8001450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001454:	4770      	bx	lr
 8001456:	bf00      	nop
 8001458:	080081ac 	.word	0x080081ac
 800145c:	080081d8 	.word	0x080081d8
 8001460:	08008204 	.word	0x08008204

08001464 <main_user>:
//#define CODE_MODE SENSORPLATFORM_MODE

// for the board powering (controller)
#define CODE_MODE SENSORCONTROLLER_MODE

void main_user(){
 8001464:	b580      	push	{r7, lr}
 8001466:	b082      	sub	sp, #8
 8001468:	af02      	add	r7, sp, #8
	util_init();
 800146a:	f000 f835 	bl	80014d8 <util_init>

	initialize_sensor_datalink();
 800146e:	f7ff f955 	bl	800071c <initialize_sensor_datalink>

#if CODE_MODE == SENSORCONTROLLER_MODE
	initialize_hostPC_datalink();
 8001472:	f7ff f959 	bl	8000728 <initialize_hostPC_datalink>
#endif

#if CODE_MODE == SENSORCONTROLLER_MODE
	xTaskCreate(HostPC_RX_Task,"HostPC_RX_Task", configMINIMAL_STACK_SIZE + 400, NULL, tskIDLE_PRIORITY + 2, NULL);
 8001476:	2300      	movs	r3, #0
 8001478:	9301      	str	r3, [sp, #4]
 800147a:	2302      	movs	r3, #2
 800147c:	9300      	str	r3, [sp, #0]
 800147e:	2300      	movs	r3, #0
 8001480:	f44f 7204 	mov.w	r2, #528	; 0x210
 8001484:	490e      	ldr	r1, [pc, #56]	; (80014c0 <main_user+0x5c>)
 8001486:	480f      	ldr	r0, [pc, #60]	; (80014c4 <main_user+0x60>)
 8001488:	f003 fe8b 	bl	80051a2 <xTaskCreate>

	xTaskCreate(SensorPlatform_RX_Task,"SensorPlatform_RX_Task", configMINIMAL_STACK_SIZE + 400, NULL, tskIDLE_PRIORITY + 2, NULL);
 800148c:	2300      	movs	r3, #0
 800148e:	9301      	str	r3, [sp, #4]
 8001490:	2302      	movs	r3, #2
 8001492:	9300      	str	r3, [sp, #0]
 8001494:	2300      	movs	r3, #0
 8001496:	f44f 7204 	mov.w	r2, #528	; 0x210
 800149a:	490b      	ldr	r1, [pc, #44]	; (80014c8 <main_user+0x64>)
 800149c:	480b      	ldr	r0, [pc, #44]	; (80014cc <main_user+0x68>)
 800149e:	f003 fe80 	bl	80051a2 <xTaskCreate>

	xTaskCreate(SensorControllerTask,"Sensor_Controller_Task", configMINIMAL_STACK_SIZE + 400, NULL, tskIDLE_PRIORITY + 2, NULL);
 80014a2:	2300      	movs	r3, #0
 80014a4:	9301      	str	r3, [sp, #4]
 80014a6:	2302      	movs	r3, #2
 80014a8:	9300      	str	r3, [sp, #0]
 80014aa:	2300      	movs	r3, #0
 80014ac:	f44f 7204 	mov.w	r2, #528	; 0x210
 80014b0:	4907      	ldr	r1, [pc, #28]	; (80014d0 <main_user+0x6c>)
 80014b2:	4808      	ldr	r0, [pc, #32]	; (80014d4 <main_user+0x70>)
 80014b4:	f003 fe75 	bl	80051a2 <xTaskCreate>
#elif CODE_MODE == SENSORPLATFORM_MODE
	xTaskCreate(SensorPlatformTask,"Sensor_Platform_Task", configMINIMAL_STACK_SIZE + 400, NULL, tskIDLE_PRIORITY + 2, NULL);
#endif
	vTaskStartScheduler();
 80014b8:	f004 f802 	bl	80054c0 <vTaskStartScheduler>

	while(1);
 80014bc:	e7fe      	b.n	80014bc <main_user+0x58>
 80014be:	bf00      	nop
 80014c0:	08008220 	.word	0x08008220
 80014c4:	08001341 	.word	0x08001341
 80014c8:	08008230 	.word	0x08008230
 80014cc:	080012c1 	.word	0x080012c1
 80014d0:	08008248 	.word	0x08008248
 80014d4:	08000c35 	.word	0x08000c35

080014d8 <util_init>:
 80014d8:	b580      	push	{r7, lr}
 80014da:	af00      	add	r7, sp, #0
 80014dc:	2001      	movs	r0, #1
 80014de:	f003 f8de 	bl	800469e <xQueueCreateMutex>
 80014e2:	4603      	mov	r3, r0
 80014e4:	4a01      	ldr	r2, [pc, #4]	; (80014ec <util_init+0x14>)
 80014e6:	6013      	str	r3, [r2, #0]
 80014e8:	bf00      	nop
 80014ea:	bd80      	pop	{r7, pc}
 80014ec:	200001b0 	.word	0x200001b0

080014f0 <print_str_local>:
 80014f0:	b580      	push	{r7, lr}
 80014f2:	b082      	sub	sp, #8
 80014f4:	af00      	add	r7, sp, #0
 80014f6:	6078      	str	r0, [r7, #4]
 80014f8:	6878      	ldr	r0, [r7, #4]
 80014fa:	f7fe fe7b 	bl	80001f4 <strlen>
 80014fe:	4603      	mov	r3, r0
 8001500:	b29a      	uxth	r2, r3
 8001502:	f04f 33ff 	mov.w	r3, #4294967295
 8001506:	6879      	ldr	r1, [r7, #4]
 8001508:	4803      	ldr	r0, [pc, #12]	; (8001518 <print_str_local+0x28>)
 800150a:	f001 fe4e 	bl	80031aa <HAL_UART_Transmit>
 800150e:	bf00      	nop
 8001510:	3708      	adds	r7, #8
 8001512:	46bd      	mov	sp, r7
 8001514:	bd80      	pop	{r7, pc}
 8001516:	bf00      	nop
 8001518:	200001b4 	.word	0x200001b4

0800151c <print_str>:
 800151c:	b580      	push	{r7, lr}
 800151e:	b082      	sub	sp, #8
 8001520:	af00      	add	r7, sp, #0
 8001522:	6078      	str	r0, [r7, #4]
 8001524:	4b0a      	ldr	r3, [pc, #40]	; (8001550 <print_str+0x34>)
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	f04f 31ff 	mov.w	r1, #4294967295
 800152c:	4618      	mov	r0, r3
 800152e:	f003 fb49 	bl	8004bc4 <xQueueSemaphoreTake>
 8001532:	6878      	ldr	r0, [r7, #4]
 8001534:	f7ff ffdc 	bl	80014f0 <print_str_local>
 8001538:	4b05      	ldr	r3, [pc, #20]	; (8001550 <print_str+0x34>)
 800153a:	6818      	ldr	r0, [r3, #0]
 800153c:	2300      	movs	r3, #0
 800153e:	2200      	movs	r2, #0
 8001540:	2100      	movs	r1, #0
 8001542:	f003 f8c5 	bl	80046d0 <xQueueGenericSend>
 8001546:	bf00      	nop
 8001548:	3708      	adds	r7, #8
 800154a:	46bd      	mov	sp, r7
 800154c:	bd80      	pop	{r7, pc}
 800154e:	bf00      	nop
 8001550:	200001b0 	.word	0x200001b0

08001554 <main>:
 8001554:	b580      	push	{r7, lr}
 8001556:	af00      	add	r7, sp, #0
 8001558:	f000 fb22 	bl	8001ba0 <HAL_Init>
 800155c:	f000 f80a 	bl	8001574 <SystemClock_Config>
 8001560:	f000 f8c6 	bl	80016f0 <MX_GPIO_Init>
 8001564:	f000 f870 	bl	8001648 <MX_USART2_UART_Init>
 8001568:	f000 f898 	bl	800169c <MX_USART6_UART_Init>
 800156c:	f7ff ff7a 	bl	8001464 <main_user>
 8001570:	e7fe      	b.n	8001570 <main+0x1c>
	...

08001574 <SystemClock_Config>:
 8001574:	b580      	push	{r7, lr}
 8001576:	b094      	sub	sp, #80	; 0x50
 8001578:	af00      	add	r7, sp, #0
 800157a:	f107 0320 	add.w	r3, r7, #32
 800157e:	2230      	movs	r2, #48	; 0x30
 8001580:	2100      	movs	r1, #0
 8001582:	4618      	mov	r0, r3
 8001584:	f005 fc68 	bl	8006e58 <memset>
 8001588:	f107 030c 	add.w	r3, r7, #12
 800158c:	2200      	movs	r2, #0
 800158e:	601a      	str	r2, [r3, #0]
 8001590:	605a      	str	r2, [r3, #4]
 8001592:	609a      	str	r2, [r3, #8]
 8001594:	60da      	str	r2, [r3, #12]
 8001596:	611a      	str	r2, [r3, #16]
 8001598:	2300      	movs	r3, #0
 800159a:	60bb      	str	r3, [r7, #8]
 800159c:	4b28      	ldr	r3, [pc, #160]	; (8001640 <SystemClock_Config+0xcc>)
 800159e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015a0:	4a27      	ldr	r2, [pc, #156]	; (8001640 <SystemClock_Config+0xcc>)
 80015a2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015a6:	6413      	str	r3, [r2, #64]	; 0x40
 80015a8:	4b25      	ldr	r3, [pc, #148]	; (8001640 <SystemClock_Config+0xcc>)
 80015aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015b0:	60bb      	str	r3, [r7, #8]
 80015b2:	68bb      	ldr	r3, [r7, #8]
 80015b4:	2300      	movs	r3, #0
 80015b6:	607b      	str	r3, [r7, #4]
 80015b8:	4b22      	ldr	r3, [pc, #136]	; (8001644 <SystemClock_Config+0xd0>)
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	4a21      	ldr	r2, [pc, #132]	; (8001644 <SystemClock_Config+0xd0>)
 80015be:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80015c2:	6013      	str	r3, [r2, #0]
 80015c4:	4b1f      	ldr	r3, [pc, #124]	; (8001644 <SystemClock_Config+0xd0>)
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80015cc:	607b      	str	r3, [r7, #4]
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	2302      	movs	r3, #2
 80015d2:	623b      	str	r3, [r7, #32]
 80015d4:	2301      	movs	r3, #1
 80015d6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80015d8:	2310      	movs	r3, #16
 80015da:	633b      	str	r3, [r7, #48]	; 0x30
 80015dc:	2302      	movs	r3, #2
 80015de:	63bb      	str	r3, [r7, #56]	; 0x38
 80015e0:	2300      	movs	r3, #0
 80015e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80015e4:	2310      	movs	r3, #16
 80015e6:	643b      	str	r3, [r7, #64]	; 0x40
 80015e8:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80015ec:	647b      	str	r3, [r7, #68]	; 0x44
 80015ee:	2304      	movs	r3, #4
 80015f0:	64bb      	str	r3, [r7, #72]	; 0x48
 80015f2:	2304      	movs	r3, #4
 80015f4:	64fb      	str	r3, [r7, #76]	; 0x4c
 80015f6:	f107 0320 	add.w	r3, r7, #32
 80015fa:	4618      	mov	r0, r3
 80015fc:	f000 fe3e 	bl	800227c <HAL_RCC_OscConfig>
 8001600:	4603      	mov	r3, r0
 8001602:	2b00      	cmp	r3, #0
 8001604:	d001      	beq.n	800160a <SystemClock_Config+0x96>
 8001606:	f000 f8f3 	bl	80017f0 <Error_Handler>
 800160a:	230f      	movs	r3, #15
 800160c:	60fb      	str	r3, [r7, #12]
 800160e:	2302      	movs	r3, #2
 8001610:	613b      	str	r3, [r7, #16]
 8001612:	2300      	movs	r3, #0
 8001614:	617b      	str	r3, [r7, #20]
 8001616:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800161a:	61bb      	str	r3, [r7, #24]
 800161c:	2300      	movs	r3, #0
 800161e:	61fb      	str	r3, [r7, #28]
 8001620:	f107 030c 	add.w	r3, r7, #12
 8001624:	2102      	movs	r1, #2
 8001626:	4618      	mov	r0, r3
 8001628:	f001 f8a0 	bl	800276c <HAL_RCC_ClockConfig>
 800162c:	4603      	mov	r3, r0
 800162e:	2b00      	cmp	r3, #0
 8001630:	d001      	beq.n	8001636 <SystemClock_Config+0xc2>
 8001632:	f000 f8dd 	bl	80017f0 <Error_Handler>
 8001636:	bf00      	nop
 8001638:	3750      	adds	r7, #80	; 0x50
 800163a:	46bd      	mov	sp, r7
 800163c:	bd80      	pop	{r7, pc}
 800163e:	bf00      	nop
 8001640:	40023800 	.word	0x40023800
 8001644:	40007000 	.word	0x40007000

08001648 <MX_USART2_UART_Init>:
 8001648:	b580      	push	{r7, lr}
 800164a:	af00      	add	r7, sp, #0
 800164c:	4b11      	ldr	r3, [pc, #68]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 800164e:	4a12      	ldr	r2, [pc, #72]	; (8001698 <MX_USART2_UART_Init+0x50>)
 8001650:	601a      	str	r2, [r3, #0]
 8001652:	4b10      	ldr	r3, [pc, #64]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 8001654:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001658:	605a      	str	r2, [r3, #4]
 800165a:	4b0e      	ldr	r3, [pc, #56]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 800165c:	2200      	movs	r2, #0
 800165e:	609a      	str	r2, [r3, #8]
 8001660:	4b0c      	ldr	r3, [pc, #48]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 8001662:	2200      	movs	r2, #0
 8001664:	60da      	str	r2, [r3, #12]
 8001666:	4b0b      	ldr	r3, [pc, #44]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 8001668:	2200      	movs	r2, #0
 800166a:	611a      	str	r2, [r3, #16]
 800166c:	4b09      	ldr	r3, [pc, #36]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 800166e:	220c      	movs	r2, #12
 8001670:	615a      	str	r2, [r3, #20]
 8001672:	4b08      	ldr	r3, [pc, #32]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 8001674:	2200      	movs	r2, #0
 8001676:	619a      	str	r2, [r3, #24]
 8001678:	4b06      	ldr	r3, [pc, #24]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 800167a:	2200      	movs	r2, #0
 800167c:	61da      	str	r2, [r3, #28]
 800167e:	4805      	ldr	r0, [pc, #20]	; (8001694 <MX_USART2_UART_Init+0x4c>)
 8001680:	f001 fd46 	bl	8003110 <HAL_UART_Init>
 8001684:	4603      	mov	r3, r0
 8001686:	2b00      	cmp	r3, #0
 8001688:	d001      	beq.n	800168e <MX_USART2_UART_Init+0x46>
 800168a:	f000 f8b1 	bl	80017f0 <Error_Handler>
 800168e:	bf00      	nop
 8001690:	bd80      	pop	{r7, pc}
 8001692:	bf00      	nop
 8001694:	200001b4 	.word	0x200001b4
 8001698:	40004400 	.word	0x40004400

0800169c <MX_USART6_UART_Init>:
 800169c:	b580      	push	{r7, lr}
 800169e:	af00      	add	r7, sp, #0
 80016a0:	4b11      	ldr	r3, [pc, #68]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016a2:	4a12      	ldr	r2, [pc, #72]	; (80016ec <MX_USART6_UART_Init+0x50>)
 80016a4:	601a      	str	r2, [r3, #0]
 80016a6:	4b10      	ldr	r3, [pc, #64]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016a8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80016ac:	605a      	str	r2, [r3, #4]
 80016ae:	4b0e      	ldr	r3, [pc, #56]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016b0:	2200      	movs	r2, #0
 80016b2:	609a      	str	r2, [r3, #8]
 80016b4:	4b0c      	ldr	r3, [pc, #48]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016b6:	2200      	movs	r2, #0
 80016b8:	60da      	str	r2, [r3, #12]
 80016ba:	4b0b      	ldr	r3, [pc, #44]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016bc:	2200      	movs	r2, #0
 80016be:	611a      	str	r2, [r3, #16]
 80016c0:	4b09      	ldr	r3, [pc, #36]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016c2:	220c      	movs	r2, #12
 80016c4:	615a      	str	r2, [r3, #20]
 80016c6:	4b08      	ldr	r3, [pc, #32]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016c8:	2200      	movs	r2, #0
 80016ca:	619a      	str	r2, [r3, #24]
 80016cc:	4b06      	ldr	r3, [pc, #24]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016ce:	2200      	movs	r2, #0
 80016d0:	61da      	str	r2, [r3, #28]
 80016d2:	4805      	ldr	r0, [pc, #20]	; (80016e8 <MX_USART6_UART_Init+0x4c>)
 80016d4:	f001 fd1c 	bl	8003110 <HAL_UART_Init>
 80016d8:	4603      	mov	r3, r0
 80016da:	2b00      	cmp	r3, #0
 80016dc:	d001      	beq.n	80016e2 <MX_USART6_UART_Init+0x46>
 80016de:	f000 f887 	bl	80017f0 <Error_Handler>
 80016e2:	bf00      	nop
 80016e4:	bd80      	pop	{r7, pc}
 80016e6:	bf00      	nop
 80016e8:	200001f8 	.word	0x200001f8
 80016ec:	40011400 	.word	0x40011400

080016f0 <MX_GPIO_Init>:
 80016f0:	b580      	push	{r7, lr}
 80016f2:	b08a      	sub	sp, #40	; 0x28
 80016f4:	af00      	add	r7, sp, #0
 80016f6:	f107 0314 	add.w	r3, r7, #20
 80016fa:	2200      	movs	r2, #0
 80016fc:	601a      	str	r2, [r3, #0]
 80016fe:	605a      	str	r2, [r3, #4]
 8001700:	609a      	str	r2, [r3, #8]
 8001702:	60da      	str	r2, [r3, #12]
 8001704:	611a      	str	r2, [r3, #16]
 8001706:	2300      	movs	r3, #0
 8001708:	613b      	str	r3, [r7, #16]
 800170a:	4b2d      	ldr	r3, [pc, #180]	; (80017c0 <MX_GPIO_Init+0xd0>)
 800170c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800170e:	4a2c      	ldr	r2, [pc, #176]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001710:	f043 0304 	orr.w	r3, r3, #4
 8001714:	6313      	str	r3, [r2, #48]	; 0x30
 8001716:	4b2a      	ldr	r3, [pc, #168]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001718:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800171a:	f003 0304 	and.w	r3, r3, #4
 800171e:	613b      	str	r3, [r7, #16]
 8001720:	693b      	ldr	r3, [r7, #16]
 8001722:	2300      	movs	r3, #0
 8001724:	60fb      	str	r3, [r7, #12]
 8001726:	4b26      	ldr	r3, [pc, #152]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001728:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800172a:	4a25      	ldr	r2, [pc, #148]	; (80017c0 <MX_GPIO_Init+0xd0>)
 800172c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001730:	6313      	str	r3, [r2, #48]	; 0x30
 8001732:	4b23      	ldr	r3, [pc, #140]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001734:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001736:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800173a:	60fb      	str	r3, [r7, #12]
 800173c:	68fb      	ldr	r3, [r7, #12]
 800173e:	2300      	movs	r3, #0
 8001740:	60bb      	str	r3, [r7, #8]
 8001742:	4b1f      	ldr	r3, [pc, #124]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001744:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001746:	4a1e      	ldr	r2, [pc, #120]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001748:	f043 0301 	orr.w	r3, r3, #1
 800174c:	6313      	str	r3, [r2, #48]	; 0x30
 800174e:	4b1c      	ldr	r3, [pc, #112]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001750:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001752:	f003 0301 	and.w	r3, r3, #1
 8001756:	60bb      	str	r3, [r7, #8]
 8001758:	68bb      	ldr	r3, [r7, #8]
 800175a:	2300      	movs	r3, #0
 800175c:	607b      	str	r3, [r7, #4]
 800175e:	4b18      	ldr	r3, [pc, #96]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001760:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001762:	4a17      	ldr	r2, [pc, #92]	; (80017c0 <MX_GPIO_Init+0xd0>)
 8001764:	f043 0302 	orr.w	r3, r3, #2
 8001768:	6313      	str	r3, [r2, #48]	; 0x30
 800176a:	4b15      	ldr	r3, [pc, #84]	; (80017c0 <MX_GPIO_Init+0xd0>)
 800176c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800176e:	f003 0302 	and.w	r3, r3, #2
 8001772:	607b      	str	r3, [r7, #4]
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	2200      	movs	r2, #0
 8001778:	2120      	movs	r1, #32
 800177a:	4812      	ldr	r0, [pc, #72]	; (80017c4 <MX_GPIO_Init+0xd4>)
 800177c:	f000 fd4a 	bl	8002214 <HAL_GPIO_WritePin>
 8001780:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001784:	617b      	str	r3, [r7, #20]
 8001786:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 800178a:	61bb      	str	r3, [r7, #24]
 800178c:	2300      	movs	r3, #0
 800178e:	61fb      	str	r3, [r7, #28]
 8001790:	f107 0314 	add.w	r3, r7, #20
 8001794:	4619      	mov	r1, r3
 8001796:	480c      	ldr	r0, [pc, #48]	; (80017c8 <MX_GPIO_Init+0xd8>)
 8001798:	f000 fbb8 	bl	8001f0c <HAL_GPIO_Init>
 800179c:	2320      	movs	r3, #32
 800179e:	617b      	str	r3, [r7, #20]
 80017a0:	2301      	movs	r3, #1
 80017a2:	61bb      	str	r3, [r7, #24]
 80017a4:	2300      	movs	r3, #0
 80017a6:	61fb      	str	r3, [r7, #28]
 80017a8:	2300      	movs	r3, #0
 80017aa:	623b      	str	r3, [r7, #32]
 80017ac:	f107 0314 	add.w	r3, r7, #20
 80017b0:	4619      	mov	r1, r3
 80017b2:	4804      	ldr	r0, [pc, #16]	; (80017c4 <MX_GPIO_Init+0xd4>)
 80017b4:	f000 fbaa 	bl	8001f0c <HAL_GPIO_Init>
 80017b8:	bf00      	nop
 80017ba:	3728      	adds	r7, #40	; 0x28
 80017bc:	46bd      	mov	sp, r7
 80017be:	bd80      	pop	{r7, pc}
 80017c0:	40023800 	.word	0x40023800
 80017c4:	40020000 	.word	0x40020000
 80017c8:	40020800 	.word	0x40020800

080017cc <HAL_TIM_PeriodElapsedCallback>:
 80017cc:	b580      	push	{r7, lr}
 80017ce:	b082      	sub	sp, #8
 80017d0:	af00      	add	r7, sp, #0
 80017d2:	6078      	str	r0, [r7, #4]
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	4a04      	ldr	r2, [pc, #16]	; (80017ec <HAL_TIM_PeriodElapsedCallback+0x20>)
 80017da:	4293      	cmp	r3, r2
 80017dc:	d101      	bne.n	80017e2 <HAL_TIM_PeriodElapsedCallback+0x16>
 80017de:	f000 fa01 	bl	8001be4 <HAL_IncTick>
 80017e2:	bf00      	nop
 80017e4:	3708      	adds	r7, #8
 80017e6:	46bd      	mov	sp, r7
 80017e8:	bd80      	pop	{r7, pc}
 80017ea:	bf00      	nop
 80017ec:	40014000 	.word	0x40014000

080017f0 <Error_Handler>:
 80017f0:	b480      	push	{r7}
 80017f2:	af00      	add	r7, sp, #0
 80017f4:	b672      	cpsid	i
 80017f6:	bf00      	nop
 80017f8:	e7fe      	b.n	80017f8 <Error_Handler+0x8>
	...

080017fc <HAL_MspInit>:
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b082      	sub	sp, #8
 8001800:	af00      	add	r7, sp, #0
 8001802:	2300      	movs	r3, #0
 8001804:	607b      	str	r3, [r7, #4]
 8001806:	4b12      	ldr	r3, [pc, #72]	; (8001850 <HAL_MspInit+0x54>)
 8001808:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800180a:	4a11      	ldr	r2, [pc, #68]	; (8001850 <HAL_MspInit+0x54>)
 800180c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001810:	6453      	str	r3, [r2, #68]	; 0x44
 8001812:	4b0f      	ldr	r3, [pc, #60]	; (8001850 <HAL_MspInit+0x54>)
 8001814:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001816:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800181a:	607b      	str	r3, [r7, #4]
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	2300      	movs	r3, #0
 8001820:	603b      	str	r3, [r7, #0]
 8001822:	4b0b      	ldr	r3, [pc, #44]	; (8001850 <HAL_MspInit+0x54>)
 8001824:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001826:	4a0a      	ldr	r2, [pc, #40]	; (8001850 <HAL_MspInit+0x54>)
 8001828:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800182c:	6413      	str	r3, [r2, #64]	; 0x40
 800182e:	4b08      	ldr	r3, [pc, #32]	; (8001850 <HAL_MspInit+0x54>)
 8001830:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001832:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001836:	603b      	str	r3, [r7, #0]
 8001838:	683b      	ldr	r3, [r7, #0]
 800183a:	2200      	movs	r2, #0
 800183c:	210f      	movs	r1, #15
 800183e:	f06f 0001 	mvn.w	r0, #1
 8001842:	f000 faa7 	bl	8001d94 <HAL_NVIC_SetPriority>
 8001846:	bf00      	nop
 8001848:	3708      	adds	r7, #8
 800184a:	46bd      	mov	sp, r7
 800184c:	bd80      	pop	{r7, pc}
 800184e:	bf00      	nop
 8001850:	40023800 	.word	0x40023800

08001854 <HAL_UART_MspInit>:
 8001854:	b580      	push	{r7, lr}
 8001856:	b08c      	sub	sp, #48	; 0x30
 8001858:	af00      	add	r7, sp, #0
 800185a:	6078      	str	r0, [r7, #4]
 800185c:	f107 031c 	add.w	r3, r7, #28
 8001860:	2200      	movs	r2, #0
 8001862:	601a      	str	r2, [r3, #0]
 8001864:	605a      	str	r2, [r3, #4]
 8001866:	609a      	str	r2, [r3, #8]
 8001868:	60da      	str	r2, [r3, #12]
 800186a:	611a      	str	r2, [r3, #16]
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	4a3a      	ldr	r2, [pc, #232]	; (800195c <HAL_UART_MspInit+0x108>)
 8001872:	4293      	cmp	r3, r2
 8001874:	d134      	bne.n	80018e0 <HAL_UART_MspInit+0x8c>
 8001876:	2300      	movs	r3, #0
 8001878:	61bb      	str	r3, [r7, #24]
 800187a:	4b39      	ldr	r3, [pc, #228]	; (8001960 <HAL_UART_MspInit+0x10c>)
 800187c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800187e:	4a38      	ldr	r2, [pc, #224]	; (8001960 <HAL_UART_MspInit+0x10c>)
 8001880:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001884:	6413      	str	r3, [r2, #64]	; 0x40
 8001886:	4b36      	ldr	r3, [pc, #216]	; (8001960 <HAL_UART_MspInit+0x10c>)
 8001888:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800188a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800188e:	61bb      	str	r3, [r7, #24]
 8001890:	69bb      	ldr	r3, [r7, #24]
 8001892:	2300      	movs	r3, #0
 8001894:	617b      	str	r3, [r7, #20]
 8001896:	4b32      	ldr	r3, [pc, #200]	; (8001960 <HAL_UART_MspInit+0x10c>)
 8001898:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800189a:	4a31      	ldr	r2, [pc, #196]	; (8001960 <HAL_UART_MspInit+0x10c>)
 800189c:	f043 0301 	orr.w	r3, r3, #1
 80018a0:	6313      	str	r3, [r2, #48]	; 0x30
 80018a2:	4b2f      	ldr	r3, [pc, #188]	; (8001960 <HAL_UART_MspInit+0x10c>)
 80018a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018a6:	f003 0301 	and.w	r3, r3, #1
 80018aa:	617b      	str	r3, [r7, #20]
 80018ac:	697b      	ldr	r3, [r7, #20]
 80018ae:	230c      	movs	r3, #12
 80018b0:	61fb      	str	r3, [r7, #28]
 80018b2:	2302      	movs	r3, #2
 80018b4:	623b      	str	r3, [r7, #32]
 80018b6:	2300      	movs	r3, #0
 80018b8:	627b      	str	r3, [r7, #36]	; 0x24
 80018ba:	2303      	movs	r3, #3
 80018bc:	62bb      	str	r3, [r7, #40]	; 0x28
 80018be:	2307      	movs	r3, #7
 80018c0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80018c2:	f107 031c 	add.w	r3, r7, #28
 80018c6:	4619      	mov	r1, r3
 80018c8:	4826      	ldr	r0, [pc, #152]	; (8001964 <HAL_UART_MspInit+0x110>)
 80018ca:	f000 fb1f 	bl	8001f0c <HAL_GPIO_Init>
 80018ce:	2200      	movs	r2, #0
 80018d0:	2105      	movs	r1, #5
 80018d2:	2026      	movs	r0, #38	; 0x26
 80018d4:	f000 fa5e 	bl	8001d94 <HAL_NVIC_SetPriority>
 80018d8:	2026      	movs	r0, #38	; 0x26
 80018da:	f000 fa77 	bl	8001dcc <HAL_NVIC_EnableIRQ>
 80018de:	e038      	b.n	8001952 <HAL_UART_MspInit+0xfe>
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	4a20      	ldr	r2, [pc, #128]	; (8001968 <HAL_UART_MspInit+0x114>)
 80018e6:	4293      	cmp	r3, r2
 80018e8:	d133      	bne.n	8001952 <HAL_UART_MspInit+0xfe>
 80018ea:	2300      	movs	r3, #0
 80018ec:	613b      	str	r3, [r7, #16]
 80018ee:	4b1c      	ldr	r3, [pc, #112]	; (8001960 <HAL_UART_MspInit+0x10c>)
 80018f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80018f2:	4a1b      	ldr	r2, [pc, #108]	; (8001960 <HAL_UART_MspInit+0x10c>)
 80018f4:	f043 0320 	orr.w	r3, r3, #32
 80018f8:	6453      	str	r3, [r2, #68]	; 0x44
 80018fa:	4b19      	ldr	r3, [pc, #100]	; (8001960 <HAL_UART_MspInit+0x10c>)
 80018fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80018fe:	f003 0320 	and.w	r3, r3, #32
 8001902:	613b      	str	r3, [r7, #16]
 8001904:	693b      	ldr	r3, [r7, #16]
 8001906:	2300      	movs	r3, #0
 8001908:	60fb      	str	r3, [r7, #12]
 800190a:	4b15      	ldr	r3, [pc, #84]	; (8001960 <HAL_UART_MspInit+0x10c>)
 800190c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800190e:	4a14      	ldr	r2, [pc, #80]	; (8001960 <HAL_UART_MspInit+0x10c>)
 8001910:	f043 0304 	orr.w	r3, r3, #4
 8001914:	6313      	str	r3, [r2, #48]	; 0x30
 8001916:	4b12      	ldr	r3, [pc, #72]	; (8001960 <HAL_UART_MspInit+0x10c>)
 8001918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800191a:	f003 0304 	and.w	r3, r3, #4
 800191e:	60fb      	str	r3, [r7, #12]
 8001920:	68fb      	ldr	r3, [r7, #12]
 8001922:	23c0      	movs	r3, #192	; 0xc0
 8001924:	61fb      	str	r3, [r7, #28]
 8001926:	2302      	movs	r3, #2
 8001928:	623b      	str	r3, [r7, #32]
 800192a:	2300      	movs	r3, #0
 800192c:	627b      	str	r3, [r7, #36]	; 0x24
 800192e:	2303      	movs	r3, #3
 8001930:	62bb      	str	r3, [r7, #40]	; 0x28
 8001932:	2308      	movs	r3, #8
 8001934:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001936:	f107 031c 	add.w	r3, r7, #28
 800193a:	4619      	mov	r1, r3
 800193c:	480b      	ldr	r0, [pc, #44]	; (800196c <HAL_UART_MspInit+0x118>)
 800193e:	f000 fae5 	bl	8001f0c <HAL_GPIO_Init>
 8001942:	2200      	movs	r2, #0
 8001944:	2105      	movs	r1, #5
 8001946:	2047      	movs	r0, #71	; 0x47
 8001948:	f000 fa24 	bl	8001d94 <HAL_NVIC_SetPriority>
 800194c:	2047      	movs	r0, #71	; 0x47
 800194e:	f000 fa3d 	bl	8001dcc <HAL_NVIC_EnableIRQ>
 8001952:	bf00      	nop
 8001954:	3730      	adds	r7, #48	; 0x30
 8001956:	46bd      	mov	sp, r7
 8001958:	bd80      	pop	{r7, pc}
 800195a:	bf00      	nop
 800195c:	40004400 	.word	0x40004400
 8001960:	40023800 	.word	0x40023800
 8001964:	40020000 	.word	0x40020000
 8001968:	40011400 	.word	0x40011400
 800196c:	40020800 	.word	0x40020800

08001970 <HAL_InitTick>:
 8001970:	b580      	push	{r7, lr}
 8001972:	b08c      	sub	sp, #48	; 0x30
 8001974:	af00      	add	r7, sp, #0
 8001976:	6078      	str	r0, [r7, #4]
 8001978:	2300      	movs	r3, #0
 800197a:	62bb      	str	r3, [r7, #40]	; 0x28
 800197c:	2300      	movs	r3, #0
 800197e:	627b      	str	r3, [r7, #36]	; 0x24
 8001980:	2300      	movs	r3, #0
 8001982:	60bb      	str	r3, [r7, #8]
 8001984:	4b2e      	ldr	r3, [pc, #184]	; (8001a40 <HAL_InitTick+0xd0>)
 8001986:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001988:	4a2d      	ldr	r2, [pc, #180]	; (8001a40 <HAL_InitTick+0xd0>)
 800198a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800198e:	6453      	str	r3, [r2, #68]	; 0x44
 8001990:	4b2b      	ldr	r3, [pc, #172]	; (8001a40 <HAL_InitTick+0xd0>)
 8001992:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001994:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001998:	60bb      	str	r3, [r7, #8]
 800199a:	68bb      	ldr	r3, [r7, #8]
 800199c:	f107 020c 	add.w	r2, r7, #12
 80019a0:	f107 0310 	add.w	r3, r7, #16
 80019a4:	4611      	mov	r1, r2
 80019a6:	4618      	mov	r0, r3
 80019a8:	f001 f900 	bl	8002bac <HAL_RCC_GetClockConfig>
 80019ac:	f001 f8ea 	bl	8002b84 <HAL_RCC_GetPCLK2Freq>
 80019b0:	62b8      	str	r0, [r7, #40]	; 0x28
 80019b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80019b4:	4a23      	ldr	r2, [pc, #140]	; (8001a44 <HAL_InitTick+0xd4>)
 80019b6:	fba2 2303 	umull	r2, r3, r2, r3
 80019ba:	0c9b      	lsrs	r3, r3, #18
 80019bc:	3b01      	subs	r3, #1
 80019be:	627b      	str	r3, [r7, #36]	; 0x24
 80019c0:	4b21      	ldr	r3, [pc, #132]	; (8001a48 <HAL_InitTick+0xd8>)
 80019c2:	4a22      	ldr	r2, [pc, #136]	; (8001a4c <HAL_InitTick+0xdc>)
 80019c4:	601a      	str	r2, [r3, #0]
 80019c6:	4b20      	ldr	r3, [pc, #128]	; (8001a48 <HAL_InitTick+0xd8>)
 80019c8:	f240 32e7 	movw	r2, #999	; 0x3e7
 80019cc:	60da      	str	r2, [r3, #12]
 80019ce:	4a1e      	ldr	r2, [pc, #120]	; (8001a48 <HAL_InitTick+0xd8>)
 80019d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019d2:	6053      	str	r3, [r2, #4]
 80019d4:	4b1c      	ldr	r3, [pc, #112]	; (8001a48 <HAL_InitTick+0xd8>)
 80019d6:	2200      	movs	r2, #0
 80019d8:	611a      	str	r2, [r3, #16]
 80019da:	4b1b      	ldr	r3, [pc, #108]	; (8001a48 <HAL_InitTick+0xd8>)
 80019dc:	2200      	movs	r2, #0
 80019de:	609a      	str	r2, [r3, #8]
 80019e0:	4b19      	ldr	r3, [pc, #100]	; (8001a48 <HAL_InitTick+0xd8>)
 80019e2:	2200      	movs	r2, #0
 80019e4:	619a      	str	r2, [r3, #24]
 80019e6:	4818      	ldr	r0, [pc, #96]	; (8001a48 <HAL_InitTick+0xd8>)
 80019e8:	f001 f912 	bl	8002c10 <HAL_TIM_Base_Init>
 80019ec:	4603      	mov	r3, r0
 80019ee:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80019f2:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80019f6:	2b00      	cmp	r3, #0
 80019f8:	d11b      	bne.n	8001a32 <HAL_InitTick+0xc2>
 80019fa:	4813      	ldr	r0, [pc, #76]	; (8001a48 <HAL_InitTick+0xd8>)
 80019fc:	f001 f962 	bl	8002cc4 <HAL_TIM_Base_Start_IT>
 8001a00:	4603      	mov	r3, r0
 8001a02:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001a06:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001a0a:	2b00      	cmp	r3, #0
 8001a0c:	d111      	bne.n	8001a32 <HAL_InitTick+0xc2>
 8001a0e:	2018      	movs	r0, #24
 8001a10:	f000 f9dc 	bl	8001dcc <HAL_NVIC_EnableIRQ>
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	2b0f      	cmp	r3, #15
 8001a18:	d808      	bhi.n	8001a2c <HAL_InitTick+0xbc>
 8001a1a:	2200      	movs	r2, #0
 8001a1c:	6879      	ldr	r1, [r7, #4]
 8001a1e:	2018      	movs	r0, #24
 8001a20:	f000 f9b8 	bl	8001d94 <HAL_NVIC_SetPriority>
 8001a24:	4a0a      	ldr	r2, [pc, #40]	; (8001a50 <HAL_InitTick+0xe0>)
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	6013      	str	r3, [r2, #0]
 8001a2a:	e002      	b.n	8001a32 <HAL_InitTick+0xc2>
 8001a2c:	2301      	movs	r3, #1
 8001a2e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001a32:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001a36:	4618      	mov	r0, r3
 8001a38:	3730      	adds	r7, #48	; 0x30
 8001a3a:	46bd      	mov	sp, r7
 8001a3c:	bd80      	pop	{r7, pc}
 8001a3e:	bf00      	nop
 8001a40:	40023800 	.word	0x40023800
 8001a44:	431bde83 	.word	0x431bde83
 8001a48:	2000023c 	.word	0x2000023c
 8001a4c:	40014000 	.word	0x40014000
 8001a50:	20000018 	.word	0x20000018

08001a54 <NMI_Handler>:
 8001a54:	b480      	push	{r7}
 8001a56:	af00      	add	r7, sp, #0
 8001a58:	e7fe      	b.n	8001a58 <NMI_Handler+0x4>

08001a5a <HardFault_Handler>:
 8001a5a:	b480      	push	{r7}
 8001a5c:	af00      	add	r7, sp, #0
 8001a5e:	e7fe      	b.n	8001a5e <HardFault_Handler+0x4>

08001a60 <MemManage_Handler>:
 8001a60:	b480      	push	{r7}
 8001a62:	af00      	add	r7, sp, #0
 8001a64:	e7fe      	b.n	8001a64 <MemManage_Handler+0x4>

08001a66 <BusFault_Handler>:
 8001a66:	b480      	push	{r7}
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	e7fe      	b.n	8001a6a <BusFault_Handler+0x4>

08001a6c <UsageFault_Handler>:
 8001a6c:	b480      	push	{r7}
 8001a6e:	af00      	add	r7, sp, #0
 8001a70:	e7fe      	b.n	8001a70 <UsageFault_Handler+0x4>

08001a72 <DebugMon_Handler>:
 8001a72:	b480      	push	{r7}
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	bf00      	nop
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a7e:	4770      	bx	lr

08001a80 <TIM1_BRK_TIM9_IRQHandler>:
 8001a80:	b580      	push	{r7, lr}
 8001a82:	af00      	add	r7, sp, #0
 8001a84:	4802      	ldr	r0, [pc, #8]	; (8001a90 <TIM1_BRK_TIM9_IRQHandler+0x10>)
 8001a86:	f001 f97f 	bl	8002d88 <HAL_TIM_IRQHandler>
 8001a8a:	bf00      	nop
 8001a8c:	bd80      	pop	{r7, pc}
 8001a8e:	bf00      	nop
 8001a90:	2000023c 	.word	0x2000023c

08001a94 <USART2_IRQHandler>:
 8001a94:	b580      	push	{r7, lr}
 8001a96:	af00      	add	r7, sp, #0
 8001a98:	4802      	ldr	r0, [pc, #8]	; (8001aa4 <USART2_IRQHandler+0x10>)
 8001a9a:	f001 fc49 	bl	8003330 <HAL_UART_IRQHandler>
 8001a9e:	bf00      	nop
 8001aa0:	bd80      	pop	{r7, pc}
 8001aa2:	bf00      	nop
 8001aa4:	200001b4 	.word	0x200001b4

08001aa8 <USART6_IRQHandler>:
 8001aa8:	b580      	push	{r7, lr}
 8001aaa:	af00      	add	r7, sp, #0
 8001aac:	4802      	ldr	r0, [pc, #8]	; (8001ab8 <USART6_IRQHandler+0x10>)
 8001aae:	f001 fc3f 	bl	8003330 <HAL_UART_IRQHandler>
 8001ab2:	bf00      	nop
 8001ab4:	bd80      	pop	{r7, pc}
 8001ab6:	bf00      	nop
 8001ab8:	200001f8 	.word	0x200001f8

08001abc <_sbrk>:
 8001abc:	b580      	push	{r7, lr}
 8001abe:	b086      	sub	sp, #24
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	6078      	str	r0, [r7, #4]
 8001ac4:	4a14      	ldr	r2, [pc, #80]	; (8001b18 <_sbrk+0x5c>)
 8001ac6:	4b15      	ldr	r3, [pc, #84]	; (8001b1c <_sbrk+0x60>)
 8001ac8:	1ad3      	subs	r3, r2, r3
 8001aca:	617b      	str	r3, [r7, #20]
 8001acc:	697b      	ldr	r3, [r7, #20]
 8001ace:	613b      	str	r3, [r7, #16]
 8001ad0:	4b13      	ldr	r3, [pc, #76]	; (8001b20 <_sbrk+0x64>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	d102      	bne.n	8001ade <_sbrk+0x22>
 8001ad8:	4b11      	ldr	r3, [pc, #68]	; (8001b20 <_sbrk+0x64>)
 8001ada:	4a12      	ldr	r2, [pc, #72]	; (8001b24 <_sbrk+0x68>)
 8001adc:	601a      	str	r2, [r3, #0]
 8001ade:	4b10      	ldr	r3, [pc, #64]	; (8001b20 <_sbrk+0x64>)
 8001ae0:	681a      	ldr	r2, [r3, #0]
 8001ae2:	687b      	ldr	r3, [r7, #4]
 8001ae4:	4413      	add	r3, r2
 8001ae6:	693a      	ldr	r2, [r7, #16]
 8001ae8:	429a      	cmp	r2, r3
 8001aea:	d207      	bcs.n	8001afc <_sbrk+0x40>
 8001aec:	f005 f97a 	bl	8006de4 <__errno>
 8001af0:	4603      	mov	r3, r0
 8001af2:	220c      	movs	r2, #12
 8001af4:	601a      	str	r2, [r3, #0]
 8001af6:	f04f 33ff 	mov.w	r3, #4294967295
 8001afa:	e009      	b.n	8001b10 <_sbrk+0x54>
 8001afc:	4b08      	ldr	r3, [pc, #32]	; (8001b20 <_sbrk+0x64>)
 8001afe:	681b      	ldr	r3, [r3, #0]
 8001b00:	60fb      	str	r3, [r7, #12]
 8001b02:	4b07      	ldr	r3, [pc, #28]	; (8001b20 <_sbrk+0x64>)
 8001b04:	681a      	ldr	r2, [r3, #0]
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	4413      	add	r3, r2
 8001b0a:	4a05      	ldr	r2, [pc, #20]	; (8001b20 <_sbrk+0x64>)
 8001b0c:	6013      	str	r3, [r2, #0]
 8001b0e:	68fb      	ldr	r3, [r7, #12]
 8001b10:	4618      	mov	r0, r3
 8001b12:	3718      	adds	r7, #24
 8001b14:	46bd      	mov	sp, r7
 8001b16:	bd80      	pop	{r7, pc}
 8001b18:	20020000 	.word	0x20020000
 8001b1c:	00000400 	.word	0x00000400
 8001b20:	20000284 	.word	0x20000284
 8001b24:	20004c90 	.word	0x20004c90

08001b28 <SystemInit>:
 8001b28:	b480      	push	{r7}
 8001b2a:	af00      	add	r7, sp, #0
 8001b2c:	4b06      	ldr	r3, [pc, #24]	; (8001b48 <SystemInit+0x20>)
 8001b2e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001b32:	4a05      	ldr	r2, [pc, #20]	; (8001b48 <SystemInit+0x20>)
 8001b34:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001b38:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001b3c:	bf00      	nop
 8001b3e:	46bd      	mov	sp, r7
 8001b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b44:	4770      	bx	lr
 8001b46:	bf00      	nop
 8001b48:	e000ed00 	.word	0xe000ed00

08001b4c <Reset_Handler>:
 8001b4c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001b84 <LoopFillZerobss+0x12>
 8001b50:	480d      	ldr	r0, [pc, #52]	; (8001b88 <LoopFillZerobss+0x16>)
 8001b52:	490e      	ldr	r1, [pc, #56]	; (8001b8c <LoopFillZerobss+0x1a>)
 8001b54:	4a0e      	ldr	r2, [pc, #56]	; (8001b90 <LoopFillZerobss+0x1e>)
 8001b56:	2300      	movs	r3, #0
 8001b58:	e002      	b.n	8001b60 <LoopCopyDataInit>

08001b5a <CopyDataInit>:
 8001b5a:	58d4      	ldr	r4, [r2, r3]
 8001b5c:	50c4      	str	r4, [r0, r3]
 8001b5e:	3304      	adds	r3, #4

08001b60 <LoopCopyDataInit>:
 8001b60:	18c4      	adds	r4, r0, r3
 8001b62:	428c      	cmp	r4, r1
 8001b64:	d3f9      	bcc.n	8001b5a <CopyDataInit>
 8001b66:	4a0b      	ldr	r2, [pc, #44]	; (8001b94 <LoopFillZerobss+0x22>)
 8001b68:	4c0b      	ldr	r4, [pc, #44]	; (8001b98 <LoopFillZerobss+0x26>)
 8001b6a:	2300      	movs	r3, #0
 8001b6c:	e001      	b.n	8001b72 <LoopFillZerobss>

08001b6e <FillZerobss>:
 8001b6e:	6013      	str	r3, [r2, #0]
 8001b70:	3204      	adds	r2, #4

08001b72 <LoopFillZerobss>:
 8001b72:	42a2      	cmp	r2, r4
 8001b74:	d3fb      	bcc.n	8001b6e <FillZerobss>
 8001b76:	f7ff ffd7 	bl	8001b28 <SystemInit>
 8001b7a:	f005 f939 	bl	8006df0 <__libc_init_array>
 8001b7e:	f7ff fce9 	bl	8001554 <main>
 8001b82:	4770      	bx	lr
 8001b84:	20020000 	.word	0x20020000
 8001b88:	20000000 	.word	0x20000000
 8001b8c:	20000088 	.word	0x20000088
 8001b90:	08008434 	.word	0x08008434
 8001b94:	20000088 	.word	0x20000088
 8001b98:	20004c90 	.word	0x20004c90

08001b9c <ADC_IRQHandler>:
 8001b9c:	e7fe      	b.n	8001b9c <ADC_IRQHandler>
	...

08001ba0 <HAL_Init>:
 8001ba0:	b580      	push	{r7, lr}
 8001ba2:	af00      	add	r7, sp, #0
 8001ba4:	4b0e      	ldr	r3, [pc, #56]	; (8001be0 <HAL_Init+0x40>)
 8001ba6:	681b      	ldr	r3, [r3, #0]
 8001ba8:	4a0d      	ldr	r2, [pc, #52]	; (8001be0 <HAL_Init+0x40>)
 8001baa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001bae:	6013      	str	r3, [r2, #0]
 8001bb0:	4b0b      	ldr	r3, [pc, #44]	; (8001be0 <HAL_Init+0x40>)
 8001bb2:	681b      	ldr	r3, [r3, #0]
 8001bb4:	4a0a      	ldr	r2, [pc, #40]	; (8001be0 <HAL_Init+0x40>)
 8001bb6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001bba:	6013      	str	r3, [r2, #0]
 8001bbc:	4b08      	ldr	r3, [pc, #32]	; (8001be0 <HAL_Init+0x40>)
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	4a07      	ldr	r2, [pc, #28]	; (8001be0 <HAL_Init+0x40>)
 8001bc2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001bc6:	6013      	str	r3, [r2, #0]
 8001bc8:	2003      	movs	r0, #3
 8001bca:	f000 f8d8 	bl	8001d7e <HAL_NVIC_SetPriorityGrouping>
 8001bce:	200f      	movs	r0, #15
 8001bd0:	f7ff fece 	bl	8001970 <HAL_InitTick>
 8001bd4:	f7ff fe12 	bl	80017fc <HAL_MspInit>
 8001bd8:	2300      	movs	r3, #0
 8001bda:	4618      	mov	r0, r3
 8001bdc:	bd80      	pop	{r7, pc}
 8001bde:	bf00      	nop
 8001be0:	40023c00 	.word	0x40023c00

08001be4 <HAL_IncTick>:
 8001be4:	b480      	push	{r7}
 8001be6:	af00      	add	r7, sp, #0
 8001be8:	4b06      	ldr	r3, [pc, #24]	; (8001c04 <HAL_IncTick+0x20>)
 8001bea:	781b      	ldrb	r3, [r3, #0]
 8001bec:	461a      	mov	r2, r3
 8001bee:	4b06      	ldr	r3, [pc, #24]	; (8001c08 <HAL_IncTick+0x24>)
 8001bf0:	681b      	ldr	r3, [r3, #0]
 8001bf2:	4413      	add	r3, r2
 8001bf4:	4a04      	ldr	r2, [pc, #16]	; (8001c08 <HAL_IncTick+0x24>)
 8001bf6:	6013      	str	r3, [r2, #0]
 8001bf8:	bf00      	nop
 8001bfa:	46bd      	mov	sp, r7
 8001bfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c00:	4770      	bx	lr
 8001c02:	bf00      	nop
 8001c04:	2000001c 	.word	0x2000001c
 8001c08:	20000288 	.word	0x20000288

08001c0c <HAL_GetTick>:
 8001c0c:	b480      	push	{r7}
 8001c0e:	af00      	add	r7, sp, #0
 8001c10:	4b03      	ldr	r3, [pc, #12]	; (8001c20 <HAL_GetTick+0x14>)
 8001c12:	681b      	ldr	r3, [r3, #0]
 8001c14:	4618      	mov	r0, r3
 8001c16:	46bd      	mov	sp, r7
 8001c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c1c:	4770      	bx	lr
 8001c1e:	bf00      	nop
 8001c20:	20000288 	.word	0x20000288

08001c24 <__NVIC_SetPriorityGrouping>:
 8001c24:	b480      	push	{r7}
 8001c26:	b085      	sub	sp, #20
 8001c28:	af00      	add	r7, sp, #0
 8001c2a:	6078      	str	r0, [r7, #4]
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	f003 0307 	and.w	r3, r3, #7
 8001c32:	60fb      	str	r3, [r7, #12]
 8001c34:	4b0c      	ldr	r3, [pc, #48]	; (8001c68 <__NVIC_SetPriorityGrouping+0x44>)
 8001c36:	68db      	ldr	r3, [r3, #12]
 8001c38:	60bb      	str	r3, [r7, #8]
 8001c3a:	68ba      	ldr	r2, [r7, #8]
 8001c3c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001c40:	4013      	ands	r3, r2
 8001c42:	60bb      	str	r3, [r7, #8]
 8001c44:	68fb      	ldr	r3, [r7, #12]
 8001c46:	021a      	lsls	r2, r3, #8
 8001c48:	68bb      	ldr	r3, [r7, #8]
 8001c4a:	4313      	orrs	r3, r2
 8001c4c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001c50:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001c54:	60bb      	str	r3, [r7, #8]
 8001c56:	4a04      	ldr	r2, [pc, #16]	; (8001c68 <__NVIC_SetPriorityGrouping+0x44>)
 8001c58:	68bb      	ldr	r3, [r7, #8]
 8001c5a:	60d3      	str	r3, [r2, #12]
 8001c5c:	bf00      	nop
 8001c5e:	3714      	adds	r7, #20
 8001c60:	46bd      	mov	sp, r7
 8001c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c66:	4770      	bx	lr
 8001c68:	e000ed00 	.word	0xe000ed00

08001c6c <__NVIC_GetPriorityGrouping>:
 8001c6c:	b480      	push	{r7}
 8001c6e:	af00      	add	r7, sp, #0
 8001c70:	4b04      	ldr	r3, [pc, #16]	; (8001c84 <__NVIC_GetPriorityGrouping+0x18>)
 8001c72:	68db      	ldr	r3, [r3, #12]
 8001c74:	0a1b      	lsrs	r3, r3, #8
 8001c76:	f003 0307 	and.w	r3, r3, #7
 8001c7a:	4618      	mov	r0, r3
 8001c7c:	46bd      	mov	sp, r7
 8001c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c82:	4770      	bx	lr
 8001c84:	e000ed00 	.word	0xe000ed00

08001c88 <__NVIC_EnableIRQ>:
 8001c88:	b480      	push	{r7}
 8001c8a:	b083      	sub	sp, #12
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	4603      	mov	r3, r0
 8001c90:	71fb      	strb	r3, [r7, #7]
 8001c92:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c96:	2b00      	cmp	r3, #0
 8001c98:	db0b      	blt.n	8001cb2 <__NVIC_EnableIRQ+0x2a>
 8001c9a:	79fb      	ldrb	r3, [r7, #7]
 8001c9c:	f003 021f 	and.w	r2, r3, #31
 8001ca0:	4907      	ldr	r1, [pc, #28]	; (8001cc0 <__NVIC_EnableIRQ+0x38>)
 8001ca2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ca6:	095b      	lsrs	r3, r3, #5
 8001ca8:	2001      	movs	r0, #1
 8001caa:	fa00 f202 	lsl.w	r2, r0, r2
 8001cae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001cb2:	bf00      	nop
 8001cb4:	370c      	adds	r7, #12
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cbc:	4770      	bx	lr
 8001cbe:	bf00      	nop
 8001cc0:	e000e100 	.word	0xe000e100

08001cc4 <__NVIC_SetPriority>:
 8001cc4:	b480      	push	{r7}
 8001cc6:	b083      	sub	sp, #12
 8001cc8:	af00      	add	r7, sp, #0
 8001cca:	4603      	mov	r3, r0
 8001ccc:	6039      	str	r1, [r7, #0]
 8001cce:	71fb      	strb	r3, [r7, #7]
 8001cd0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cd4:	2b00      	cmp	r3, #0
 8001cd6:	db0a      	blt.n	8001cee <__NVIC_SetPriority+0x2a>
 8001cd8:	683b      	ldr	r3, [r7, #0]
 8001cda:	b2da      	uxtb	r2, r3
 8001cdc:	490c      	ldr	r1, [pc, #48]	; (8001d10 <__NVIC_SetPriority+0x4c>)
 8001cde:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ce2:	0112      	lsls	r2, r2, #4
 8001ce4:	b2d2      	uxtb	r2, r2
 8001ce6:	440b      	add	r3, r1
 8001ce8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001cec:	e00a      	b.n	8001d04 <__NVIC_SetPriority+0x40>
 8001cee:	683b      	ldr	r3, [r7, #0]
 8001cf0:	b2da      	uxtb	r2, r3
 8001cf2:	4908      	ldr	r1, [pc, #32]	; (8001d14 <__NVIC_SetPriority+0x50>)
 8001cf4:	79fb      	ldrb	r3, [r7, #7]
 8001cf6:	f003 030f 	and.w	r3, r3, #15
 8001cfa:	3b04      	subs	r3, #4
 8001cfc:	0112      	lsls	r2, r2, #4
 8001cfe:	b2d2      	uxtb	r2, r2
 8001d00:	440b      	add	r3, r1
 8001d02:	761a      	strb	r2, [r3, #24]
 8001d04:	bf00      	nop
 8001d06:	370c      	adds	r7, #12
 8001d08:	46bd      	mov	sp, r7
 8001d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d0e:	4770      	bx	lr
 8001d10:	e000e100 	.word	0xe000e100
 8001d14:	e000ed00 	.word	0xe000ed00

08001d18 <NVIC_EncodePriority>:
 8001d18:	b480      	push	{r7}
 8001d1a:	b089      	sub	sp, #36	; 0x24
 8001d1c:	af00      	add	r7, sp, #0
 8001d1e:	60f8      	str	r0, [r7, #12]
 8001d20:	60b9      	str	r1, [r7, #8]
 8001d22:	607a      	str	r2, [r7, #4]
 8001d24:	68fb      	ldr	r3, [r7, #12]
 8001d26:	f003 0307 	and.w	r3, r3, #7
 8001d2a:	61fb      	str	r3, [r7, #28]
 8001d2c:	69fb      	ldr	r3, [r7, #28]
 8001d2e:	f1c3 0307 	rsb	r3, r3, #7
 8001d32:	2b04      	cmp	r3, #4
 8001d34:	bf28      	it	cs
 8001d36:	2304      	movcs	r3, #4
 8001d38:	61bb      	str	r3, [r7, #24]
 8001d3a:	69fb      	ldr	r3, [r7, #28]
 8001d3c:	3304      	adds	r3, #4
 8001d3e:	2b06      	cmp	r3, #6
 8001d40:	d902      	bls.n	8001d48 <NVIC_EncodePriority+0x30>
 8001d42:	69fb      	ldr	r3, [r7, #28]
 8001d44:	3b03      	subs	r3, #3
 8001d46:	e000      	b.n	8001d4a <NVIC_EncodePriority+0x32>
 8001d48:	2300      	movs	r3, #0
 8001d4a:	617b      	str	r3, [r7, #20]
 8001d4c:	f04f 32ff 	mov.w	r2, #4294967295
 8001d50:	69bb      	ldr	r3, [r7, #24]
 8001d52:	fa02 f303 	lsl.w	r3, r2, r3
 8001d56:	43da      	mvns	r2, r3
 8001d58:	68bb      	ldr	r3, [r7, #8]
 8001d5a:	401a      	ands	r2, r3
 8001d5c:	697b      	ldr	r3, [r7, #20]
 8001d5e:	409a      	lsls	r2, r3
 8001d60:	f04f 31ff 	mov.w	r1, #4294967295
 8001d64:	697b      	ldr	r3, [r7, #20]
 8001d66:	fa01 f303 	lsl.w	r3, r1, r3
 8001d6a:	43d9      	mvns	r1, r3
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	400b      	ands	r3, r1
 8001d70:	4313      	orrs	r3, r2
 8001d72:	4618      	mov	r0, r3
 8001d74:	3724      	adds	r7, #36	; 0x24
 8001d76:	46bd      	mov	sp, r7
 8001d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d7c:	4770      	bx	lr

08001d7e <HAL_NVIC_SetPriorityGrouping>:
 8001d7e:	b580      	push	{r7, lr}
 8001d80:	b082      	sub	sp, #8
 8001d82:	af00      	add	r7, sp, #0
 8001d84:	6078      	str	r0, [r7, #4]
 8001d86:	6878      	ldr	r0, [r7, #4]
 8001d88:	f7ff ff4c 	bl	8001c24 <__NVIC_SetPriorityGrouping>
 8001d8c:	bf00      	nop
 8001d8e:	3708      	adds	r7, #8
 8001d90:	46bd      	mov	sp, r7
 8001d92:	bd80      	pop	{r7, pc}

08001d94 <HAL_NVIC_SetPriority>:
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b086      	sub	sp, #24
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	4603      	mov	r3, r0
 8001d9c:	60b9      	str	r1, [r7, #8]
 8001d9e:	607a      	str	r2, [r7, #4]
 8001da0:	73fb      	strb	r3, [r7, #15]
 8001da2:	2300      	movs	r3, #0
 8001da4:	617b      	str	r3, [r7, #20]
 8001da6:	f7ff ff61 	bl	8001c6c <__NVIC_GetPriorityGrouping>
 8001daa:	6178      	str	r0, [r7, #20]
 8001dac:	687a      	ldr	r2, [r7, #4]
 8001dae:	68b9      	ldr	r1, [r7, #8]
 8001db0:	6978      	ldr	r0, [r7, #20]
 8001db2:	f7ff ffb1 	bl	8001d18 <NVIC_EncodePriority>
 8001db6:	4602      	mov	r2, r0
 8001db8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001dbc:	4611      	mov	r1, r2
 8001dbe:	4618      	mov	r0, r3
 8001dc0:	f7ff ff80 	bl	8001cc4 <__NVIC_SetPriority>
 8001dc4:	bf00      	nop
 8001dc6:	3718      	adds	r7, #24
 8001dc8:	46bd      	mov	sp, r7
 8001dca:	bd80      	pop	{r7, pc}

08001dcc <HAL_NVIC_EnableIRQ>:
 8001dcc:	b580      	push	{r7, lr}
 8001dce:	b082      	sub	sp, #8
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	4603      	mov	r3, r0
 8001dd4:	71fb      	strb	r3, [r7, #7]
 8001dd6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dda:	4618      	mov	r0, r3
 8001ddc:	f7ff ff54 	bl	8001c88 <__NVIC_EnableIRQ>
 8001de0:	bf00      	nop
 8001de2:	3708      	adds	r7, #8
 8001de4:	46bd      	mov	sp, r7
 8001de6:	bd80      	pop	{r7, pc}

08001de8 <HAL_DMA_Abort>:
 8001de8:	b580      	push	{r7, lr}
 8001dea:	b084      	sub	sp, #16
 8001dec:	af00      	add	r7, sp, #0
 8001dee:	6078      	str	r0, [r7, #4]
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001df4:	60fb      	str	r3, [r7, #12]
 8001df6:	f7ff ff09 	bl	8001c0c <HAL_GetTick>
 8001dfa:	60b8      	str	r0, [r7, #8]
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001e02:	b2db      	uxtb	r3, r3
 8001e04:	2b02      	cmp	r3, #2
 8001e06:	d008      	beq.n	8001e1a <HAL_DMA_Abort+0x32>
 8001e08:	687b      	ldr	r3, [r7, #4]
 8001e0a:	2280      	movs	r2, #128	; 0x80
 8001e0c:	655a      	str	r2, [r3, #84]	; 0x54
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	2200      	movs	r2, #0
 8001e12:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001e16:	2301      	movs	r3, #1
 8001e18:	e052      	b.n	8001ec0 <HAL_DMA_Abort+0xd8>
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	681b      	ldr	r3, [r3, #0]
 8001e1e:	681a      	ldr	r2, [r3, #0]
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	f022 0216 	bic.w	r2, r2, #22
 8001e28:	601a      	str	r2, [r3, #0]
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	695a      	ldr	r2, [r3, #20]
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001e38:	615a      	str	r2, [r3, #20]
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e3e:	2b00      	cmp	r3, #0
 8001e40:	d103      	bne.n	8001e4a <HAL_DMA_Abort+0x62>
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001e46:	2b00      	cmp	r3, #0
 8001e48:	d007      	beq.n	8001e5a <HAL_DMA_Abort+0x72>
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	681a      	ldr	r2, [r3, #0]
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	681b      	ldr	r3, [r3, #0]
 8001e54:	f022 0208 	bic.w	r2, r2, #8
 8001e58:	601a      	str	r2, [r3, #0]
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	681a      	ldr	r2, [r3, #0]
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	f022 0201 	bic.w	r2, r2, #1
 8001e68:	601a      	str	r2, [r3, #0]
 8001e6a:	e013      	b.n	8001e94 <HAL_DMA_Abort+0xac>
 8001e6c:	f7ff fece 	bl	8001c0c <HAL_GetTick>
 8001e70:	4602      	mov	r2, r0
 8001e72:	68bb      	ldr	r3, [r7, #8]
 8001e74:	1ad3      	subs	r3, r2, r3
 8001e76:	2b05      	cmp	r3, #5
 8001e78:	d90c      	bls.n	8001e94 <HAL_DMA_Abort+0xac>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	2220      	movs	r2, #32
 8001e7e:	655a      	str	r2, [r3, #84]	; 0x54
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	2203      	movs	r2, #3
 8001e84:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	2200      	movs	r2, #0
 8001e8c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001e90:	2303      	movs	r3, #3
 8001e92:	e015      	b.n	8001ec0 <HAL_DMA_Abort+0xd8>
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	f003 0301 	and.w	r3, r3, #1
 8001e9e:	2b00      	cmp	r3, #0
 8001ea0:	d1e4      	bne.n	8001e6c <HAL_DMA_Abort+0x84>
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001ea6:	223f      	movs	r2, #63	; 0x3f
 8001ea8:	409a      	lsls	r2, r3
 8001eaa:	68fb      	ldr	r3, [r7, #12]
 8001eac:	609a      	str	r2, [r3, #8]
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	2201      	movs	r2, #1
 8001eb2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	2200      	movs	r2, #0
 8001eba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	4618      	mov	r0, r3
 8001ec2:	3710      	adds	r7, #16
 8001ec4:	46bd      	mov	sp, r7
 8001ec6:	bd80      	pop	{r7, pc}

08001ec8 <HAL_DMA_Abort_IT>:
 8001ec8:	b480      	push	{r7}
 8001eca:	b083      	sub	sp, #12
 8001ecc:	af00      	add	r7, sp, #0
 8001ece:	6078      	str	r0, [r7, #4]
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8001ed6:	b2db      	uxtb	r3, r3
 8001ed8:	2b02      	cmp	r3, #2
 8001eda:	d004      	beq.n	8001ee6 <HAL_DMA_Abort_IT+0x1e>
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	2280      	movs	r2, #128	; 0x80
 8001ee0:	655a      	str	r2, [r3, #84]	; 0x54
 8001ee2:	2301      	movs	r3, #1
 8001ee4:	e00c      	b.n	8001f00 <HAL_DMA_Abort_IT+0x38>
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	2205      	movs	r2, #5
 8001eea:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001eee:	687b      	ldr	r3, [r7, #4]
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	681a      	ldr	r2, [r3, #0]
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	681b      	ldr	r3, [r3, #0]
 8001ef8:	f022 0201 	bic.w	r2, r2, #1
 8001efc:	601a      	str	r2, [r3, #0]
 8001efe:	2300      	movs	r3, #0
 8001f00:	4618      	mov	r0, r3
 8001f02:	370c      	adds	r7, #12
 8001f04:	46bd      	mov	sp, r7
 8001f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f0a:	4770      	bx	lr

08001f0c <HAL_GPIO_Init>:
 8001f0c:	b480      	push	{r7}
 8001f0e:	b089      	sub	sp, #36	; 0x24
 8001f10:	af00      	add	r7, sp, #0
 8001f12:	6078      	str	r0, [r7, #4]
 8001f14:	6039      	str	r1, [r7, #0]
 8001f16:	2300      	movs	r3, #0
 8001f18:	617b      	str	r3, [r7, #20]
 8001f1a:	2300      	movs	r3, #0
 8001f1c:	613b      	str	r3, [r7, #16]
 8001f1e:	2300      	movs	r3, #0
 8001f20:	61bb      	str	r3, [r7, #24]
 8001f22:	2300      	movs	r3, #0
 8001f24:	61fb      	str	r3, [r7, #28]
 8001f26:	e159      	b.n	80021dc <HAL_GPIO_Init+0x2d0>
 8001f28:	2201      	movs	r2, #1
 8001f2a:	69fb      	ldr	r3, [r7, #28]
 8001f2c:	fa02 f303 	lsl.w	r3, r2, r3
 8001f30:	617b      	str	r3, [r7, #20]
 8001f32:	683b      	ldr	r3, [r7, #0]
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	697a      	ldr	r2, [r7, #20]
 8001f38:	4013      	ands	r3, r2
 8001f3a:	613b      	str	r3, [r7, #16]
 8001f3c:	693a      	ldr	r2, [r7, #16]
 8001f3e:	697b      	ldr	r3, [r7, #20]
 8001f40:	429a      	cmp	r2, r3
 8001f42:	f040 8148 	bne.w	80021d6 <HAL_GPIO_Init+0x2ca>
 8001f46:	683b      	ldr	r3, [r7, #0]
 8001f48:	685b      	ldr	r3, [r3, #4]
 8001f4a:	f003 0303 	and.w	r3, r3, #3
 8001f4e:	2b01      	cmp	r3, #1
 8001f50:	d005      	beq.n	8001f5e <HAL_GPIO_Init+0x52>
 8001f52:	683b      	ldr	r3, [r7, #0]
 8001f54:	685b      	ldr	r3, [r3, #4]
 8001f56:	f003 0303 	and.w	r3, r3, #3
 8001f5a:	2b02      	cmp	r3, #2
 8001f5c:	d130      	bne.n	8001fc0 <HAL_GPIO_Init+0xb4>
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	689b      	ldr	r3, [r3, #8]
 8001f62:	61bb      	str	r3, [r7, #24]
 8001f64:	69fb      	ldr	r3, [r7, #28]
 8001f66:	005b      	lsls	r3, r3, #1
 8001f68:	2203      	movs	r2, #3
 8001f6a:	fa02 f303 	lsl.w	r3, r2, r3
 8001f6e:	43db      	mvns	r3, r3
 8001f70:	69ba      	ldr	r2, [r7, #24]
 8001f72:	4013      	ands	r3, r2
 8001f74:	61bb      	str	r3, [r7, #24]
 8001f76:	683b      	ldr	r3, [r7, #0]
 8001f78:	68da      	ldr	r2, [r3, #12]
 8001f7a:	69fb      	ldr	r3, [r7, #28]
 8001f7c:	005b      	lsls	r3, r3, #1
 8001f7e:	fa02 f303 	lsl.w	r3, r2, r3
 8001f82:	69ba      	ldr	r2, [r7, #24]
 8001f84:	4313      	orrs	r3, r2
 8001f86:	61bb      	str	r3, [r7, #24]
 8001f88:	687b      	ldr	r3, [r7, #4]
 8001f8a:	69ba      	ldr	r2, [r7, #24]
 8001f8c:	609a      	str	r2, [r3, #8]
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	685b      	ldr	r3, [r3, #4]
 8001f92:	61bb      	str	r3, [r7, #24]
 8001f94:	2201      	movs	r2, #1
 8001f96:	69fb      	ldr	r3, [r7, #28]
 8001f98:	fa02 f303 	lsl.w	r3, r2, r3
 8001f9c:	43db      	mvns	r3, r3
 8001f9e:	69ba      	ldr	r2, [r7, #24]
 8001fa0:	4013      	ands	r3, r2
 8001fa2:	61bb      	str	r3, [r7, #24]
 8001fa4:	683b      	ldr	r3, [r7, #0]
 8001fa6:	685b      	ldr	r3, [r3, #4]
 8001fa8:	091b      	lsrs	r3, r3, #4
 8001faa:	f003 0201 	and.w	r2, r3, #1
 8001fae:	69fb      	ldr	r3, [r7, #28]
 8001fb0:	fa02 f303 	lsl.w	r3, r2, r3
 8001fb4:	69ba      	ldr	r2, [r7, #24]
 8001fb6:	4313      	orrs	r3, r2
 8001fb8:	61bb      	str	r3, [r7, #24]
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	69ba      	ldr	r2, [r7, #24]
 8001fbe:	605a      	str	r2, [r3, #4]
 8001fc0:	683b      	ldr	r3, [r7, #0]
 8001fc2:	685b      	ldr	r3, [r3, #4]
 8001fc4:	f003 0303 	and.w	r3, r3, #3
 8001fc8:	2b03      	cmp	r3, #3
 8001fca:	d017      	beq.n	8001ffc <HAL_GPIO_Init+0xf0>
 8001fcc:	687b      	ldr	r3, [r7, #4]
 8001fce:	68db      	ldr	r3, [r3, #12]
 8001fd0:	61bb      	str	r3, [r7, #24]
 8001fd2:	69fb      	ldr	r3, [r7, #28]
 8001fd4:	005b      	lsls	r3, r3, #1
 8001fd6:	2203      	movs	r2, #3
 8001fd8:	fa02 f303 	lsl.w	r3, r2, r3
 8001fdc:	43db      	mvns	r3, r3
 8001fde:	69ba      	ldr	r2, [r7, #24]
 8001fe0:	4013      	ands	r3, r2
 8001fe2:	61bb      	str	r3, [r7, #24]
 8001fe4:	683b      	ldr	r3, [r7, #0]
 8001fe6:	689a      	ldr	r2, [r3, #8]
 8001fe8:	69fb      	ldr	r3, [r7, #28]
 8001fea:	005b      	lsls	r3, r3, #1
 8001fec:	fa02 f303 	lsl.w	r3, r2, r3
 8001ff0:	69ba      	ldr	r2, [r7, #24]
 8001ff2:	4313      	orrs	r3, r2
 8001ff4:	61bb      	str	r3, [r7, #24]
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	69ba      	ldr	r2, [r7, #24]
 8001ffa:	60da      	str	r2, [r3, #12]
 8001ffc:	683b      	ldr	r3, [r7, #0]
 8001ffe:	685b      	ldr	r3, [r3, #4]
 8002000:	f003 0303 	and.w	r3, r3, #3
 8002004:	2b02      	cmp	r3, #2
 8002006:	d123      	bne.n	8002050 <HAL_GPIO_Init+0x144>
 8002008:	69fb      	ldr	r3, [r7, #28]
 800200a:	08da      	lsrs	r2, r3, #3
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	3208      	adds	r2, #8
 8002010:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002014:	61bb      	str	r3, [r7, #24]
 8002016:	69fb      	ldr	r3, [r7, #28]
 8002018:	f003 0307 	and.w	r3, r3, #7
 800201c:	009b      	lsls	r3, r3, #2
 800201e:	220f      	movs	r2, #15
 8002020:	fa02 f303 	lsl.w	r3, r2, r3
 8002024:	43db      	mvns	r3, r3
 8002026:	69ba      	ldr	r2, [r7, #24]
 8002028:	4013      	ands	r3, r2
 800202a:	61bb      	str	r3, [r7, #24]
 800202c:	683b      	ldr	r3, [r7, #0]
 800202e:	691a      	ldr	r2, [r3, #16]
 8002030:	69fb      	ldr	r3, [r7, #28]
 8002032:	f003 0307 	and.w	r3, r3, #7
 8002036:	009b      	lsls	r3, r3, #2
 8002038:	fa02 f303 	lsl.w	r3, r2, r3
 800203c:	69ba      	ldr	r2, [r7, #24]
 800203e:	4313      	orrs	r3, r2
 8002040:	61bb      	str	r3, [r7, #24]
 8002042:	69fb      	ldr	r3, [r7, #28]
 8002044:	08da      	lsrs	r2, r3, #3
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	3208      	adds	r2, #8
 800204a:	69b9      	ldr	r1, [r7, #24]
 800204c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	61bb      	str	r3, [r7, #24]
 8002056:	69fb      	ldr	r3, [r7, #28]
 8002058:	005b      	lsls	r3, r3, #1
 800205a:	2203      	movs	r2, #3
 800205c:	fa02 f303 	lsl.w	r3, r2, r3
 8002060:	43db      	mvns	r3, r3
 8002062:	69ba      	ldr	r2, [r7, #24]
 8002064:	4013      	ands	r3, r2
 8002066:	61bb      	str	r3, [r7, #24]
 8002068:	683b      	ldr	r3, [r7, #0]
 800206a:	685b      	ldr	r3, [r3, #4]
 800206c:	f003 0203 	and.w	r2, r3, #3
 8002070:	69fb      	ldr	r3, [r7, #28]
 8002072:	005b      	lsls	r3, r3, #1
 8002074:	fa02 f303 	lsl.w	r3, r2, r3
 8002078:	69ba      	ldr	r2, [r7, #24]
 800207a:	4313      	orrs	r3, r2
 800207c:	61bb      	str	r3, [r7, #24]
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	69ba      	ldr	r2, [r7, #24]
 8002082:	601a      	str	r2, [r3, #0]
 8002084:	683b      	ldr	r3, [r7, #0]
 8002086:	685b      	ldr	r3, [r3, #4]
 8002088:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800208c:	2b00      	cmp	r3, #0
 800208e:	f000 80a2 	beq.w	80021d6 <HAL_GPIO_Init+0x2ca>
 8002092:	2300      	movs	r3, #0
 8002094:	60fb      	str	r3, [r7, #12]
 8002096:	4b57      	ldr	r3, [pc, #348]	; (80021f4 <HAL_GPIO_Init+0x2e8>)
 8002098:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800209a:	4a56      	ldr	r2, [pc, #344]	; (80021f4 <HAL_GPIO_Init+0x2e8>)
 800209c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80020a0:	6453      	str	r3, [r2, #68]	; 0x44
 80020a2:	4b54      	ldr	r3, [pc, #336]	; (80021f4 <HAL_GPIO_Init+0x2e8>)
 80020a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020a6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80020aa:	60fb      	str	r3, [r7, #12]
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	4a52      	ldr	r2, [pc, #328]	; (80021f8 <HAL_GPIO_Init+0x2ec>)
 80020b0:	69fb      	ldr	r3, [r7, #28]
 80020b2:	089b      	lsrs	r3, r3, #2
 80020b4:	3302      	adds	r3, #2
 80020b6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80020ba:	61bb      	str	r3, [r7, #24]
 80020bc:	69fb      	ldr	r3, [r7, #28]
 80020be:	f003 0303 	and.w	r3, r3, #3
 80020c2:	009b      	lsls	r3, r3, #2
 80020c4:	220f      	movs	r2, #15
 80020c6:	fa02 f303 	lsl.w	r3, r2, r3
 80020ca:	43db      	mvns	r3, r3
 80020cc:	69ba      	ldr	r2, [r7, #24]
 80020ce:	4013      	ands	r3, r2
 80020d0:	61bb      	str	r3, [r7, #24]
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	4a49      	ldr	r2, [pc, #292]	; (80021fc <HAL_GPIO_Init+0x2f0>)
 80020d6:	4293      	cmp	r3, r2
 80020d8:	d019      	beq.n	800210e <HAL_GPIO_Init+0x202>
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	4a48      	ldr	r2, [pc, #288]	; (8002200 <HAL_GPIO_Init+0x2f4>)
 80020de:	4293      	cmp	r3, r2
 80020e0:	d013      	beq.n	800210a <HAL_GPIO_Init+0x1fe>
 80020e2:	687b      	ldr	r3, [r7, #4]
 80020e4:	4a47      	ldr	r2, [pc, #284]	; (8002204 <HAL_GPIO_Init+0x2f8>)
 80020e6:	4293      	cmp	r3, r2
 80020e8:	d00d      	beq.n	8002106 <HAL_GPIO_Init+0x1fa>
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	4a46      	ldr	r2, [pc, #280]	; (8002208 <HAL_GPIO_Init+0x2fc>)
 80020ee:	4293      	cmp	r3, r2
 80020f0:	d007      	beq.n	8002102 <HAL_GPIO_Init+0x1f6>
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	4a45      	ldr	r2, [pc, #276]	; (800220c <HAL_GPIO_Init+0x300>)
 80020f6:	4293      	cmp	r3, r2
 80020f8:	d101      	bne.n	80020fe <HAL_GPIO_Init+0x1f2>
 80020fa:	2304      	movs	r3, #4
 80020fc:	e008      	b.n	8002110 <HAL_GPIO_Init+0x204>
 80020fe:	2307      	movs	r3, #7
 8002100:	e006      	b.n	8002110 <HAL_GPIO_Init+0x204>
 8002102:	2303      	movs	r3, #3
 8002104:	e004      	b.n	8002110 <HAL_GPIO_Init+0x204>
 8002106:	2302      	movs	r3, #2
 8002108:	e002      	b.n	8002110 <HAL_GPIO_Init+0x204>
 800210a:	2301      	movs	r3, #1
 800210c:	e000      	b.n	8002110 <HAL_GPIO_Init+0x204>
 800210e:	2300      	movs	r3, #0
 8002110:	69fa      	ldr	r2, [r7, #28]
 8002112:	f002 0203 	and.w	r2, r2, #3
 8002116:	0092      	lsls	r2, r2, #2
 8002118:	4093      	lsls	r3, r2
 800211a:	69ba      	ldr	r2, [r7, #24]
 800211c:	4313      	orrs	r3, r2
 800211e:	61bb      	str	r3, [r7, #24]
 8002120:	4935      	ldr	r1, [pc, #212]	; (80021f8 <HAL_GPIO_Init+0x2ec>)
 8002122:	69fb      	ldr	r3, [r7, #28]
 8002124:	089b      	lsrs	r3, r3, #2
 8002126:	3302      	adds	r3, #2
 8002128:	69ba      	ldr	r2, [r7, #24]
 800212a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800212e:	4b38      	ldr	r3, [pc, #224]	; (8002210 <HAL_GPIO_Init+0x304>)
 8002130:	689b      	ldr	r3, [r3, #8]
 8002132:	61bb      	str	r3, [r7, #24]
 8002134:	693b      	ldr	r3, [r7, #16]
 8002136:	43db      	mvns	r3, r3
 8002138:	69ba      	ldr	r2, [r7, #24]
 800213a:	4013      	ands	r3, r2
 800213c:	61bb      	str	r3, [r7, #24]
 800213e:	683b      	ldr	r3, [r7, #0]
 8002140:	685b      	ldr	r3, [r3, #4]
 8002142:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002146:	2b00      	cmp	r3, #0
 8002148:	d003      	beq.n	8002152 <HAL_GPIO_Init+0x246>
 800214a:	69ba      	ldr	r2, [r7, #24]
 800214c:	693b      	ldr	r3, [r7, #16]
 800214e:	4313      	orrs	r3, r2
 8002150:	61bb      	str	r3, [r7, #24]
 8002152:	4a2f      	ldr	r2, [pc, #188]	; (8002210 <HAL_GPIO_Init+0x304>)
 8002154:	69bb      	ldr	r3, [r7, #24]
 8002156:	6093      	str	r3, [r2, #8]
 8002158:	4b2d      	ldr	r3, [pc, #180]	; (8002210 <HAL_GPIO_Init+0x304>)
 800215a:	68db      	ldr	r3, [r3, #12]
 800215c:	61bb      	str	r3, [r7, #24]
 800215e:	693b      	ldr	r3, [r7, #16]
 8002160:	43db      	mvns	r3, r3
 8002162:	69ba      	ldr	r2, [r7, #24]
 8002164:	4013      	ands	r3, r2
 8002166:	61bb      	str	r3, [r7, #24]
 8002168:	683b      	ldr	r3, [r7, #0]
 800216a:	685b      	ldr	r3, [r3, #4]
 800216c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002170:	2b00      	cmp	r3, #0
 8002172:	d003      	beq.n	800217c <HAL_GPIO_Init+0x270>
 8002174:	69ba      	ldr	r2, [r7, #24]
 8002176:	693b      	ldr	r3, [r7, #16]
 8002178:	4313      	orrs	r3, r2
 800217a:	61bb      	str	r3, [r7, #24]
 800217c:	4a24      	ldr	r2, [pc, #144]	; (8002210 <HAL_GPIO_Init+0x304>)
 800217e:	69bb      	ldr	r3, [r7, #24]
 8002180:	60d3      	str	r3, [r2, #12]
 8002182:	4b23      	ldr	r3, [pc, #140]	; (8002210 <HAL_GPIO_Init+0x304>)
 8002184:	685b      	ldr	r3, [r3, #4]
 8002186:	61bb      	str	r3, [r7, #24]
 8002188:	693b      	ldr	r3, [r7, #16]
 800218a:	43db      	mvns	r3, r3
 800218c:	69ba      	ldr	r2, [r7, #24]
 800218e:	4013      	ands	r3, r2
 8002190:	61bb      	str	r3, [r7, #24]
 8002192:	683b      	ldr	r3, [r7, #0]
 8002194:	685b      	ldr	r3, [r3, #4]
 8002196:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800219a:	2b00      	cmp	r3, #0
 800219c:	d003      	beq.n	80021a6 <HAL_GPIO_Init+0x29a>
 800219e:	69ba      	ldr	r2, [r7, #24]
 80021a0:	693b      	ldr	r3, [r7, #16]
 80021a2:	4313      	orrs	r3, r2
 80021a4:	61bb      	str	r3, [r7, #24]
 80021a6:	4a1a      	ldr	r2, [pc, #104]	; (8002210 <HAL_GPIO_Init+0x304>)
 80021a8:	69bb      	ldr	r3, [r7, #24]
 80021aa:	6053      	str	r3, [r2, #4]
 80021ac:	4b18      	ldr	r3, [pc, #96]	; (8002210 <HAL_GPIO_Init+0x304>)
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	61bb      	str	r3, [r7, #24]
 80021b2:	693b      	ldr	r3, [r7, #16]
 80021b4:	43db      	mvns	r3, r3
 80021b6:	69ba      	ldr	r2, [r7, #24]
 80021b8:	4013      	ands	r3, r2
 80021ba:	61bb      	str	r3, [r7, #24]
 80021bc:	683b      	ldr	r3, [r7, #0]
 80021be:	685b      	ldr	r3, [r3, #4]
 80021c0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d003      	beq.n	80021d0 <HAL_GPIO_Init+0x2c4>
 80021c8:	69ba      	ldr	r2, [r7, #24]
 80021ca:	693b      	ldr	r3, [r7, #16]
 80021cc:	4313      	orrs	r3, r2
 80021ce:	61bb      	str	r3, [r7, #24]
 80021d0:	4a0f      	ldr	r2, [pc, #60]	; (8002210 <HAL_GPIO_Init+0x304>)
 80021d2:	69bb      	ldr	r3, [r7, #24]
 80021d4:	6013      	str	r3, [r2, #0]
 80021d6:	69fb      	ldr	r3, [r7, #28]
 80021d8:	3301      	adds	r3, #1
 80021da:	61fb      	str	r3, [r7, #28]
 80021dc:	69fb      	ldr	r3, [r7, #28]
 80021de:	2b0f      	cmp	r3, #15
 80021e0:	f67f aea2 	bls.w	8001f28 <HAL_GPIO_Init+0x1c>
 80021e4:	bf00      	nop
 80021e6:	bf00      	nop
 80021e8:	3724      	adds	r7, #36	; 0x24
 80021ea:	46bd      	mov	sp, r7
 80021ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021f0:	4770      	bx	lr
 80021f2:	bf00      	nop
 80021f4:	40023800 	.word	0x40023800
 80021f8:	40013800 	.word	0x40013800
 80021fc:	40020000 	.word	0x40020000
 8002200:	40020400 	.word	0x40020400
 8002204:	40020800 	.word	0x40020800
 8002208:	40020c00 	.word	0x40020c00
 800220c:	40021000 	.word	0x40021000
 8002210:	40013c00 	.word	0x40013c00

08002214 <HAL_GPIO_WritePin>:
 8002214:	b480      	push	{r7}
 8002216:	b083      	sub	sp, #12
 8002218:	af00      	add	r7, sp, #0
 800221a:	6078      	str	r0, [r7, #4]
 800221c:	460b      	mov	r3, r1
 800221e:	807b      	strh	r3, [r7, #2]
 8002220:	4613      	mov	r3, r2
 8002222:	707b      	strb	r3, [r7, #1]
 8002224:	787b      	ldrb	r3, [r7, #1]
 8002226:	2b00      	cmp	r3, #0
 8002228:	d003      	beq.n	8002232 <HAL_GPIO_WritePin+0x1e>
 800222a:	887a      	ldrh	r2, [r7, #2]
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	619a      	str	r2, [r3, #24]
 8002230:	e003      	b.n	800223a <HAL_GPIO_WritePin+0x26>
 8002232:	887b      	ldrh	r3, [r7, #2]
 8002234:	041a      	lsls	r2, r3, #16
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	619a      	str	r2, [r3, #24]
 800223a:	bf00      	nop
 800223c:	370c      	adds	r7, #12
 800223e:	46bd      	mov	sp, r7
 8002240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002244:	4770      	bx	lr

08002246 <HAL_GPIO_TogglePin>:
 8002246:	b480      	push	{r7}
 8002248:	b085      	sub	sp, #20
 800224a:	af00      	add	r7, sp, #0
 800224c:	6078      	str	r0, [r7, #4]
 800224e:	460b      	mov	r3, r1
 8002250:	807b      	strh	r3, [r7, #2]
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	695b      	ldr	r3, [r3, #20]
 8002256:	60fb      	str	r3, [r7, #12]
 8002258:	887a      	ldrh	r2, [r7, #2]
 800225a:	68fb      	ldr	r3, [r7, #12]
 800225c:	4013      	ands	r3, r2
 800225e:	041a      	lsls	r2, r3, #16
 8002260:	68fb      	ldr	r3, [r7, #12]
 8002262:	43d9      	mvns	r1, r3
 8002264:	887b      	ldrh	r3, [r7, #2]
 8002266:	400b      	ands	r3, r1
 8002268:	431a      	orrs	r2, r3
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	619a      	str	r2, [r3, #24]
 800226e:	bf00      	nop
 8002270:	3714      	adds	r7, #20
 8002272:	46bd      	mov	sp, r7
 8002274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002278:	4770      	bx	lr
	...

0800227c <HAL_RCC_OscConfig>:
 800227c:	b580      	push	{r7, lr}
 800227e:	b086      	sub	sp, #24
 8002280:	af00      	add	r7, sp, #0
 8002282:	6078      	str	r0, [r7, #4]
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	2b00      	cmp	r3, #0
 8002288:	d101      	bne.n	800228e <HAL_RCC_OscConfig+0x12>
 800228a:	2301      	movs	r3, #1
 800228c:	e267      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	f003 0301 	and.w	r3, r3, #1
 8002296:	2b00      	cmp	r3, #0
 8002298:	d075      	beq.n	8002386 <HAL_RCC_OscConfig+0x10a>
 800229a:	4b88      	ldr	r3, [pc, #544]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 800229c:	689b      	ldr	r3, [r3, #8]
 800229e:	f003 030c 	and.w	r3, r3, #12
 80022a2:	2b04      	cmp	r3, #4
 80022a4:	d00c      	beq.n	80022c0 <HAL_RCC_OscConfig+0x44>
 80022a6:	4b85      	ldr	r3, [pc, #532]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80022a8:	689b      	ldr	r3, [r3, #8]
 80022aa:	f003 030c 	and.w	r3, r3, #12
 80022ae:	2b08      	cmp	r3, #8
 80022b0:	d112      	bne.n	80022d8 <HAL_RCC_OscConfig+0x5c>
 80022b2:	4b82      	ldr	r3, [pc, #520]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80022b4:	685b      	ldr	r3, [r3, #4]
 80022b6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80022ba:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80022be:	d10b      	bne.n	80022d8 <HAL_RCC_OscConfig+0x5c>
 80022c0:	4b7e      	ldr	r3, [pc, #504]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80022c8:	2b00      	cmp	r3, #0
 80022ca:	d05b      	beq.n	8002384 <HAL_RCC_OscConfig+0x108>
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	685b      	ldr	r3, [r3, #4]
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d157      	bne.n	8002384 <HAL_RCC_OscConfig+0x108>
 80022d4:	2301      	movs	r3, #1
 80022d6:	e242      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	685b      	ldr	r3, [r3, #4]
 80022dc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80022e0:	d106      	bne.n	80022f0 <HAL_RCC_OscConfig+0x74>
 80022e2:	4b76      	ldr	r3, [pc, #472]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	4a75      	ldr	r2, [pc, #468]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80022e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80022ec:	6013      	str	r3, [r2, #0]
 80022ee:	e01d      	b.n	800232c <HAL_RCC_OscConfig+0xb0>
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	685b      	ldr	r3, [r3, #4]
 80022f4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80022f8:	d10c      	bne.n	8002314 <HAL_RCC_OscConfig+0x98>
 80022fa:	4b70      	ldr	r3, [pc, #448]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	4a6f      	ldr	r2, [pc, #444]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002300:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002304:	6013      	str	r3, [r2, #0]
 8002306:	4b6d      	ldr	r3, [pc, #436]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	4a6c      	ldr	r2, [pc, #432]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 800230c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002310:	6013      	str	r3, [r2, #0]
 8002312:	e00b      	b.n	800232c <HAL_RCC_OscConfig+0xb0>
 8002314:	4b69      	ldr	r3, [pc, #420]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	4a68      	ldr	r2, [pc, #416]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 800231a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800231e:	6013      	str	r3, [r2, #0]
 8002320:	4b66      	ldr	r3, [pc, #408]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	4a65      	ldr	r2, [pc, #404]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002326:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800232a:	6013      	str	r3, [r2, #0]
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	685b      	ldr	r3, [r3, #4]
 8002330:	2b00      	cmp	r3, #0
 8002332:	d013      	beq.n	800235c <HAL_RCC_OscConfig+0xe0>
 8002334:	f7ff fc6a 	bl	8001c0c <HAL_GetTick>
 8002338:	6138      	str	r0, [r7, #16]
 800233a:	e008      	b.n	800234e <HAL_RCC_OscConfig+0xd2>
 800233c:	f7ff fc66 	bl	8001c0c <HAL_GetTick>
 8002340:	4602      	mov	r2, r0
 8002342:	693b      	ldr	r3, [r7, #16]
 8002344:	1ad3      	subs	r3, r2, r3
 8002346:	2b64      	cmp	r3, #100	; 0x64
 8002348:	d901      	bls.n	800234e <HAL_RCC_OscConfig+0xd2>
 800234a:	2303      	movs	r3, #3
 800234c:	e207      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 800234e:	4b5b      	ldr	r3, [pc, #364]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002356:	2b00      	cmp	r3, #0
 8002358:	d0f0      	beq.n	800233c <HAL_RCC_OscConfig+0xc0>
 800235a:	e014      	b.n	8002386 <HAL_RCC_OscConfig+0x10a>
 800235c:	f7ff fc56 	bl	8001c0c <HAL_GetTick>
 8002360:	6138      	str	r0, [r7, #16]
 8002362:	e008      	b.n	8002376 <HAL_RCC_OscConfig+0xfa>
 8002364:	f7ff fc52 	bl	8001c0c <HAL_GetTick>
 8002368:	4602      	mov	r2, r0
 800236a:	693b      	ldr	r3, [r7, #16]
 800236c:	1ad3      	subs	r3, r2, r3
 800236e:	2b64      	cmp	r3, #100	; 0x64
 8002370:	d901      	bls.n	8002376 <HAL_RCC_OscConfig+0xfa>
 8002372:	2303      	movs	r3, #3
 8002374:	e1f3      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 8002376:	4b51      	ldr	r3, [pc, #324]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800237e:	2b00      	cmp	r3, #0
 8002380:	d1f0      	bne.n	8002364 <HAL_RCC_OscConfig+0xe8>
 8002382:	e000      	b.n	8002386 <HAL_RCC_OscConfig+0x10a>
 8002384:	bf00      	nop
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	f003 0302 	and.w	r3, r3, #2
 800238e:	2b00      	cmp	r3, #0
 8002390:	d063      	beq.n	800245a <HAL_RCC_OscConfig+0x1de>
 8002392:	4b4a      	ldr	r3, [pc, #296]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002394:	689b      	ldr	r3, [r3, #8]
 8002396:	f003 030c 	and.w	r3, r3, #12
 800239a:	2b00      	cmp	r3, #0
 800239c:	d00b      	beq.n	80023b6 <HAL_RCC_OscConfig+0x13a>
 800239e:	4b47      	ldr	r3, [pc, #284]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80023a0:	689b      	ldr	r3, [r3, #8]
 80023a2:	f003 030c 	and.w	r3, r3, #12
 80023a6:	2b08      	cmp	r3, #8
 80023a8:	d11c      	bne.n	80023e4 <HAL_RCC_OscConfig+0x168>
 80023aa:	4b44      	ldr	r3, [pc, #272]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80023ac:	685b      	ldr	r3, [r3, #4]
 80023ae:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80023b2:	2b00      	cmp	r3, #0
 80023b4:	d116      	bne.n	80023e4 <HAL_RCC_OscConfig+0x168>
 80023b6:	4b41      	ldr	r3, [pc, #260]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	f003 0302 	and.w	r3, r3, #2
 80023be:	2b00      	cmp	r3, #0
 80023c0:	d005      	beq.n	80023ce <HAL_RCC_OscConfig+0x152>
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	68db      	ldr	r3, [r3, #12]
 80023c6:	2b01      	cmp	r3, #1
 80023c8:	d001      	beq.n	80023ce <HAL_RCC_OscConfig+0x152>
 80023ca:	2301      	movs	r3, #1
 80023cc:	e1c7      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 80023ce:	4b3b      	ldr	r3, [pc, #236]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80023d0:	681b      	ldr	r3, [r3, #0]
 80023d2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	691b      	ldr	r3, [r3, #16]
 80023da:	00db      	lsls	r3, r3, #3
 80023dc:	4937      	ldr	r1, [pc, #220]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 80023de:	4313      	orrs	r3, r2
 80023e0:	600b      	str	r3, [r1, #0]
 80023e2:	e03a      	b.n	800245a <HAL_RCC_OscConfig+0x1de>
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	68db      	ldr	r3, [r3, #12]
 80023e8:	2b00      	cmp	r3, #0
 80023ea:	d020      	beq.n	800242e <HAL_RCC_OscConfig+0x1b2>
 80023ec:	4b34      	ldr	r3, [pc, #208]	; (80024c0 <HAL_RCC_OscConfig+0x244>)
 80023ee:	2201      	movs	r2, #1
 80023f0:	601a      	str	r2, [r3, #0]
 80023f2:	f7ff fc0b 	bl	8001c0c <HAL_GetTick>
 80023f6:	6138      	str	r0, [r7, #16]
 80023f8:	e008      	b.n	800240c <HAL_RCC_OscConfig+0x190>
 80023fa:	f7ff fc07 	bl	8001c0c <HAL_GetTick>
 80023fe:	4602      	mov	r2, r0
 8002400:	693b      	ldr	r3, [r7, #16]
 8002402:	1ad3      	subs	r3, r2, r3
 8002404:	2b02      	cmp	r3, #2
 8002406:	d901      	bls.n	800240c <HAL_RCC_OscConfig+0x190>
 8002408:	2303      	movs	r3, #3
 800240a:	e1a8      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 800240c:	4b2b      	ldr	r3, [pc, #172]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	f003 0302 	and.w	r3, r3, #2
 8002414:	2b00      	cmp	r3, #0
 8002416:	d0f0      	beq.n	80023fa <HAL_RCC_OscConfig+0x17e>
 8002418:	4b28      	ldr	r3, [pc, #160]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	691b      	ldr	r3, [r3, #16]
 8002424:	00db      	lsls	r3, r3, #3
 8002426:	4925      	ldr	r1, [pc, #148]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002428:	4313      	orrs	r3, r2
 800242a:	600b      	str	r3, [r1, #0]
 800242c:	e015      	b.n	800245a <HAL_RCC_OscConfig+0x1de>
 800242e:	4b24      	ldr	r3, [pc, #144]	; (80024c0 <HAL_RCC_OscConfig+0x244>)
 8002430:	2200      	movs	r2, #0
 8002432:	601a      	str	r2, [r3, #0]
 8002434:	f7ff fbea 	bl	8001c0c <HAL_GetTick>
 8002438:	6138      	str	r0, [r7, #16]
 800243a:	e008      	b.n	800244e <HAL_RCC_OscConfig+0x1d2>
 800243c:	f7ff fbe6 	bl	8001c0c <HAL_GetTick>
 8002440:	4602      	mov	r2, r0
 8002442:	693b      	ldr	r3, [r7, #16]
 8002444:	1ad3      	subs	r3, r2, r3
 8002446:	2b02      	cmp	r3, #2
 8002448:	d901      	bls.n	800244e <HAL_RCC_OscConfig+0x1d2>
 800244a:	2303      	movs	r3, #3
 800244c:	e187      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 800244e:	4b1b      	ldr	r3, [pc, #108]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	f003 0302 	and.w	r3, r3, #2
 8002456:	2b00      	cmp	r3, #0
 8002458:	d1f0      	bne.n	800243c <HAL_RCC_OscConfig+0x1c0>
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	f003 0308 	and.w	r3, r3, #8
 8002462:	2b00      	cmp	r3, #0
 8002464:	d036      	beq.n	80024d4 <HAL_RCC_OscConfig+0x258>
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	695b      	ldr	r3, [r3, #20]
 800246a:	2b00      	cmp	r3, #0
 800246c:	d016      	beq.n	800249c <HAL_RCC_OscConfig+0x220>
 800246e:	4b15      	ldr	r3, [pc, #84]	; (80024c4 <HAL_RCC_OscConfig+0x248>)
 8002470:	2201      	movs	r2, #1
 8002472:	601a      	str	r2, [r3, #0]
 8002474:	f7ff fbca 	bl	8001c0c <HAL_GetTick>
 8002478:	6138      	str	r0, [r7, #16]
 800247a:	e008      	b.n	800248e <HAL_RCC_OscConfig+0x212>
 800247c:	f7ff fbc6 	bl	8001c0c <HAL_GetTick>
 8002480:	4602      	mov	r2, r0
 8002482:	693b      	ldr	r3, [r7, #16]
 8002484:	1ad3      	subs	r3, r2, r3
 8002486:	2b02      	cmp	r3, #2
 8002488:	d901      	bls.n	800248e <HAL_RCC_OscConfig+0x212>
 800248a:	2303      	movs	r3, #3
 800248c:	e167      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 800248e:	4b0b      	ldr	r3, [pc, #44]	; (80024bc <HAL_RCC_OscConfig+0x240>)
 8002490:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002492:	f003 0302 	and.w	r3, r3, #2
 8002496:	2b00      	cmp	r3, #0
 8002498:	d0f0      	beq.n	800247c <HAL_RCC_OscConfig+0x200>
 800249a:	e01b      	b.n	80024d4 <HAL_RCC_OscConfig+0x258>
 800249c:	4b09      	ldr	r3, [pc, #36]	; (80024c4 <HAL_RCC_OscConfig+0x248>)
 800249e:	2200      	movs	r2, #0
 80024a0:	601a      	str	r2, [r3, #0]
 80024a2:	f7ff fbb3 	bl	8001c0c <HAL_GetTick>
 80024a6:	6138      	str	r0, [r7, #16]
 80024a8:	e00e      	b.n	80024c8 <HAL_RCC_OscConfig+0x24c>
 80024aa:	f7ff fbaf 	bl	8001c0c <HAL_GetTick>
 80024ae:	4602      	mov	r2, r0
 80024b0:	693b      	ldr	r3, [r7, #16]
 80024b2:	1ad3      	subs	r3, r2, r3
 80024b4:	2b02      	cmp	r3, #2
 80024b6:	d907      	bls.n	80024c8 <HAL_RCC_OscConfig+0x24c>
 80024b8:	2303      	movs	r3, #3
 80024ba:	e150      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 80024bc:	40023800 	.word	0x40023800
 80024c0:	42470000 	.word	0x42470000
 80024c4:	42470e80 	.word	0x42470e80
 80024c8:	4b88      	ldr	r3, [pc, #544]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 80024ca:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80024cc:	f003 0302 	and.w	r3, r3, #2
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d1ea      	bne.n	80024aa <HAL_RCC_OscConfig+0x22e>
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	681b      	ldr	r3, [r3, #0]
 80024d8:	f003 0304 	and.w	r3, r3, #4
 80024dc:	2b00      	cmp	r3, #0
 80024de:	f000 8097 	beq.w	8002610 <HAL_RCC_OscConfig+0x394>
 80024e2:	2300      	movs	r3, #0
 80024e4:	75fb      	strb	r3, [r7, #23]
 80024e6:	4b81      	ldr	r3, [pc, #516]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 80024e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80024ee:	2b00      	cmp	r3, #0
 80024f0:	d10f      	bne.n	8002512 <HAL_RCC_OscConfig+0x296>
 80024f2:	2300      	movs	r3, #0
 80024f4:	60bb      	str	r3, [r7, #8]
 80024f6:	4b7d      	ldr	r3, [pc, #500]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 80024f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024fa:	4a7c      	ldr	r2, [pc, #496]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 80024fc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002500:	6413      	str	r3, [r2, #64]	; 0x40
 8002502:	4b7a      	ldr	r3, [pc, #488]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 8002504:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002506:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800250a:	60bb      	str	r3, [r7, #8]
 800250c:	68bb      	ldr	r3, [r7, #8]
 800250e:	2301      	movs	r3, #1
 8002510:	75fb      	strb	r3, [r7, #23]
 8002512:	4b77      	ldr	r3, [pc, #476]	; (80026f0 <HAL_RCC_OscConfig+0x474>)
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800251a:	2b00      	cmp	r3, #0
 800251c:	d118      	bne.n	8002550 <HAL_RCC_OscConfig+0x2d4>
 800251e:	4b74      	ldr	r3, [pc, #464]	; (80026f0 <HAL_RCC_OscConfig+0x474>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	4a73      	ldr	r2, [pc, #460]	; (80026f0 <HAL_RCC_OscConfig+0x474>)
 8002524:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002528:	6013      	str	r3, [r2, #0]
 800252a:	f7ff fb6f 	bl	8001c0c <HAL_GetTick>
 800252e:	6138      	str	r0, [r7, #16]
 8002530:	e008      	b.n	8002544 <HAL_RCC_OscConfig+0x2c8>
 8002532:	f7ff fb6b 	bl	8001c0c <HAL_GetTick>
 8002536:	4602      	mov	r2, r0
 8002538:	693b      	ldr	r3, [r7, #16]
 800253a:	1ad3      	subs	r3, r2, r3
 800253c:	2b02      	cmp	r3, #2
 800253e:	d901      	bls.n	8002544 <HAL_RCC_OscConfig+0x2c8>
 8002540:	2303      	movs	r3, #3
 8002542:	e10c      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 8002544:	4b6a      	ldr	r3, [pc, #424]	; (80026f0 <HAL_RCC_OscConfig+0x474>)
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800254c:	2b00      	cmp	r3, #0
 800254e:	d0f0      	beq.n	8002532 <HAL_RCC_OscConfig+0x2b6>
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	689b      	ldr	r3, [r3, #8]
 8002554:	2b01      	cmp	r3, #1
 8002556:	d106      	bne.n	8002566 <HAL_RCC_OscConfig+0x2ea>
 8002558:	4b64      	ldr	r3, [pc, #400]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 800255a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800255c:	4a63      	ldr	r2, [pc, #396]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 800255e:	f043 0301 	orr.w	r3, r3, #1
 8002562:	6713      	str	r3, [r2, #112]	; 0x70
 8002564:	e01c      	b.n	80025a0 <HAL_RCC_OscConfig+0x324>
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	689b      	ldr	r3, [r3, #8]
 800256a:	2b05      	cmp	r3, #5
 800256c:	d10c      	bne.n	8002588 <HAL_RCC_OscConfig+0x30c>
 800256e:	4b5f      	ldr	r3, [pc, #380]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 8002570:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002572:	4a5e      	ldr	r2, [pc, #376]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 8002574:	f043 0304 	orr.w	r3, r3, #4
 8002578:	6713      	str	r3, [r2, #112]	; 0x70
 800257a:	4b5c      	ldr	r3, [pc, #368]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 800257c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800257e:	4a5b      	ldr	r2, [pc, #364]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 8002580:	f043 0301 	orr.w	r3, r3, #1
 8002584:	6713      	str	r3, [r2, #112]	; 0x70
 8002586:	e00b      	b.n	80025a0 <HAL_RCC_OscConfig+0x324>
 8002588:	4b58      	ldr	r3, [pc, #352]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 800258a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800258c:	4a57      	ldr	r2, [pc, #348]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 800258e:	f023 0301 	bic.w	r3, r3, #1
 8002592:	6713      	str	r3, [r2, #112]	; 0x70
 8002594:	4b55      	ldr	r3, [pc, #340]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 8002596:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002598:	4a54      	ldr	r2, [pc, #336]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 800259a:	f023 0304 	bic.w	r3, r3, #4
 800259e:	6713      	str	r3, [r2, #112]	; 0x70
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	689b      	ldr	r3, [r3, #8]
 80025a4:	2b00      	cmp	r3, #0
 80025a6:	d015      	beq.n	80025d4 <HAL_RCC_OscConfig+0x358>
 80025a8:	f7ff fb30 	bl	8001c0c <HAL_GetTick>
 80025ac:	6138      	str	r0, [r7, #16]
 80025ae:	e00a      	b.n	80025c6 <HAL_RCC_OscConfig+0x34a>
 80025b0:	f7ff fb2c 	bl	8001c0c <HAL_GetTick>
 80025b4:	4602      	mov	r2, r0
 80025b6:	693b      	ldr	r3, [r7, #16]
 80025b8:	1ad3      	subs	r3, r2, r3
 80025ba:	f241 3288 	movw	r2, #5000	; 0x1388
 80025be:	4293      	cmp	r3, r2
 80025c0:	d901      	bls.n	80025c6 <HAL_RCC_OscConfig+0x34a>
 80025c2:	2303      	movs	r3, #3
 80025c4:	e0cb      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 80025c6:	4b49      	ldr	r3, [pc, #292]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 80025c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80025ca:	f003 0302 	and.w	r3, r3, #2
 80025ce:	2b00      	cmp	r3, #0
 80025d0:	d0ee      	beq.n	80025b0 <HAL_RCC_OscConfig+0x334>
 80025d2:	e014      	b.n	80025fe <HAL_RCC_OscConfig+0x382>
 80025d4:	f7ff fb1a 	bl	8001c0c <HAL_GetTick>
 80025d8:	6138      	str	r0, [r7, #16]
 80025da:	e00a      	b.n	80025f2 <HAL_RCC_OscConfig+0x376>
 80025dc:	f7ff fb16 	bl	8001c0c <HAL_GetTick>
 80025e0:	4602      	mov	r2, r0
 80025e2:	693b      	ldr	r3, [r7, #16]
 80025e4:	1ad3      	subs	r3, r2, r3
 80025e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80025ea:	4293      	cmp	r3, r2
 80025ec:	d901      	bls.n	80025f2 <HAL_RCC_OscConfig+0x376>
 80025ee:	2303      	movs	r3, #3
 80025f0:	e0b5      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 80025f2:	4b3e      	ldr	r3, [pc, #248]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 80025f4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80025f6:	f003 0302 	and.w	r3, r3, #2
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d1ee      	bne.n	80025dc <HAL_RCC_OscConfig+0x360>
 80025fe:	7dfb      	ldrb	r3, [r7, #23]
 8002600:	2b01      	cmp	r3, #1
 8002602:	d105      	bne.n	8002610 <HAL_RCC_OscConfig+0x394>
 8002604:	4b39      	ldr	r3, [pc, #228]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 8002606:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002608:	4a38      	ldr	r2, [pc, #224]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 800260a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800260e:	6413      	str	r3, [r2, #64]	; 0x40
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	699b      	ldr	r3, [r3, #24]
 8002614:	2b00      	cmp	r3, #0
 8002616:	f000 80a1 	beq.w	800275c <HAL_RCC_OscConfig+0x4e0>
 800261a:	4b34      	ldr	r3, [pc, #208]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 800261c:	689b      	ldr	r3, [r3, #8]
 800261e:	f003 030c 	and.w	r3, r3, #12
 8002622:	2b08      	cmp	r3, #8
 8002624:	d05c      	beq.n	80026e0 <HAL_RCC_OscConfig+0x464>
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	699b      	ldr	r3, [r3, #24]
 800262a:	2b02      	cmp	r3, #2
 800262c:	d141      	bne.n	80026b2 <HAL_RCC_OscConfig+0x436>
 800262e:	4b31      	ldr	r3, [pc, #196]	; (80026f4 <HAL_RCC_OscConfig+0x478>)
 8002630:	2200      	movs	r2, #0
 8002632:	601a      	str	r2, [r3, #0]
 8002634:	f7ff faea 	bl	8001c0c <HAL_GetTick>
 8002638:	6138      	str	r0, [r7, #16]
 800263a:	e008      	b.n	800264e <HAL_RCC_OscConfig+0x3d2>
 800263c:	f7ff fae6 	bl	8001c0c <HAL_GetTick>
 8002640:	4602      	mov	r2, r0
 8002642:	693b      	ldr	r3, [r7, #16]
 8002644:	1ad3      	subs	r3, r2, r3
 8002646:	2b02      	cmp	r3, #2
 8002648:	d901      	bls.n	800264e <HAL_RCC_OscConfig+0x3d2>
 800264a:	2303      	movs	r3, #3
 800264c:	e087      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 800264e:	4b27      	ldr	r3, [pc, #156]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 8002650:	681b      	ldr	r3, [r3, #0]
 8002652:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002656:	2b00      	cmp	r3, #0
 8002658:	d1f0      	bne.n	800263c <HAL_RCC_OscConfig+0x3c0>
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	69da      	ldr	r2, [r3, #28]
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	6a1b      	ldr	r3, [r3, #32]
 8002662:	431a      	orrs	r2, r3
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002668:	019b      	lsls	r3, r3, #6
 800266a:	431a      	orrs	r2, r3
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002670:	085b      	lsrs	r3, r3, #1
 8002672:	3b01      	subs	r3, #1
 8002674:	041b      	lsls	r3, r3, #16
 8002676:	431a      	orrs	r2, r3
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800267c:	061b      	lsls	r3, r3, #24
 800267e:	491b      	ldr	r1, [pc, #108]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 8002680:	4313      	orrs	r3, r2
 8002682:	604b      	str	r3, [r1, #4]
 8002684:	4b1b      	ldr	r3, [pc, #108]	; (80026f4 <HAL_RCC_OscConfig+0x478>)
 8002686:	2201      	movs	r2, #1
 8002688:	601a      	str	r2, [r3, #0]
 800268a:	f7ff fabf 	bl	8001c0c <HAL_GetTick>
 800268e:	6138      	str	r0, [r7, #16]
 8002690:	e008      	b.n	80026a4 <HAL_RCC_OscConfig+0x428>
 8002692:	f7ff fabb 	bl	8001c0c <HAL_GetTick>
 8002696:	4602      	mov	r2, r0
 8002698:	693b      	ldr	r3, [r7, #16]
 800269a:	1ad3      	subs	r3, r2, r3
 800269c:	2b02      	cmp	r3, #2
 800269e:	d901      	bls.n	80026a4 <HAL_RCC_OscConfig+0x428>
 80026a0:	2303      	movs	r3, #3
 80026a2:	e05c      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 80026a4:	4b11      	ldr	r3, [pc, #68]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80026ac:	2b00      	cmp	r3, #0
 80026ae:	d0f0      	beq.n	8002692 <HAL_RCC_OscConfig+0x416>
 80026b0:	e054      	b.n	800275c <HAL_RCC_OscConfig+0x4e0>
 80026b2:	4b10      	ldr	r3, [pc, #64]	; (80026f4 <HAL_RCC_OscConfig+0x478>)
 80026b4:	2200      	movs	r2, #0
 80026b6:	601a      	str	r2, [r3, #0]
 80026b8:	f7ff faa8 	bl	8001c0c <HAL_GetTick>
 80026bc:	6138      	str	r0, [r7, #16]
 80026be:	e008      	b.n	80026d2 <HAL_RCC_OscConfig+0x456>
 80026c0:	f7ff faa4 	bl	8001c0c <HAL_GetTick>
 80026c4:	4602      	mov	r2, r0
 80026c6:	693b      	ldr	r3, [r7, #16]
 80026c8:	1ad3      	subs	r3, r2, r3
 80026ca:	2b02      	cmp	r3, #2
 80026cc:	d901      	bls.n	80026d2 <HAL_RCC_OscConfig+0x456>
 80026ce:	2303      	movs	r3, #3
 80026d0:	e045      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 80026d2:	4b06      	ldr	r3, [pc, #24]	; (80026ec <HAL_RCC_OscConfig+0x470>)
 80026d4:	681b      	ldr	r3, [r3, #0]
 80026d6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80026da:	2b00      	cmp	r3, #0
 80026dc:	d1f0      	bne.n	80026c0 <HAL_RCC_OscConfig+0x444>
 80026de:	e03d      	b.n	800275c <HAL_RCC_OscConfig+0x4e0>
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	699b      	ldr	r3, [r3, #24]
 80026e4:	2b01      	cmp	r3, #1
 80026e6:	d107      	bne.n	80026f8 <HAL_RCC_OscConfig+0x47c>
 80026e8:	2301      	movs	r3, #1
 80026ea:	e038      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 80026ec:	40023800 	.word	0x40023800
 80026f0:	40007000 	.word	0x40007000
 80026f4:	42470060 	.word	0x42470060
 80026f8:	4b1b      	ldr	r3, [pc, #108]	; (8002768 <HAL_RCC_OscConfig+0x4ec>)
 80026fa:	685b      	ldr	r3, [r3, #4]
 80026fc:	60fb      	str	r3, [r7, #12]
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	699b      	ldr	r3, [r3, #24]
 8002702:	2b01      	cmp	r3, #1
 8002704:	d028      	beq.n	8002758 <HAL_RCC_OscConfig+0x4dc>
 8002706:	68fb      	ldr	r3, [r7, #12]
 8002708:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	69db      	ldr	r3, [r3, #28]
 8002710:	429a      	cmp	r2, r3
 8002712:	d121      	bne.n	8002758 <HAL_RCC_OscConfig+0x4dc>
 8002714:	68fb      	ldr	r3, [r7, #12]
 8002716:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	6a1b      	ldr	r3, [r3, #32]
 800271e:	429a      	cmp	r2, r3
 8002720:	d11a      	bne.n	8002758 <HAL_RCC_OscConfig+0x4dc>
 8002722:	68fa      	ldr	r2, [r7, #12]
 8002724:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002728:	4013      	ands	r3, r2
 800272a:	687a      	ldr	r2, [r7, #4]
 800272c:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800272e:	0192      	lsls	r2, r2, #6
 8002730:	4293      	cmp	r3, r2
 8002732:	d111      	bne.n	8002758 <HAL_RCC_OscConfig+0x4dc>
 8002734:	68fb      	ldr	r3, [r7, #12]
 8002736:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800273e:	085b      	lsrs	r3, r3, #1
 8002740:	3b01      	subs	r3, #1
 8002742:	041b      	lsls	r3, r3, #16
 8002744:	429a      	cmp	r2, r3
 8002746:	d107      	bne.n	8002758 <HAL_RCC_OscConfig+0x4dc>
 8002748:	68fb      	ldr	r3, [r7, #12]
 800274a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002752:	061b      	lsls	r3, r3, #24
 8002754:	429a      	cmp	r2, r3
 8002756:	d001      	beq.n	800275c <HAL_RCC_OscConfig+0x4e0>
 8002758:	2301      	movs	r3, #1
 800275a:	e000      	b.n	800275e <HAL_RCC_OscConfig+0x4e2>
 800275c:	2300      	movs	r3, #0
 800275e:	4618      	mov	r0, r3
 8002760:	3718      	adds	r7, #24
 8002762:	46bd      	mov	sp, r7
 8002764:	bd80      	pop	{r7, pc}
 8002766:	bf00      	nop
 8002768:	40023800 	.word	0x40023800

0800276c <HAL_RCC_ClockConfig>:
 800276c:	b580      	push	{r7, lr}
 800276e:	b084      	sub	sp, #16
 8002770:	af00      	add	r7, sp, #0
 8002772:	6078      	str	r0, [r7, #4]
 8002774:	6039      	str	r1, [r7, #0]
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	2b00      	cmp	r3, #0
 800277a:	d101      	bne.n	8002780 <HAL_RCC_ClockConfig+0x14>
 800277c:	2301      	movs	r3, #1
 800277e:	e0cc      	b.n	800291a <HAL_RCC_ClockConfig+0x1ae>
 8002780:	4b68      	ldr	r3, [pc, #416]	; (8002924 <HAL_RCC_ClockConfig+0x1b8>)
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	f003 0307 	and.w	r3, r3, #7
 8002788:	683a      	ldr	r2, [r7, #0]
 800278a:	429a      	cmp	r2, r3
 800278c:	d90c      	bls.n	80027a8 <HAL_RCC_ClockConfig+0x3c>
 800278e:	4b65      	ldr	r3, [pc, #404]	; (8002924 <HAL_RCC_ClockConfig+0x1b8>)
 8002790:	683a      	ldr	r2, [r7, #0]
 8002792:	b2d2      	uxtb	r2, r2
 8002794:	701a      	strb	r2, [r3, #0]
 8002796:	4b63      	ldr	r3, [pc, #396]	; (8002924 <HAL_RCC_ClockConfig+0x1b8>)
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	f003 0307 	and.w	r3, r3, #7
 800279e:	683a      	ldr	r2, [r7, #0]
 80027a0:	429a      	cmp	r2, r3
 80027a2:	d001      	beq.n	80027a8 <HAL_RCC_ClockConfig+0x3c>
 80027a4:	2301      	movs	r3, #1
 80027a6:	e0b8      	b.n	800291a <HAL_RCC_ClockConfig+0x1ae>
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	681b      	ldr	r3, [r3, #0]
 80027ac:	f003 0302 	and.w	r3, r3, #2
 80027b0:	2b00      	cmp	r3, #0
 80027b2:	d020      	beq.n	80027f6 <HAL_RCC_ClockConfig+0x8a>
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	f003 0304 	and.w	r3, r3, #4
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d005      	beq.n	80027cc <HAL_RCC_ClockConfig+0x60>
 80027c0:	4b59      	ldr	r3, [pc, #356]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80027c2:	689b      	ldr	r3, [r3, #8]
 80027c4:	4a58      	ldr	r2, [pc, #352]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80027c6:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80027ca:	6093      	str	r3, [r2, #8]
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	f003 0308 	and.w	r3, r3, #8
 80027d4:	2b00      	cmp	r3, #0
 80027d6:	d005      	beq.n	80027e4 <HAL_RCC_ClockConfig+0x78>
 80027d8:	4b53      	ldr	r3, [pc, #332]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80027da:	689b      	ldr	r3, [r3, #8]
 80027dc:	4a52      	ldr	r2, [pc, #328]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80027de:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80027e2:	6093      	str	r3, [r2, #8]
 80027e4:	4b50      	ldr	r3, [pc, #320]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80027e6:	689b      	ldr	r3, [r3, #8]
 80027e8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	689b      	ldr	r3, [r3, #8]
 80027f0:	494d      	ldr	r1, [pc, #308]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80027f2:	4313      	orrs	r3, r2
 80027f4:	608b      	str	r3, [r1, #8]
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	681b      	ldr	r3, [r3, #0]
 80027fa:	f003 0301 	and.w	r3, r3, #1
 80027fe:	2b00      	cmp	r3, #0
 8002800:	d044      	beq.n	800288c <HAL_RCC_ClockConfig+0x120>
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	685b      	ldr	r3, [r3, #4]
 8002806:	2b01      	cmp	r3, #1
 8002808:	d107      	bne.n	800281a <HAL_RCC_ClockConfig+0xae>
 800280a:	4b47      	ldr	r3, [pc, #284]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002812:	2b00      	cmp	r3, #0
 8002814:	d119      	bne.n	800284a <HAL_RCC_ClockConfig+0xde>
 8002816:	2301      	movs	r3, #1
 8002818:	e07f      	b.n	800291a <HAL_RCC_ClockConfig+0x1ae>
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	685b      	ldr	r3, [r3, #4]
 800281e:	2b02      	cmp	r3, #2
 8002820:	d003      	beq.n	800282a <HAL_RCC_ClockConfig+0xbe>
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	685b      	ldr	r3, [r3, #4]
 8002826:	2b03      	cmp	r3, #3
 8002828:	d107      	bne.n	800283a <HAL_RCC_ClockConfig+0xce>
 800282a:	4b3f      	ldr	r3, [pc, #252]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002832:	2b00      	cmp	r3, #0
 8002834:	d109      	bne.n	800284a <HAL_RCC_ClockConfig+0xde>
 8002836:	2301      	movs	r3, #1
 8002838:	e06f      	b.n	800291a <HAL_RCC_ClockConfig+0x1ae>
 800283a:	4b3b      	ldr	r3, [pc, #236]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	f003 0302 	and.w	r3, r3, #2
 8002842:	2b00      	cmp	r3, #0
 8002844:	d101      	bne.n	800284a <HAL_RCC_ClockConfig+0xde>
 8002846:	2301      	movs	r3, #1
 8002848:	e067      	b.n	800291a <HAL_RCC_ClockConfig+0x1ae>
 800284a:	4b37      	ldr	r3, [pc, #220]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 800284c:	689b      	ldr	r3, [r3, #8]
 800284e:	f023 0203 	bic.w	r2, r3, #3
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	685b      	ldr	r3, [r3, #4]
 8002856:	4934      	ldr	r1, [pc, #208]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 8002858:	4313      	orrs	r3, r2
 800285a:	608b      	str	r3, [r1, #8]
 800285c:	f7ff f9d6 	bl	8001c0c <HAL_GetTick>
 8002860:	60f8      	str	r0, [r7, #12]
 8002862:	e00a      	b.n	800287a <HAL_RCC_ClockConfig+0x10e>
 8002864:	f7ff f9d2 	bl	8001c0c <HAL_GetTick>
 8002868:	4602      	mov	r2, r0
 800286a:	68fb      	ldr	r3, [r7, #12]
 800286c:	1ad3      	subs	r3, r2, r3
 800286e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002872:	4293      	cmp	r3, r2
 8002874:	d901      	bls.n	800287a <HAL_RCC_ClockConfig+0x10e>
 8002876:	2303      	movs	r3, #3
 8002878:	e04f      	b.n	800291a <HAL_RCC_ClockConfig+0x1ae>
 800287a:	4b2b      	ldr	r3, [pc, #172]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 800287c:	689b      	ldr	r3, [r3, #8]
 800287e:	f003 020c 	and.w	r2, r3, #12
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	685b      	ldr	r3, [r3, #4]
 8002886:	009b      	lsls	r3, r3, #2
 8002888:	429a      	cmp	r2, r3
 800288a:	d1eb      	bne.n	8002864 <HAL_RCC_ClockConfig+0xf8>
 800288c:	4b25      	ldr	r3, [pc, #148]	; (8002924 <HAL_RCC_ClockConfig+0x1b8>)
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	f003 0307 	and.w	r3, r3, #7
 8002894:	683a      	ldr	r2, [r7, #0]
 8002896:	429a      	cmp	r2, r3
 8002898:	d20c      	bcs.n	80028b4 <HAL_RCC_ClockConfig+0x148>
 800289a:	4b22      	ldr	r3, [pc, #136]	; (8002924 <HAL_RCC_ClockConfig+0x1b8>)
 800289c:	683a      	ldr	r2, [r7, #0]
 800289e:	b2d2      	uxtb	r2, r2
 80028a0:	701a      	strb	r2, [r3, #0]
 80028a2:	4b20      	ldr	r3, [pc, #128]	; (8002924 <HAL_RCC_ClockConfig+0x1b8>)
 80028a4:	681b      	ldr	r3, [r3, #0]
 80028a6:	f003 0307 	and.w	r3, r3, #7
 80028aa:	683a      	ldr	r2, [r7, #0]
 80028ac:	429a      	cmp	r2, r3
 80028ae:	d001      	beq.n	80028b4 <HAL_RCC_ClockConfig+0x148>
 80028b0:	2301      	movs	r3, #1
 80028b2:	e032      	b.n	800291a <HAL_RCC_ClockConfig+0x1ae>
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	f003 0304 	and.w	r3, r3, #4
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d008      	beq.n	80028d2 <HAL_RCC_ClockConfig+0x166>
 80028c0:	4b19      	ldr	r3, [pc, #100]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80028c2:	689b      	ldr	r3, [r3, #8]
 80028c4:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	68db      	ldr	r3, [r3, #12]
 80028cc:	4916      	ldr	r1, [pc, #88]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80028ce:	4313      	orrs	r3, r2
 80028d0:	608b      	str	r3, [r1, #8]
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	f003 0308 	and.w	r3, r3, #8
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d009      	beq.n	80028f2 <HAL_RCC_ClockConfig+0x186>
 80028de:	4b12      	ldr	r3, [pc, #72]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80028e0:	689b      	ldr	r3, [r3, #8]
 80028e2:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80028e6:	687b      	ldr	r3, [r7, #4]
 80028e8:	691b      	ldr	r3, [r3, #16]
 80028ea:	00db      	lsls	r3, r3, #3
 80028ec:	490e      	ldr	r1, [pc, #56]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80028ee:	4313      	orrs	r3, r2
 80028f0:	608b      	str	r3, [r1, #8]
 80028f2:	f000 f821 	bl	8002938 <HAL_RCC_GetSysClockFreq>
 80028f6:	4602      	mov	r2, r0
 80028f8:	4b0b      	ldr	r3, [pc, #44]	; (8002928 <HAL_RCC_ClockConfig+0x1bc>)
 80028fa:	689b      	ldr	r3, [r3, #8]
 80028fc:	091b      	lsrs	r3, r3, #4
 80028fe:	f003 030f 	and.w	r3, r3, #15
 8002902:	490a      	ldr	r1, [pc, #40]	; (800292c <HAL_RCC_ClockConfig+0x1c0>)
 8002904:	5ccb      	ldrb	r3, [r1, r3]
 8002906:	fa22 f303 	lsr.w	r3, r2, r3
 800290a:	4a09      	ldr	r2, [pc, #36]	; (8002930 <HAL_RCC_ClockConfig+0x1c4>)
 800290c:	6013      	str	r3, [r2, #0]
 800290e:	4b09      	ldr	r3, [pc, #36]	; (8002934 <HAL_RCC_ClockConfig+0x1c8>)
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	4618      	mov	r0, r3
 8002914:	f7ff f82c 	bl	8001970 <HAL_InitTick>
 8002918:	2300      	movs	r3, #0
 800291a:	4618      	mov	r0, r3
 800291c:	3710      	adds	r7, #16
 800291e:	46bd      	mov	sp, r7
 8002920:	bd80      	pop	{r7, pc}
 8002922:	bf00      	nop
 8002924:	40023c00 	.word	0x40023c00
 8002928:	40023800 	.word	0x40023800
 800292c:	08008278 	.word	0x08008278
 8002930:	20000014 	.word	0x20000014
 8002934:	20000018 	.word	0x20000018

08002938 <HAL_RCC_GetSysClockFreq>:
 8002938:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800293c:	b094      	sub	sp, #80	; 0x50
 800293e:	af00      	add	r7, sp, #0
 8002940:	2300      	movs	r3, #0
 8002942:	647b      	str	r3, [r7, #68]	; 0x44
 8002944:	2300      	movs	r3, #0
 8002946:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002948:	2300      	movs	r3, #0
 800294a:	643b      	str	r3, [r7, #64]	; 0x40
 800294c:	2300      	movs	r3, #0
 800294e:	64bb      	str	r3, [r7, #72]	; 0x48
 8002950:	4b79      	ldr	r3, [pc, #484]	; (8002b38 <HAL_RCC_GetSysClockFreq+0x200>)
 8002952:	689b      	ldr	r3, [r3, #8]
 8002954:	f003 030c 	and.w	r3, r3, #12
 8002958:	2b08      	cmp	r3, #8
 800295a:	d00d      	beq.n	8002978 <HAL_RCC_GetSysClockFreq+0x40>
 800295c:	2b08      	cmp	r3, #8
 800295e:	f200 80e1 	bhi.w	8002b24 <HAL_RCC_GetSysClockFreq+0x1ec>
 8002962:	2b00      	cmp	r3, #0
 8002964:	d002      	beq.n	800296c <HAL_RCC_GetSysClockFreq+0x34>
 8002966:	2b04      	cmp	r3, #4
 8002968:	d003      	beq.n	8002972 <HAL_RCC_GetSysClockFreq+0x3a>
 800296a:	e0db      	b.n	8002b24 <HAL_RCC_GetSysClockFreq+0x1ec>
 800296c:	4b73      	ldr	r3, [pc, #460]	; (8002b3c <HAL_RCC_GetSysClockFreq+0x204>)
 800296e:	64bb      	str	r3, [r7, #72]	; 0x48
 8002970:	e0db      	b.n	8002b2a <HAL_RCC_GetSysClockFreq+0x1f2>
 8002972:	4b73      	ldr	r3, [pc, #460]	; (8002b40 <HAL_RCC_GetSysClockFreq+0x208>)
 8002974:	64bb      	str	r3, [r7, #72]	; 0x48
 8002976:	e0d8      	b.n	8002b2a <HAL_RCC_GetSysClockFreq+0x1f2>
 8002978:	4b6f      	ldr	r3, [pc, #444]	; (8002b38 <HAL_RCC_GetSysClockFreq+0x200>)
 800297a:	685b      	ldr	r3, [r3, #4]
 800297c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002980:	647b      	str	r3, [r7, #68]	; 0x44
 8002982:	4b6d      	ldr	r3, [pc, #436]	; (8002b38 <HAL_RCC_GetSysClockFreq+0x200>)
 8002984:	685b      	ldr	r3, [r3, #4]
 8002986:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800298a:	2b00      	cmp	r3, #0
 800298c:	d063      	beq.n	8002a56 <HAL_RCC_GetSysClockFreq+0x11e>
 800298e:	4b6a      	ldr	r3, [pc, #424]	; (8002b38 <HAL_RCC_GetSysClockFreq+0x200>)
 8002990:	685b      	ldr	r3, [r3, #4]
 8002992:	099b      	lsrs	r3, r3, #6
 8002994:	2200      	movs	r2, #0
 8002996:	63bb      	str	r3, [r7, #56]	; 0x38
 8002998:	63fa      	str	r2, [r7, #60]	; 0x3c
 800299a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800299c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80029a0:	633b      	str	r3, [r7, #48]	; 0x30
 80029a2:	2300      	movs	r3, #0
 80029a4:	637b      	str	r3, [r7, #52]	; 0x34
 80029a6:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80029aa:	4622      	mov	r2, r4
 80029ac:	462b      	mov	r3, r5
 80029ae:	f04f 0000 	mov.w	r0, #0
 80029b2:	f04f 0100 	mov.w	r1, #0
 80029b6:	0159      	lsls	r1, r3, #5
 80029b8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80029bc:	0150      	lsls	r0, r2, #5
 80029be:	4602      	mov	r2, r0
 80029c0:	460b      	mov	r3, r1
 80029c2:	4621      	mov	r1, r4
 80029c4:	1a51      	subs	r1, r2, r1
 80029c6:	6139      	str	r1, [r7, #16]
 80029c8:	4629      	mov	r1, r5
 80029ca:	eb63 0301 	sbc.w	r3, r3, r1
 80029ce:	617b      	str	r3, [r7, #20]
 80029d0:	f04f 0200 	mov.w	r2, #0
 80029d4:	f04f 0300 	mov.w	r3, #0
 80029d8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80029dc:	4659      	mov	r1, fp
 80029de:	018b      	lsls	r3, r1, #6
 80029e0:	4651      	mov	r1, sl
 80029e2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80029e6:	4651      	mov	r1, sl
 80029e8:	018a      	lsls	r2, r1, #6
 80029ea:	4651      	mov	r1, sl
 80029ec:	ebb2 0801 	subs.w	r8, r2, r1
 80029f0:	4659      	mov	r1, fp
 80029f2:	eb63 0901 	sbc.w	r9, r3, r1
 80029f6:	f04f 0200 	mov.w	r2, #0
 80029fa:	f04f 0300 	mov.w	r3, #0
 80029fe:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002a02:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002a06:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002a0a:	4690      	mov	r8, r2
 8002a0c:	4699      	mov	r9, r3
 8002a0e:	4623      	mov	r3, r4
 8002a10:	eb18 0303 	adds.w	r3, r8, r3
 8002a14:	60bb      	str	r3, [r7, #8]
 8002a16:	462b      	mov	r3, r5
 8002a18:	eb49 0303 	adc.w	r3, r9, r3
 8002a1c:	60fb      	str	r3, [r7, #12]
 8002a1e:	f04f 0200 	mov.w	r2, #0
 8002a22:	f04f 0300 	mov.w	r3, #0
 8002a26:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8002a2a:	4629      	mov	r1, r5
 8002a2c:	024b      	lsls	r3, r1, #9
 8002a2e:	4621      	mov	r1, r4
 8002a30:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8002a34:	4621      	mov	r1, r4
 8002a36:	024a      	lsls	r2, r1, #9
 8002a38:	4610      	mov	r0, r2
 8002a3a:	4619      	mov	r1, r3
 8002a3c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002a3e:	2200      	movs	r2, #0
 8002a40:	62bb      	str	r3, [r7, #40]	; 0x28
 8002a42:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002a44:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8002a48:	f7fd fc32 	bl	80002b0 <__aeabi_uldivmod>
 8002a4c:	4602      	mov	r2, r0
 8002a4e:	460b      	mov	r3, r1
 8002a50:	4613      	mov	r3, r2
 8002a52:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002a54:	e058      	b.n	8002b08 <HAL_RCC_GetSysClockFreq+0x1d0>
 8002a56:	4b38      	ldr	r3, [pc, #224]	; (8002b38 <HAL_RCC_GetSysClockFreq+0x200>)
 8002a58:	685b      	ldr	r3, [r3, #4]
 8002a5a:	099b      	lsrs	r3, r3, #6
 8002a5c:	2200      	movs	r2, #0
 8002a5e:	4618      	mov	r0, r3
 8002a60:	4611      	mov	r1, r2
 8002a62:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8002a66:	623b      	str	r3, [r7, #32]
 8002a68:	2300      	movs	r3, #0
 8002a6a:	627b      	str	r3, [r7, #36]	; 0x24
 8002a6c:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002a70:	4642      	mov	r2, r8
 8002a72:	464b      	mov	r3, r9
 8002a74:	f04f 0000 	mov.w	r0, #0
 8002a78:	f04f 0100 	mov.w	r1, #0
 8002a7c:	0159      	lsls	r1, r3, #5
 8002a7e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002a82:	0150      	lsls	r0, r2, #5
 8002a84:	4602      	mov	r2, r0
 8002a86:	460b      	mov	r3, r1
 8002a88:	4641      	mov	r1, r8
 8002a8a:	ebb2 0a01 	subs.w	sl, r2, r1
 8002a8e:	4649      	mov	r1, r9
 8002a90:	eb63 0b01 	sbc.w	fp, r3, r1
 8002a94:	f04f 0200 	mov.w	r2, #0
 8002a98:	f04f 0300 	mov.w	r3, #0
 8002a9c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8002aa0:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8002aa4:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8002aa8:	ebb2 040a 	subs.w	r4, r2, sl
 8002aac:	eb63 050b 	sbc.w	r5, r3, fp
 8002ab0:	f04f 0200 	mov.w	r2, #0
 8002ab4:	f04f 0300 	mov.w	r3, #0
 8002ab8:	00eb      	lsls	r3, r5, #3
 8002aba:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002abe:	00e2      	lsls	r2, r4, #3
 8002ac0:	4614      	mov	r4, r2
 8002ac2:	461d      	mov	r5, r3
 8002ac4:	4643      	mov	r3, r8
 8002ac6:	18e3      	adds	r3, r4, r3
 8002ac8:	603b      	str	r3, [r7, #0]
 8002aca:	464b      	mov	r3, r9
 8002acc:	eb45 0303 	adc.w	r3, r5, r3
 8002ad0:	607b      	str	r3, [r7, #4]
 8002ad2:	f04f 0200 	mov.w	r2, #0
 8002ad6:	f04f 0300 	mov.w	r3, #0
 8002ada:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002ade:	4629      	mov	r1, r5
 8002ae0:	028b      	lsls	r3, r1, #10
 8002ae2:	4621      	mov	r1, r4
 8002ae4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002ae8:	4621      	mov	r1, r4
 8002aea:	028a      	lsls	r2, r1, #10
 8002aec:	4610      	mov	r0, r2
 8002aee:	4619      	mov	r1, r3
 8002af0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002af2:	2200      	movs	r2, #0
 8002af4:	61bb      	str	r3, [r7, #24]
 8002af6:	61fa      	str	r2, [r7, #28]
 8002af8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002afc:	f7fd fbd8 	bl	80002b0 <__aeabi_uldivmod>
 8002b00:	4602      	mov	r2, r0
 8002b02:	460b      	mov	r3, r1
 8002b04:	4613      	mov	r3, r2
 8002b06:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002b08:	4b0b      	ldr	r3, [pc, #44]	; (8002b38 <HAL_RCC_GetSysClockFreq+0x200>)
 8002b0a:	685b      	ldr	r3, [r3, #4]
 8002b0c:	0c1b      	lsrs	r3, r3, #16
 8002b0e:	f003 0303 	and.w	r3, r3, #3
 8002b12:	3301      	adds	r3, #1
 8002b14:	005b      	lsls	r3, r3, #1
 8002b16:	643b      	str	r3, [r7, #64]	; 0x40
 8002b18:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8002b1a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002b1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b20:	64bb      	str	r3, [r7, #72]	; 0x48
 8002b22:	e002      	b.n	8002b2a <HAL_RCC_GetSysClockFreq+0x1f2>
 8002b24:	4b05      	ldr	r3, [pc, #20]	; (8002b3c <HAL_RCC_GetSysClockFreq+0x204>)
 8002b26:	64bb      	str	r3, [r7, #72]	; 0x48
 8002b28:	bf00      	nop
 8002b2a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	3750      	adds	r7, #80	; 0x50
 8002b30:	46bd      	mov	sp, r7
 8002b32:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002b36:	bf00      	nop
 8002b38:	40023800 	.word	0x40023800
 8002b3c:	00f42400 	.word	0x00f42400
 8002b40:	007a1200 	.word	0x007a1200

08002b44 <HAL_RCC_GetHCLKFreq>:
 8002b44:	b480      	push	{r7}
 8002b46:	af00      	add	r7, sp, #0
 8002b48:	4b03      	ldr	r3, [pc, #12]	; (8002b58 <HAL_RCC_GetHCLKFreq+0x14>)
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	4618      	mov	r0, r3
 8002b4e:	46bd      	mov	sp, r7
 8002b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b54:	4770      	bx	lr
 8002b56:	bf00      	nop
 8002b58:	20000014 	.word	0x20000014

08002b5c <HAL_RCC_GetPCLK1Freq>:
 8002b5c:	b580      	push	{r7, lr}
 8002b5e:	af00      	add	r7, sp, #0
 8002b60:	f7ff fff0 	bl	8002b44 <HAL_RCC_GetHCLKFreq>
 8002b64:	4602      	mov	r2, r0
 8002b66:	4b05      	ldr	r3, [pc, #20]	; (8002b7c <HAL_RCC_GetPCLK1Freq+0x20>)
 8002b68:	689b      	ldr	r3, [r3, #8]
 8002b6a:	0a9b      	lsrs	r3, r3, #10
 8002b6c:	f003 0307 	and.w	r3, r3, #7
 8002b70:	4903      	ldr	r1, [pc, #12]	; (8002b80 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002b72:	5ccb      	ldrb	r3, [r1, r3]
 8002b74:	fa22 f303 	lsr.w	r3, r2, r3
 8002b78:	4618      	mov	r0, r3
 8002b7a:	bd80      	pop	{r7, pc}
 8002b7c:	40023800 	.word	0x40023800
 8002b80:	08008288 	.word	0x08008288

08002b84 <HAL_RCC_GetPCLK2Freq>:
 8002b84:	b580      	push	{r7, lr}
 8002b86:	af00      	add	r7, sp, #0
 8002b88:	f7ff ffdc 	bl	8002b44 <HAL_RCC_GetHCLKFreq>
 8002b8c:	4602      	mov	r2, r0
 8002b8e:	4b05      	ldr	r3, [pc, #20]	; (8002ba4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8002b90:	689b      	ldr	r3, [r3, #8]
 8002b92:	0b5b      	lsrs	r3, r3, #13
 8002b94:	f003 0307 	and.w	r3, r3, #7
 8002b98:	4903      	ldr	r1, [pc, #12]	; (8002ba8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002b9a:	5ccb      	ldrb	r3, [r1, r3]
 8002b9c:	fa22 f303 	lsr.w	r3, r2, r3
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	bd80      	pop	{r7, pc}
 8002ba4:	40023800 	.word	0x40023800
 8002ba8:	08008288 	.word	0x08008288

08002bac <HAL_RCC_GetClockConfig>:
 8002bac:	b480      	push	{r7}
 8002bae:	b083      	sub	sp, #12
 8002bb0:	af00      	add	r7, sp, #0
 8002bb2:	6078      	str	r0, [r7, #4]
 8002bb4:	6039      	str	r1, [r7, #0]
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	220f      	movs	r2, #15
 8002bba:	601a      	str	r2, [r3, #0]
 8002bbc:	4b12      	ldr	r3, [pc, #72]	; (8002c08 <HAL_RCC_GetClockConfig+0x5c>)
 8002bbe:	689b      	ldr	r3, [r3, #8]
 8002bc0:	f003 0203 	and.w	r2, r3, #3
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	605a      	str	r2, [r3, #4]
 8002bc8:	4b0f      	ldr	r3, [pc, #60]	; (8002c08 <HAL_RCC_GetClockConfig+0x5c>)
 8002bca:	689b      	ldr	r3, [r3, #8]
 8002bcc:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	609a      	str	r2, [r3, #8]
 8002bd4:	4b0c      	ldr	r3, [pc, #48]	; (8002c08 <HAL_RCC_GetClockConfig+0x5c>)
 8002bd6:	689b      	ldr	r3, [r3, #8]
 8002bd8:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	60da      	str	r2, [r3, #12]
 8002be0:	4b09      	ldr	r3, [pc, #36]	; (8002c08 <HAL_RCC_GetClockConfig+0x5c>)
 8002be2:	689b      	ldr	r3, [r3, #8]
 8002be4:	08db      	lsrs	r3, r3, #3
 8002be6:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	611a      	str	r2, [r3, #16]
 8002bee:	4b07      	ldr	r3, [pc, #28]	; (8002c0c <HAL_RCC_GetClockConfig+0x60>)
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	f003 0207 	and.w	r2, r3, #7
 8002bf6:	683b      	ldr	r3, [r7, #0]
 8002bf8:	601a      	str	r2, [r3, #0]
 8002bfa:	bf00      	nop
 8002bfc:	370c      	adds	r7, #12
 8002bfe:	46bd      	mov	sp, r7
 8002c00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c04:	4770      	bx	lr
 8002c06:	bf00      	nop
 8002c08:	40023800 	.word	0x40023800
 8002c0c:	40023c00 	.word	0x40023c00

08002c10 <HAL_TIM_Base_Init>:
 8002c10:	b580      	push	{r7, lr}
 8002c12:	b082      	sub	sp, #8
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	6078      	str	r0, [r7, #4]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d101      	bne.n	8002c22 <HAL_TIM_Base_Init+0x12>
 8002c1e:	2301      	movs	r3, #1
 8002c20:	e041      	b.n	8002ca6 <HAL_TIM_Base_Init+0x96>
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002c28:	b2db      	uxtb	r3, r3
 8002c2a:	2b00      	cmp	r3, #0
 8002c2c:	d106      	bne.n	8002c3c <HAL_TIM_Base_Init+0x2c>
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	2200      	movs	r2, #0
 8002c32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c36:	6878      	ldr	r0, [r7, #4]
 8002c38:	f000 f839 	bl	8002cae <HAL_TIM_Base_MspInit>
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	2202      	movs	r2, #2
 8002c40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	681a      	ldr	r2, [r3, #0]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	3304      	adds	r3, #4
 8002c4c:	4619      	mov	r1, r3
 8002c4e:	4610      	mov	r0, r2
 8002c50:	f000 f9ca 	bl	8002fe8 <TIM_Base_SetConfig>
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	2201      	movs	r2, #1
 8002c58:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	2201      	movs	r2, #1
 8002c60:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	2201      	movs	r2, #1
 8002c68:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	2201      	movs	r2, #1
 8002c70:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	2201      	movs	r2, #1
 8002c78:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	2201      	movs	r2, #1
 8002c80:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	2201      	movs	r2, #1
 8002c88:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	2201      	movs	r2, #1
 8002c90:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	2201      	movs	r2, #1
 8002c98:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	2201      	movs	r2, #1
 8002ca0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ca4:	2300      	movs	r3, #0
 8002ca6:	4618      	mov	r0, r3
 8002ca8:	3708      	adds	r7, #8
 8002caa:	46bd      	mov	sp, r7
 8002cac:	bd80      	pop	{r7, pc}

08002cae <HAL_TIM_Base_MspInit>:
 8002cae:	b480      	push	{r7}
 8002cb0:	b083      	sub	sp, #12
 8002cb2:	af00      	add	r7, sp, #0
 8002cb4:	6078      	str	r0, [r7, #4]
 8002cb6:	bf00      	nop
 8002cb8:	370c      	adds	r7, #12
 8002cba:	46bd      	mov	sp, r7
 8002cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cc0:	4770      	bx	lr
	...

08002cc4 <HAL_TIM_Base_Start_IT>:
 8002cc4:	b480      	push	{r7}
 8002cc6:	b085      	sub	sp, #20
 8002cc8:	af00      	add	r7, sp, #0
 8002cca:	6078      	str	r0, [r7, #4]
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002cd2:	b2db      	uxtb	r3, r3
 8002cd4:	2b01      	cmp	r3, #1
 8002cd6:	d001      	beq.n	8002cdc <HAL_TIM_Base_Start_IT+0x18>
 8002cd8:	2301      	movs	r3, #1
 8002cda:	e044      	b.n	8002d66 <HAL_TIM_Base_Start_IT+0xa2>
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	2202      	movs	r2, #2
 8002ce0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	68da      	ldr	r2, [r3, #12]
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	f042 0201 	orr.w	r2, r2, #1
 8002cf2:	60da      	str	r2, [r3, #12]
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	4a1e      	ldr	r2, [pc, #120]	; (8002d74 <HAL_TIM_Base_Start_IT+0xb0>)
 8002cfa:	4293      	cmp	r3, r2
 8002cfc:	d018      	beq.n	8002d30 <HAL_TIM_Base_Start_IT+0x6c>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	681b      	ldr	r3, [r3, #0]
 8002d02:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002d06:	d013      	beq.n	8002d30 <HAL_TIM_Base_Start_IT+0x6c>
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	4a1a      	ldr	r2, [pc, #104]	; (8002d78 <HAL_TIM_Base_Start_IT+0xb4>)
 8002d0e:	4293      	cmp	r3, r2
 8002d10:	d00e      	beq.n	8002d30 <HAL_TIM_Base_Start_IT+0x6c>
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	4a19      	ldr	r2, [pc, #100]	; (8002d7c <HAL_TIM_Base_Start_IT+0xb8>)
 8002d18:	4293      	cmp	r3, r2
 8002d1a:	d009      	beq.n	8002d30 <HAL_TIM_Base_Start_IT+0x6c>
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	4a17      	ldr	r2, [pc, #92]	; (8002d80 <HAL_TIM_Base_Start_IT+0xbc>)
 8002d22:	4293      	cmp	r3, r2
 8002d24:	d004      	beq.n	8002d30 <HAL_TIM_Base_Start_IT+0x6c>
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	4a16      	ldr	r2, [pc, #88]	; (8002d84 <HAL_TIM_Base_Start_IT+0xc0>)
 8002d2c:	4293      	cmp	r3, r2
 8002d2e:	d111      	bne.n	8002d54 <HAL_TIM_Base_Start_IT+0x90>
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	689b      	ldr	r3, [r3, #8]
 8002d36:	f003 0307 	and.w	r3, r3, #7
 8002d3a:	60fb      	str	r3, [r7, #12]
 8002d3c:	68fb      	ldr	r3, [r7, #12]
 8002d3e:	2b06      	cmp	r3, #6
 8002d40:	d010      	beq.n	8002d64 <HAL_TIM_Base_Start_IT+0xa0>
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	681a      	ldr	r2, [r3, #0]
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	f042 0201 	orr.w	r2, r2, #1
 8002d50:	601a      	str	r2, [r3, #0]
 8002d52:	e007      	b.n	8002d64 <HAL_TIM_Base_Start_IT+0xa0>
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	681a      	ldr	r2, [r3, #0]
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	f042 0201 	orr.w	r2, r2, #1
 8002d62:	601a      	str	r2, [r3, #0]
 8002d64:	2300      	movs	r3, #0
 8002d66:	4618      	mov	r0, r3
 8002d68:	3714      	adds	r7, #20
 8002d6a:	46bd      	mov	sp, r7
 8002d6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d70:	4770      	bx	lr
 8002d72:	bf00      	nop
 8002d74:	40010000 	.word	0x40010000
 8002d78:	40000400 	.word	0x40000400
 8002d7c:	40000800 	.word	0x40000800
 8002d80:	40000c00 	.word	0x40000c00
 8002d84:	40014000 	.word	0x40014000

08002d88 <HAL_TIM_IRQHandler>:
 8002d88:	b580      	push	{r7, lr}
 8002d8a:	b082      	sub	sp, #8
 8002d8c:	af00      	add	r7, sp, #0
 8002d8e:	6078      	str	r0, [r7, #4]
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	691b      	ldr	r3, [r3, #16]
 8002d96:	f003 0302 	and.w	r3, r3, #2
 8002d9a:	2b02      	cmp	r3, #2
 8002d9c:	d122      	bne.n	8002de4 <HAL_TIM_IRQHandler+0x5c>
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	68db      	ldr	r3, [r3, #12]
 8002da4:	f003 0302 	and.w	r3, r3, #2
 8002da8:	2b02      	cmp	r3, #2
 8002daa:	d11b      	bne.n	8002de4 <HAL_TIM_IRQHandler+0x5c>
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	f06f 0202 	mvn.w	r2, #2
 8002db4:	611a      	str	r2, [r3, #16]
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	2201      	movs	r2, #1
 8002dba:	771a      	strb	r2, [r3, #28]
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	699b      	ldr	r3, [r3, #24]
 8002dc2:	f003 0303 	and.w	r3, r3, #3
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d003      	beq.n	8002dd2 <HAL_TIM_IRQHandler+0x4a>
 8002dca:	6878      	ldr	r0, [r7, #4]
 8002dcc:	f000 f8ee 	bl	8002fac <HAL_TIM_IC_CaptureCallback>
 8002dd0:	e005      	b.n	8002dde <HAL_TIM_IRQHandler+0x56>
 8002dd2:	6878      	ldr	r0, [r7, #4]
 8002dd4:	f000 f8e0 	bl	8002f98 <HAL_TIM_OC_DelayElapsedCallback>
 8002dd8:	6878      	ldr	r0, [r7, #4]
 8002dda:	f000 f8f1 	bl	8002fc0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	2200      	movs	r2, #0
 8002de2:	771a      	strb	r2, [r3, #28]
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	691b      	ldr	r3, [r3, #16]
 8002dea:	f003 0304 	and.w	r3, r3, #4
 8002dee:	2b04      	cmp	r3, #4
 8002df0:	d122      	bne.n	8002e38 <HAL_TIM_IRQHandler+0xb0>
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	68db      	ldr	r3, [r3, #12]
 8002df8:	f003 0304 	and.w	r3, r3, #4
 8002dfc:	2b04      	cmp	r3, #4
 8002dfe:	d11b      	bne.n	8002e38 <HAL_TIM_IRQHandler+0xb0>
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	f06f 0204 	mvn.w	r2, #4
 8002e08:	611a      	str	r2, [r3, #16]
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	2202      	movs	r2, #2
 8002e0e:	771a      	strb	r2, [r3, #28]
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	699b      	ldr	r3, [r3, #24]
 8002e16:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d003      	beq.n	8002e26 <HAL_TIM_IRQHandler+0x9e>
 8002e1e:	6878      	ldr	r0, [r7, #4]
 8002e20:	f000 f8c4 	bl	8002fac <HAL_TIM_IC_CaptureCallback>
 8002e24:	e005      	b.n	8002e32 <HAL_TIM_IRQHandler+0xaa>
 8002e26:	6878      	ldr	r0, [r7, #4]
 8002e28:	f000 f8b6 	bl	8002f98 <HAL_TIM_OC_DelayElapsedCallback>
 8002e2c:	6878      	ldr	r0, [r7, #4]
 8002e2e:	f000 f8c7 	bl	8002fc0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	2200      	movs	r2, #0
 8002e36:	771a      	strb	r2, [r3, #28]
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	691b      	ldr	r3, [r3, #16]
 8002e3e:	f003 0308 	and.w	r3, r3, #8
 8002e42:	2b08      	cmp	r3, #8
 8002e44:	d122      	bne.n	8002e8c <HAL_TIM_IRQHandler+0x104>
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	68db      	ldr	r3, [r3, #12]
 8002e4c:	f003 0308 	and.w	r3, r3, #8
 8002e50:	2b08      	cmp	r3, #8
 8002e52:	d11b      	bne.n	8002e8c <HAL_TIM_IRQHandler+0x104>
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	f06f 0208 	mvn.w	r2, #8
 8002e5c:	611a      	str	r2, [r3, #16]
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	2204      	movs	r2, #4
 8002e62:	771a      	strb	r2, [r3, #28]
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	69db      	ldr	r3, [r3, #28]
 8002e6a:	f003 0303 	and.w	r3, r3, #3
 8002e6e:	2b00      	cmp	r3, #0
 8002e70:	d003      	beq.n	8002e7a <HAL_TIM_IRQHandler+0xf2>
 8002e72:	6878      	ldr	r0, [r7, #4]
 8002e74:	f000 f89a 	bl	8002fac <HAL_TIM_IC_CaptureCallback>
 8002e78:	e005      	b.n	8002e86 <HAL_TIM_IRQHandler+0xfe>
 8002e7a:	6878      	ldr	r0, [r7, #4]
 8002e7c:	f000 f88c 	bl	8002f98 <HAL_TIM_OC_DelayElapsedCallback>
 8002e80:	6878      	ldr	r0, [r7, #4]
 8002e82:	f000 f89d 	bl	8002fc0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	2200      	movs	r2, #0
 8002e8a:	771a      	strb	r2, [r3, #28]
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	691b      	ldr	r3, [r3, #16]
 8002e92:	f003 0310 	and.w	r3, r3, #16
 8002e96:	2b10      	cmp	r3, #16
 8002e98:	d122      	bne.n	8002ee0 <HAL_TIM_IRQHandler+0x158>
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	68db      	ldr	r3, [r3, #12]
 8002ea0:	f003 0310 	and.w	r3, r3, #16
 8002ea4:	2b10      	cmp	r3, #16
 8002ea6:	d11b      	bne.n	8002ee0 <HAL_TIM_IRQHandler+0x158>
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	f06f 0210 	mvn.w	r2, #16
 8002eb0:	611a      	str	r2, [r3, #16]
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	2208      	movs	r2, #8
 8002eb6:	771a      	strb	r2, [r3, #28]
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	681b      	ldr	r3, [r3, #0]
 8002ebc:	69db      	ldr	r3, [r3, #28]
 8002ebe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	d003      	beq.n	8002ece <HAL_TIM_IRQHandler+0x146>
 8002ec6:	6878      	ldr	r0, [r7, #4]
 8002ec8:	f000 f870 	bl	8002fac <HAL_TIM_IC_CaptureCallback>
 8002ecc:	e005      	b.n	8002eda <HAL_TIM_IRQHandler+0x152>
 8002ece:	6878      	ldr	r0, [r7, #4]
 8002ed0:	f000 f862 	bl	8002f98 <HAL_TIM_OC_DelayElapsedCallback>
 8002ed4:	6878      	ldr	r0, [r7, #4]
 8002ed6:	f000 f873 	bl	8002fc0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	2200      	movs	r2, #0
 8002ede:	771a      	strb	r2, [r3, #28]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	691b      	ldr	r3, [r3, #16]
 8002ee6:	f003 0301 	and.w	r3, r3, #1
 8002eea:	2b01      	cmp	r3, #1
 8002eec:	d10e      	bne.n	8002f0c <HAL_TIM_IRQHandler+0x184>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	68db      	ldr	r3, [r3, #12]
 8002ef4:	f003 0301 	and.w	r3, r3, #1
 8002ef8:	2b01      	cmp	r3, #1
 8002efa:	d107      	bne.n	8002f0c <HAL_TIM_IRQHandler+0x184>
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	f06f 0201 	mvn.w	r2, #1
 8002f04:	611a      	str	r2, [r3, #16]
 8002f06:	6878      	ldr	r0, [r7, #4]
 8002f08:	f7fe fc60 	bl	80017cc <HAL_TIM_PeriodElapsedCallback>
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	681b      	ldr	r3, [r3, #0]
 8002f10:	691b      	ldr	r3, [r3, #16]
 8002f12:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002f16:	2b80      	cmp	r3, #128	; 0x80
 8002f18:	d10e      	bne.n	8002f38 <HAL_TIM_IRQHandler+0x1b0>
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	68db      	ldr	r3, [r3, #12]
 8002f20:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002f24:	2b80      	cmp	r3, #128	; 0x80
 8002f26:	d107      	bne.n	8002f38 <HAL_TIM_IRQHandler+0x1b0>
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002f30:	611a      	str	r2, [r3, #16]
 8002f32:	6878      	ldr	r0, [r7, #4]
 8002f34:	f000 f8e2 	bl	80030fc <HAL_TIMEx_BreakCallback>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	691b      	ldr	r3, [r3, #16]
 8002f3e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002f42:	2b40      	cmp	r3, #64	; 0x40
 8002f44:	d10e      	bne.n	8002f64 <HAL_TIM_IRQHandler+0x1dc>
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	681b      	ldr	r3, [r3, #0]
 8002f4a:	68db      	ldr	r3, [r3, #12]
 8002f4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002f50:	2b40      	cmp	r3, #64	; 0x40
 8002f52:	d107      	bne.n	8002f64 <HAL_TIM_IRQHandler+0x1dc>
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002f5c:	611a      	str	r2, [r3, #16]
 8002f5e:	6878      	ldr	r0, [r7, #4]
 8002f60:	f000 f838 	bl	8002fd4 <HAL_TIM_TriggerCallback>
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	691b      	ldr	r3, [r3, #16]
 8002f6a:	f003 0320 	and.w	r3, r3, #32
 8002f6e:	2b20      	cmp	r3, #32
 8002f70:	d10e      	bne.n	8002f90 <HAL_TIM_IRQHandler+0x208>
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	68db      	ldr	r3, [r3, #12]
 8002f78:	f003 0320 	and.w	r3, r3, #32
 8002f7c:	2b20      	cmp	r3, #32
 8002f7e:	d107      	bne.n	8002f90 <HAL_TIM_IRQHandler+0x208>
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	f06f 0220 	mvn.w	r2, #32
 8002f88:	611a      	str	r2, [r3, #16]
 8002f8a:	6878      	ldr	r0, [r7, #4]
 8002f8c:	f000 f8ac 	bl	80030e8 <HAL_TIMEx_CommutCallback>
 8002f90:	bf00      	nop
 8002f92:	3708      	adds	r7, #8
 8002f94:	46bd      	mov	sp, r7
 8002f96:	bd80      	pop	{r7, pc}

08002f98 <HAL_TIM_OC_DelayElapsedCallback>:
 8002f98:	b480      	push	{r7}
 8002f9a:	b083      	sub	sp, #12
 8002f9c:	af00      	add	r7, sp, #0
 8002f9e:	6078      	str	r0, [r7, #4]
 8002fa0:	bf00      	nop
 8002fa2:	370c      	adds	r7, #12
 8002fa4:	46bd      	mov	sp, r7
 8002fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002faa:	4770      	bx	lr

08002fac <HAL_TIM_IC_CaptureCallback>:
 8002fac:	b480      	push	{r7}
 8002fae:	b083      	sub	sp, #12
 8002fb0:	af00      	add	r7, sp, #0
 8002fb2:	6078      	str	r0, [r7, #4]
 8002fb4:	bf00      	nop
 8002fb6:	370c      	adds	r7, #12
 8002fb8:	46bd      	mov	sp, r7
 8002fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fbe:	4770      	bx	lr

08002fc0 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002fc0:	b480      	push	{r7}
 8002fc2:	b083      	sub	sp, #12
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	6078      	str	r0, [r7, #4]
 8002fc8:	bf00      	nop
 8002fca:	370c      	adds	r7, #12
 8002fcc:	46bd      	mov	sp, r7
 8002fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fd2:	4770      	bx	lr

08002fd4 <HAL_TIM_TriggerCallback>:
 8002fd4:	b480      	push	{r7}
 8002fd6:	b083      	sub	sp, #12
 8002fd8:	af00      	add	r7, sp, #0
 8002fda:	6078      	str	r0, [r7, #4]
 8002fdc:	bf00      	nop
 8002fde:	370c      	adds	r7, #12
 8002fe0:	46bd      	mov	sp, r7
 8002fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fe6:	4770      	bx	lr

08002fe8 <TIM_Base_SetConfig>:
 8002fe8:	b480      	push	{r7}
 8002fea:	b085      	sub	sp, #20
 8002fec:	af00      	add	r7, sp, #0
 8002fee:	6078      	str	r0, [r7, #4]
 8002ff0:	6039      	str	r1, [r7, #0]
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	681b      	ldr	r3, [r3, #0]
 8002ff6:	60fb      	str	r3, [r7, #12]
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	4a34      	ldr	r2, [pc, #208]	; (80030cc <TIM_Base_SetConfig+0xe4>)
 8002ffc:	4293      	cmp	r3, r2
 8002ffe:	d00f      	beq.n	8003020 <TIM_Base_SetConfig+0x38>
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003006:	d00b      	beq.n	8003020 <TIM_Base_SetConfig+0x38>
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	4a31      	ldr	r2, [pc, #196]	; (80030d0 <TIM_Base_SetConfig+0xe8>)
 800300c:	4293      	cmp	r3, r2
 800300e:	d007      	beq.n	8003020 <TIM_Base_SetConfig+0x38>
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	4a30      	ldr	r2, [pc, #192]	; (80030d4 <TIM_Base_SetConfig+0xec>)
 8003014:	4293      	cmp	r3, r2
 8003016:	d003      	beq.n	8003020 <TIM_Base_SetConfig+0x38>
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	4a2f      	ldr	r2, [pc, #188]	; (80030d8 <TIM_Base_SetConfig+0xf0>)
 800301c:	4293      	cmp	r3, r2
 800301e:	d108      	bne.n	8003032 <TIM_Base_SetConfig+0x4a>
 8003020:	68fb      	ldr	r3, [r7, #12]
 8003022:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003026:	60fb      	str	r3, [r7, #12]
 8003028:	683b      	ldr	r3, [r7, #0]
 800302a:	685b      	ldr	r3, [r3, #4]
 800302c:	68fa      	ldr	r2, [r7, #12]
 800302e:	4313      	orrs	r3, r2
 8003030:	60fb      	str	r3, [r7, #12]
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	4a25      	ldr	r2, [pc, #148]	; (80030cc <TIM_Base_SetConfig+0xe4>)
 8003036:	4293      	cmp	r3, r2
 8003038:	d01b      	beq.n	8003072 <TIM_Base_SetConfig+0x8a>
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003040:	d017      	beq.n	8003072 <TIM_Base_SetConfig+0x8a>
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	4a22      	ldr	r2, [pc, #136]	; (80030d0 <TIM_Base_SetConfig+0xe8>)
 8003046:	4293      	cmp	r3, r2
 8003048:	d013      	beq.n	8003072 <TIM_Base_SetConfig+0x8a>
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	4a21      	ldr	r2, [pc, #132]	; (80030d4 <TIM_Base_SetConfig+0xec>)
 800304e:	4293      	cmp	r3, r2
 8003050:	d00f      	beq.n	8003072 <TIM_Base_SetConfig+0x8a>
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	4a20      	ldr	r2, [pc, #128]	; (80030d8 <TIM_Base_SetConfig+0xf0>)
 8003056:	4293      	cmp	r3, r2
 8003058:	d00b      	beq.n	8003072 <TIM_Base_SetConfig+0x8a>
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	4a1f      	ldr	r2, [pc, #124]	; (80030dc <TIM_Base_SetConfig+0xf4>)
 800305e:	4293      	cmp	r3, r2
 8003060:	d007      	beq.n	8003072 <TIM_Base_SetConfig+0x8a>
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	4a1e      	ldr	r2, [pc, #120]	; (80030e0 <TIM_Base_SetConfig+0xf8>)
 8003066:	4293      	cmp	r3, r2
 8003068:	d003      	beq.n	8003072 <TIM_Base_SetConfig+0x8a>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	4a1d      	ldr	r2, [pc, #116]	; (80030e4 <TIM_Base_SetConfig+0xfc>)
 800306e:	4293      	cmp	r3, r2
 8003070:	d108      	bne.n	8003084 <TIM_Base_SetConfig+0x9c>
 8003072:	68fb      	ldr	r3, [r7, #12]
 8003074:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003078:	60fb      	str	r3, [r7, #12]
 800307a:	683b      	ldr	r3, [r7, #0]
 800307c:	68db      	ldr	r3, [r3, #12]
 800307e:	68fa      	ldr	r2, [r7, #12]
 8003080:	4313      	orrs	r3, r2
 8003082:	60fb      	str	r3, [r7, #12]
 8003084:	68fb      	ldr	r3, [r7, #12]
 8003086:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800308a:	683b      	ldr	r3, [r7, #0]
 800308c:	695b      	ldr	r3, [r3, #20]
 800308e:	4313      	orrs	r3, r2
 8003090:	60fb      	str	r3, [r7, #12]
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	68fa      	ldr	r2, [r7, #12]
 8003096:	601a      	str	r2, [r3, #0]
 8003098:	683b      	ldr	r3, [r7, #0]
 800309a:	689a      	ldr	r2, [r3, #8]
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	62da      	str	r2, [r3, #44]	; 0x2c
 80030a0:	683b      	ldr	r3, [r7, #0]
 80030a2:	681a      	ldr	r2, [r3, #0]
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	629a      	str	r2, [r3, #40]	; 0x28
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	4a08      	ldr	r2, [pc, #32]	; (80030cc <TIM_Base_SetConfig+0xe4>)
 80030ac:	4293      	cmp	r3, r2
 80030ae:	d103      	bne.n	80030b8 <TIM_Base_SetConfig+0xd0>
 80030b0:	683b      	ldr	r3, [r7, #0]
 80030b2:	691a      	ldr	r2, [r3, #16]
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	631a      	str	r2, [r3, #48]	; 0x30
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	2201      	movs	r2, #1
 80030bc:	615a      	str	r2, [r3, #20]
 80030be:	bf00      	nop
 80030c0:	3714      	adds	r7, #20
 80030c2:	46bd      	mov	sp, r7
 80030c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c8:	4770      	bx	lr
 80030ca:	bf00      	nop
 80030cc:	40010000 	.word	0x40010000
 80030d0:	40000400 	.word	0x40000400
 80030d4:	40000800 	.word	0x40000800
 80030d8:	40000c00 	.word	0x40000c00
 80030dc:	40014000 	.word	0x40014000
 80030e0:	40014400 	.word	0x40014400
 80030e4:	40014800 	.word	0x40014800

080030e8 <HAL_TIMEx_CommutCallback>:
 80030e8:	b480      	push	{r7}
 80030ea:	b083      	sub	sp, #12
 80030ec:	af00      	add	r7, sp, #0
 80030ee:	6078      	str	r0, [r7, #4]
 80030f0:	bf00      	nop
 80030f2:	370c      	adds	r7, #12
 80030f4:	46bd      	mov	sp, r7
 80030f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030fa:	4770      	bx	lr

080030fc <HAL_TIMEx_BreakCallback>:
 80030fc:	b480      	push	{r7}
 80030fe:	b083      	sub	sp, #12
 8003100:	af00      	add	r7, sp, #0
 8003102:	6078      	str	r0, [r7, #4]
 8003104:	bf00      	nop
 8003106:	370c      	adds	r7, #12
 8003108:	46bd      	mov	sp, r7
 800310a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800310e:	4770      	bx	lr

08003110 <HAL_UART_Init>:
 8003110:	b580      	push	{r7, lr}
 8003112:	b082      	sub	sp, #8
 8003114:	af00      	add	r7, sp, #0
 8003116:	6078      	str	r0, [r7, #4]
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	2b00      	cmp	r3, #0
 800311c:	d101      	bne.n	8003122 <HAL_UART_Init+0x12>
 800311e:	2301      	movs	r3, #1
 8003120:	e03f      	b.n	80031a2 <HAL_UART_Init+0x92>
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003128:	b2db      	uxtb	r3, r3
 800312a:	2b00      	cmp	r3, #0
 800312c:	d106      	bne.n	800313c <HAL_UART_Init+0x2c>
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	2200      	movs	r2, #0
 8003132:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003136:	6878      	ldr	r0, [r7, #4]
 8003138:	f7fe fb8c 	bl	8001854 <HAL_UART_MspInit>
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	2224      	movs	r2, #36	; 0x24
 8003140:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	68da      	ldr	r2, [r3, #12]
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003152:	60da      	str	r2, [r3, #12]
 8003154:	6878      	ldr	r0, [r7, #4]
 8003156:	f000 fddf 	bl	8003d18 <UART_SetConfig>
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	691a      	ldr	r2, [r3, #16]
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003168:	611a      	str	r2, [r3, #16]
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	695a      	ldr	r2, [r3, #20]
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	681b      	ldr	r3, [r3, #0]
 8003174:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003178:	615a      	str	r2, [r3, #20]
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	68da      	ldr	r2, [r3, #12]
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003188:	60da      	str	r2, [r3, #12]
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	2200      	movs	r2, #0
 800318e:	641a      	str	r2, [r3, #64]	; 0x40
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	2220      	movs	r2, #32
 8003194:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	2220      	movs	r2, #32
 800319c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80031a0:	2300      	movs	r3, #0
 80031a2:	4618      	mov	r0, r3
 80031a4:	3708      	adds	r7, #8
 80031a6:	46bd      	mov	sp, r7
 80031a8:	bd80      	pop	{r7, pc}

080031aa <HAL_UART_Transmit>:
 80031aa:	b580      	push	{r7, lr}
 80031ac:	b08a      	sub	sp, #40	; 0x28
 80031ae:	af02      	add	r7, sp, #8
 80031b0:	60f8      	str	r0, [r7, #12]
 80031b2:	60b9      	str	r1, [r7, #8]
 80031b4:	603b      	str	r3, [r7, #0]
 80031b6:	4613      	mov	r3, r2
 80031b8:	80fb      	strh	r3, [r7, #6]
 80031ba:	2300      	movs	r3, #0
 80031bc:	617b      	str	r3, [r7, #20]
 80031be:	68fb      	ldr	r3, [r7, #12]
 80031c0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80031c4:	b2db      	uxtb	r3, r3
 80031c6:	2b20      	cmp	r3, #32
 80031c8:	d17c      	bne.n	80032c4 <HAL_UART_Transmit+0x11a>
 80031ca:	68bb      	ldr	r3, [r7, #8]
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	d002      	beq.n	80031d6 <HAL_UART_Transmit+0x2c>
 80031d0:	88fb      	ldrh	r3, [r7, #6]
 80031d2:	2b00      	cmp	r3, #0
 80031d4:	d101      	bne.n	80031da <HAL_UART_Transmit+0x30>
 80031d6:	2301      	movs	r3, #1
 80031d8:	e075      	b.n	80032c6 <HAL_UART_Transmit+0x11c>
 80031da:	68fb      	ldr	r3, [r7, #12]
 80031dc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80031e0:	2b01      	cmp	r3, #1
 80031e2:	d101      	bne.n	80031e8 <HAL_UART_Transmit+0x3e>
 80031e4:	2302      	movs	r3, #2
 80031e6:	e06e      	b.n	80032c6 <HAL_UART_Transmit+0x11c>
 80031e8:	68fb      	ldr	r3, [r7, #12]
 80031ea:	2201      	movs	r2, #1
 80031ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031f0:	68fb      	ldr	r3, [r7, #12]
 80031f2:	2200      	movs	r2, #0
 80031f4:	641a      	str	r2, [r3, #64]	; 0x40
 80031f6:	68fb      	ldr	r3, [r7, #12]
 80031f8:	2221      	movs	r2, #33	; 0x21
 80031fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031fe:	f7fe fd05 	bl	8001c0c <HAL_GetTick>
 8003202:	6178      	str	r0, [r7, #20]
 8003204:	68fb      	ldr	r3, [r7, #12]
 8003206:	88fa      	ldrh	r2, [r7, #6]
 8003208:	849a      	strh	r2, [r3, #36]	; 0x24
 800320a:	68fb      	ldr	r3, [r7, #12]
 800320c:	88fa      	ldrh	r2, [r7, #6]
 800320e:	84da      	strh	r2, [r3, #38]	; 0x26
 8003210:	68fb      	ldr	r3, [r7, #12]
 8003212:	689b      	ldr	r3, [r3, #8]
 8003214:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003218:	d108      	bne.n	800322c <HAL_UART_Transmit+0x82>
 800321a:	68fb      	ldr	r3, [r7, #12]
 800321c:	691b      	ldr	r3, [r3, #16]
 800321e:	2b00      	cmp	r3, #0
 8003220:	d104      	bne.n	800322c <HAL_UART_Transmit+0x82>
 8003222:	2300      	movs	r3, #0
 8003224:	61fb      	str	r3, [r7, #28]
 8003226:	68bb      	ldr	r3, [r7, #8]
 8003228:	61bb      	str	r3, [r7, #24]
 800322a:	e003      	b.n	8003234 <HAL_UART_Transmit+0x8a>
 800322c:	68bb      	ldr	r3, [r7, #8]
 800322e:	61fb      	str	r3, [r7, #28]
 8003230:	2300      	movs	r3, #0
 8003232:	61bb      	str	r3, [r7, #24]
 8003234:	68fb      	ldr	r3, [r7, #12]
 8003236:	2200      	movs	r2, #0
 8003238:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800323c:	e02a      	b.n	8003294 <HAL_UART_Transmit+0xea>
 800323e:	683b      	ldr	r3, [r7, #0]
 8003240:	9300      	str	r3, [sp, #0]
 8003242:	697b      	ldr	r3, [r7, #20]
 8003244:	2200      	movs	r2, #0
 8003246:	2180      	movs	r1, #128	; 0x80
 8003248:	68f8      	ldr	r0, [r7, #12]
 800324a:	f000 fb1f 	bl	800388c <UART_WaitOnFlagUntilTimeout>
 800324e:	4603      	mov	r3, r0
 8003250:	2b00      	cmp	r3, #0
 8003252:	d001      	beq.n	8003258 <HAL_UART_Transmit+0xae>
 8003254:	2303      	movs	r3, #3
 8003256:	e036      	b.n	80032c6 <HAL_UART_Transmit+0x11c>
 8003258:	69fb      	ldr	r3, [r7, #28]
 800325a:	2b00      	cmp	r3, #0
 800325c:	d10b      	bne.n	8003276 <HAL_UART_Transmit+0xcc>
 800325e:	69bb      	ldr	r3, [r7, #24]
 8003260:	881b      	ldrh	r3, [r3, #0]
 8003262:	461a      	mov	r2, r3
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800326c:	605a      	str	r2, [r3, #4]
 800326e:	69bb      	ldr	r3, [r7, #24]
 8003270:	3302      	adds	r3, #2
 8003272:	61bb      	str	r3, [r7, #24]
 8003274:	e007      	b.n	8003286 <HAL_UART_Transmit+0xdc>
 8003276:	69fb      	ldr	r3, [r7, #28]
 8003278:	781a      	ldrb	r2, [r3, #0]
 800327a:	68fb      	ldr	r3, [r7, #12]
 800327c:	681b      	ldr	r3, [r3, #0]
 800327e:	605a      	str	r2, [r3, #4]
 8003280:	69fb      	ldr	r3, [r7, #28]
 8003282:	3301      	adds	r3, #1
 8003284:	61fb      	str	r3, [r7, #28]
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800328a:	b29b      	uxth	r3, r3
 800328c:	3b01      	subs	r3, #1
 800328e:	b29a      	uxth	r2, r3
 8003290:	68fb      	ldr	r3, [r7, #12]
 8003292:	84da      	strh	r2, [r3, #38]	; 0x26
 8003294:	68fb      	ldr	r3, [r7, #12]
 8003296:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003298:	b29b      	uxth	r3, r3
 800329a:	2b00      	cmp	r3, #0
 800329c:	d1cf      	bne.n	800323e <HAL_UART_Transmit+0x94>
 800329e:	683b      	ldr	r3, [r7, #0]
 80032a0:	9300      	str	r3, [sp, #0]
 80032a2:	697b      	ldr	r3, [r7, #20]
 80032a4:	2200      	movs	r2, #0
 80032a6:	2140      	movs	r1, #64	; 0x40
 80032a8:	68f8      	ldr	r0, [r7, #12]
 80032aa:	f000 faef 	bl	800388c <UART_WaitOnFlagUntilTimeout>
 80032ae:	4603      	mov	r3, r0
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	d001      	beq.n	80032b8 <HAL_UART_Transmit+0x10e>
 80032b4:	2303      	movs	r3, #3
 80032b6:	e006      	b.n	80032c6 <HAL_UART_Transmit+0x11c>
 80032b8:	68fb      	ldr	r3, [r7, #12]
 80032ba:	2220      	movs	r2, #32
 80032bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80032c0:	2300      	movs	r3, #0
 80032c2:	e000      	b.n	80032c6 <HAL_UART_Transmit+0x11c>
 80032c4:	2302      	movs	r3, #2
 80032c6:	4618      	mov	r0, r3
 80032c8:	3720      	adds	r7, #32
 80032ca:	46bd      	mov	sp, r7
 80032cc:	bd80      	pop	{r7, pc}

080032ce <HAL_UART_Receive_IT>:
 80032ce:	b580      	push	{r7, lr}
 80032d0:	b084      	sub	sp, #16
 80032d2:	af00      	add	r7, sp, #0
 80032d4:	60f8      	str	r0, [r7, #12]
 80032d6:	60b9      	str	r1, [r7, #8]
 80032d8:	4613      	mov	r3, r2
 80032da:	80fb      	strh	r3, [r7, #6]
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80032e2:	b2db      	uxtb	r3, r3
 80032e4:	2b20      	cmp	r3, #32
 80032e6:	d11d      	bne.n	8003324 <HAL_UART_Receive_IT+0x56>
 80032e8:	68bb      	ldr	r3, [r7, #8]
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d002      	beq.n	80032f4 <HAL_UART_Receive_IT+0x26>
 80032ee:	88fb      	ldrh	r3, [r7, #6]
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	d101      	bne.n	80032f8 <HAL_UART_Receive_IT+0x2a>
 80032f4:	2301      	movs	r3, #1
 80032f6:	e016      	b.n	8003326 <HAL_UART_Receive_IT+0x58>
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80032fe:	2b01      	cmp	r3, #1
 8003300:	d101      	bne.n	8003306 <HAL_UART_Receive_IT+0x38>
 8003302:	2302      	movs	r3, #2
 8003304:	e00f      	b.n	8003326 <HAL_UART_Receive_IT+0x58>
 8003306:	68fb      	ldr	r3, [r7, #12]
 8003308:	2201      	movs	r2, #1
 800330a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800330e:	68fb      	ldr	r3, [r7, #12]
 8003310:	2200      	movs	r2, #0
 8003312:	631a      	str	r2, [r3, #48]	; 0x30
 8003314:	88fb      	ldrh	r3, [r7, #6]
 8003316:	461a      	mov	r2, r3
 8003318:	68b9      	ldr	r1, [r7, #8]
 800331a:	68f8      	ldr	r0, [r7, #12]
 800331c:	f000 fb24 	bl	8003968 <UART_Start_Receive_IT>
 8003320:	4603      	mov	r3, r0
 8003322:	e000      	b.n	8003326 <HAL_UART_Receive_IT+0x58>
 8003324:	2302      	movs	r3, #2
 8003326:	4618      	mov	r0, r3
 8003328:	3710      	adds	r7, #16
 800332a:	46bd      	mov	sp, r7
 800332c:	bd80      	pop	{r7, pc}
	...

08003330 <HAL_UART_IRQHandler>:
 8003330:	b580      	push	{r7, lr}
 8003332:	b0ba      	sub	sp, #232	; 0xe8
 8003334:	af00      	add	r7, sp, #0
 8003336:	6078      	str	r0, [r7, #4]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	68db      	ldr	r3, [r3, #12]
 8003348:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	695b      	ldr	r3, [r3, #20]
 8003352:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8003356:	2300      	movs	r3, #0
 8003358:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800335c:	2300      	movs	r3, #0
 800335e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8003362:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003366:	f003 030f 	and.w	r3, r3, #15
 800336a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800336e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8003372:	2b00      	cmp	r3, #0
 8003374:	d10f      	bne.n	8003396 <HAL_UART_IRQHandler+0x66>
 8003376:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800337a:	f003 0320 	and.w	r3, r3, #32
 800337e:	2b00      	cmp	r3, #0
 8003380:	d009      	beq.n	8003396 <HAL_UART_IRQHandler+0x66>
 8003382:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003386:	f003 0320 	and.w	r3, r3, #32
 800338a:	2b00      	cmp	r3, #0
 800338c:	d003      	beq.n	8003396 <HAL_UART_IRQHandler+0x66>
 800338e:	6878      	ldr	r0, [r7, #4]
 8003390:	f000 fc07 	bl	8003ba2 <UART_Receive_IT>
 8003394:	e256      	b.n	8003844 <HAL_UART_IRQHandler+0x514>
 8003396:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800339a:	2b00      	cmp	r3, #0
 800339c:	f000 80de 	beq.w	800355c <HAL_UART_IRQHandler+0x22c>
 80033a0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80033a4:	f003 0301 	and.w	r3, r3, #1
 80033a8:	2b00      	cmp	r3, #0
 80033aa:	d106      	bne.n	80033ba <HAL_UART_IRQHandler+0x8a>
 80033ac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80033b0:	f403 7390 	and.w	r3, r3, #288	; 0x120
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	f000 80d1 	beq.w	800355c <HAL_UART_IRQHandler+0x22c>
 80033ba:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80033be:	f003 0301 	and.w	r3, r3, #1
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d00b      	beq.n	80033de <HAL_UART_IRQHandler+0xae>
 80033c6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80033ca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	d005      	beq.n	80033de <HAL_UART_IRQHandler+0xae>
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033d6:	f043 0201 	orr.w	r2, r3, #1
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	641a      	str	r2, [r3, #64]	; 0x40
 80033de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80033e2:	f003 0304 	and.w	r3, r3, #4
 80033e6:	2b00      	cmp	r3, #0
 80033e8:	d00b      	beq.n	8003402 <HAL_UART_IRQHandler+0xd2>
 80033ea:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80033ee:	f003 0301 	and.w	r3, r3, #1
 80033f2:	2b00      	cmp	r3, #0
 80033f4:	d005      	beq.n	8003402 <HAL_UART_IRQHandler+0xd2>
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033fa:	f043 0202 	orr.w	r2, r3, #2
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	641a      	str	r2, [r3, #64]	; 0x40
 8003402:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003406:	f003 0302 	and.w	r3, r3, #2
 800340a:	2b00      	cmp	r3, #0
 800340c:	d00b      	beq.n	8003426 <HAL_UART_IRQHandler+0xf6>
 800340e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003412:	f003 0301 	and.w	r3, r3, #1
 8003416:	2b00      	cmp	r3, #0
 8003418:	d005      	beq.n	8003426 <HAL_UART_IRQHandler+0xf6>
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800341e:	f043 0204 	orr.w	r2, r3, #4
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	641a      	str	r2, [r3, #64]	; 0x40
 8003426:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800342a:	f003 0308 	and.w	r3, r3, #8
 800342e:	2b00      	cmp	r3, #0
 8003430:	d011      	beq.n	8003456 <HAL_UART_IRQHandler+0x126>
 8003432:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003436:	f003 0320 	and.w	r3, r3, #32
 800343a:	2b00      	cmp	r3, #0
 800343c:	d105      	bne.n	800344a <HAL_UART_IRQHandler+0x11a>
 800343e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003442:	f003 0301 	and.w	r3, r3, #1
 8003446:	2b00      	cmp	r3, #0
 8003448:	d005      	beq.n	8003456 <HAL_UART_IRQHandler+0x126>
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800344e:	f043 0208 	orr.w	r2, r3, #8
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	641a      	str	r2, [r3, #64]	; 0x40
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800345a:	2b00      	cmp	r3, #0
 800345c:	f000 81ed 	beq.w	800383a <HAL_UART_IRQHandler+0x50a>
 8003460:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003464:	f003 0320 	and.w	r3, r3, #32
 8003468:	2b00      	cmp	r3, #0
 800346a:	d008      	beq.n	800347e <HAL_UART_IRQHandler+0x14e>
 800346c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003470:	f003 0320 	and.w	r3, r3, #32
 8003474:	2b00      	cmp	r3, #0
 8003476:	d002      	beq.n	800347e <HAL_UART_IRQHandler+0x14e>
 8003478:	6878      	ldr	r0, [r7, #4]
 800347a:	f000 fb92 	bl	8003ba2 <UART_Receive_IT>
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	695b      	ldr	r3, [r3, #20]
 8003484:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003488:	2b40      	cmp	r3, #64	; 0x40
 800348a:	bf0c      	ite	eq
 800348c:	2301      	moveq	r3, #1
 800348e:	2300      	movne	r3, #0
 8003490:	b2db      	uxtb	r3, r3
 8003492:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800349a:	f003 0308 	and.w	r3, r3, #8
 800349e:	2b00      	cmp	r3, #0
 80034a0:	d103      	bne.n	80034aa <HAL_UART_IRQHandler+0x17a>
 80034a2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	d04f      	beq.n	800354a <HAL_UART_IRQHandler+0x21a>
 80034aa:	6878      	ldr	r0, [r7, #4]
 80034ac:	f000 fa9a 	bl	80039e4 <UART_EndRxTransfer>
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	681b      	ldr	r3, [r3, #0]
 80034b4:	695b      	ldr	r3, [r3, #20]
 80034b6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80034ba:	2b40      	cmp	r3, #64	; 0x40
 80034bc:	d141      	bne.n	8003542 <HAL_UART_IRQHandler+0x212>
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	3314      	adds	r3, #20
 80034c4:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80034c8:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80034cc:	e853 3f00 	ldrex	r3, [r3]
 80034d0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80034d4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80034d8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80034dc:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	3314      	adds	r3, #20
 80034e6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80034ea:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80034ee:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80034f2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80034f6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80034fa:	e841 2300 	strex	r3, r2, [r1]
 80034fe:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8003502:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8003506:	2b00      	cmp	r3, #0
 8003508:	d1d9      	bne.n	80034be <HAL_UART_IRQHandler+0x18e>
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800350e:	2b00      	cmp	r3, #0
 8003510:	d013      	beq.n	800353a <HAL_UART_IRQHandler+0x20a>
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003516:	4a7d      	ldr	r2, [pc, #500]	; (800370c <HAL_UART_IRQHandler+0x3dc>)
 8003518:	651a      	str	r2, [r3, #80]	; 0x50
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800351e:	4618      	mov	r0, r3
 8003520:	f7fe fcd2 	bl	8001ec8 <HAL_DMA_Abort_IT>
 8003524:	4603      	mov	r3, r0
 8003526:	2b00      	cmp	r3, #0
 8003528:	d016      	beq.n	8003558 <HAL_UART_IRQHandler+0x228>
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800352e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003530:	687a      	ldr	r2, [r7, #4]
 8003532:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003534:	4610      	mov	r0, r2
 8003536:	4798      	blx	r3
 8003538:	e00e      	b.n	8003558 <HAL_UART_IRQHandler+0x228>
 800353a:	6878      	ldr	r0, [r7, #4]
 800353c:	f000 f990 	bl	8003860 <HAL_UART_ErrorCallback>
 8003540:	e00a      	b.n	8003558 <HAL_UART_IRQHandler+0x228>
 8003542:	6878      	ldr	r0, [r7, #4]
 8003544:	f000 f98c 	bl	8003860 <HAL_UART_ErrorCallback>
 8003548:	e006      	b.n	8003558 <HAL_UART_IRQHandler+0x228>
 800354a:	6878      	ldr	r0, [r7, #4]
 800354c:	f000 f988 	bl	8003860 <HAL_UART_ErrorCallback>
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	2200      	movs	r2, #0
 8003554:	641a      	str	r2, [r3, #64]	; 0x40
 8003556:	e170      	b.n	800383a <HAL_UART_IRQHandler+0x50a>
 8003558:	bf00      	nop
 800355a:	e16e      	b.n	800383a <HAL_UART_IRQHandler+0x50a>
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003560:	2b01      	cmp	r3, #1
 8003562:	f040 814a 	bne.w	80037fa <HAL_UART_IRQHandler+0x4ca>
 8003566:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800356a:	f003 0310 	and.w	r3, r3, #16
 800356e:	2b00      	cmp	r3, #0
 8003570:	f000 8143 	beq.w	80037fa <HAL_UART_IRQHandler+0x4ca>
 8003574:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003578:	f003 0310 	and.w	r3, r3, #16
 800357c:	2b00      	cmp	r3, #0
 800357e:	f000 813c 	beq.w	80037fa <HAL_UART_IRQHandler+0x4ca>
 8003582:	2300      	movs	r3, #0
 8003584:	60bb      	str	r3, [r7, #8]
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	60bb      	str	r3, [r7, #8]
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	685b      	ldr	r3, [r3, #4]
 8003594:	60bb      	str	r3, [r7, #8]
 8003596:	68bb      	ldr	r3, [r7, #8]
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	695b      	ldr	r3, [r3, #20]
 800359e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80035a2:	2b40      	cmp	r3, #64	; 0x40
 80035a4:	f040 80b4 	bne.w	8003710 <HAL_UART_IRQHandler+0x3e0>
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	685b      	ldr	r3, [r3, #4]
 80035b0:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 80035b4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 80035b8:	2b00      	cmp	r3, #0
 80035ba:	f000 8140 	beq.w	800383e <HAL_UART_IRQHandler+0x50e>
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80035c2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80035c6:	429a      	cmp	r2, r3
 80035c8:	f080 8139 	bcs.w	800383e <HAL_UART_IRQHandler+0x50e>
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80035d2:	85da      	strh	r2, [r3, #46]	; 0x2e
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80035d8:	69db      	ldr	r3, [r3, #28]
 80035da:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80035de:	f000 8088 	beq.w	80036f2 <HAL_UART_IRQHandler+0x3c2>
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	330c      	adds	r3, #12
 80035e8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80035ec:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80035f0:	e853 3f00 	ldrex	r3, [r3]
 80035f4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80035f8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80035fc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003600:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	330c      	adds	r3, #12
 800360a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800360e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8003612:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8003616:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800361a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800361e:	e841 2300 	strex	r3, r2, [r1]
 8003622:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8003626:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800362a:	2b00      	cmp	r3, #0
 800362c:	d1d9      	bne.n	80035e2 <HAL_UART_IRQHandler+0x2b2>
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	3314      	adds	r3, #20
 8003634:	677b      	str	r3, [r7, #116]	; 0x74
 8003636:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003638:	e853 3f00 	ldrex	r3, [r3]
 800363c:	673b      	str	r3, [r7, #112]	; 0x70
 800363e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003640:	f023 0301 	bic.w	r3, r3, #1
 8003644:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	3314      	adds	r3, #20
 800364e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8003652:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8003656:	67fb      	str	r3, [r7, #124]	; 0x7c
 8003658:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800365a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800365e:	e841 2300 	strex	r3, r2, [r1]
 8003662:	67bb      	str	r3, [r7, #120]	; 0x78
 8003664:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8003666:	2b00      	cmp	r3, #0
 8003668:	d1e1      	bne.n	800362e <HAL_UART_IRQHandler+0x2fe>
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	3314      	adds	r3, #20
 8003670:	663b      	str	r3, [r7, #96]	; 0x60
 8003672:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003674:	e853 3f00 	ldrex	r3, [r3]
 8003678:	65fb      	str	r3, [r7, #92]	; 0x5c
 800367a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800367c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003680:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	3314      	adds	r3, #20
 800368a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800368e:	66fa      	str	r2, [r7, #108]	; 0x6c
 8003690:	66bb      	str	r3, [r7, #104]	; 0x68
 8003692:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8003694:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8003696:	e841 2300 	strex	r3, r2, [r1]
 800369a:	667b      	str	r3, [r7, #100]	; 0x64
 800369c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800369e:	2b00      	cmp	r3, #0
 80036a0:	d1e3      	bne.n	800366a <HAL_UART_IRQHandler+0x33a>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	2220      	movs	r2, #32
 80036a6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	2200      	movs	r2, #0
 80036ae:	631a      	str	r2, [r3, #48]	; 0x30
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	330c      	adds	r3, #12
 80036b6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80036b8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80036ba:	e853 3f00 	ldrex	r3, [r3]
 80036be:	64bb      	str	r3, [r7, #72]	; 0x48
 80036c0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80036c2:	f023 0310 	bic.w	r3, r3, #16
 80036c6:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	330c      	adds	r3, #12
 80036d0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 80036d4:	65ba      	str	r2, [r7, #88]	; 0x58
 80036d6:	657b      	str	r3, [r7, #84]	; 0x54
 80036d8:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80036da:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80036dc:	e841 2300 	strex	r3, r2, [r1]
 80036e0:	653b      	str	r3, [r7, #80]	; 0x50
 80036e2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80036e4:	2b00      	cmp	r3, #0
 80036e6:	d1e3      	bne.n	80036b0 <HAL_UART_IRQHandler+0x380>
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80036ec:	4618      	mov	r0, r3
 80036ee:	f7fe fb7b 	bl	8001de8 <HAL_DMA_Abort>
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80036fa:	b29b      	uxth	r3, r3
 80036fc:	1ad3      	subs	r3, r2, r3
 80036fe:	b29b      	uxth	r3, r3
 8003700:	4619      	mov	r1, r3
 8003702:	6878      	ldr	r0, [r7, #4]
 8003704:	f000 f8b6 	bl	8003874 <HAL_UARTEx_RxEventCallback>
 8003708:	e099      	b.n	800383e <HAL_UART_IRQHandler+0x50e>
 800370a:	bf00      	nop
 800370c:	08003aab 	.word	0x08003aab
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003718:	b29b      	uxth	r3, r3
 800371a:	1ad3      	subs	r3, r2, r3
 800371c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003724:	b29b      	uxth	r3, r3
 8003726:	2b00      	cmp	r3, #0
 8003728:	f000 808b 	beq.w	8003842 <HAL_UART_IRQHandler+0x512>
 800372c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8003730:	2b00      	cmp	r3, #0
 8003732:	f000 8086 	beq.w	8003842 <HAL_UART_IRQHandler+0x512>
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	330c      	adds	r3, #12
 800373c:	63bb      	str	r3, [r7, #56]	; 0x38
 800373e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003740:	e853 3f00 	ldrex	r3, [r3]
 8003744:	637b      	str	r3, [r7, #52]	; 0x34
 8003746:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003748:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800374c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	330c      	adds	r3, #12
 8003756:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800375a:	647a      	str	r2, [r7, #68]	; 0x44
 800375c:	643b      	str	r3, [r7, #64]	; 0x40
 800375e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8003760:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8003762:	e841 2300 	strex	r3, r2, [r1]
 8003766:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003768:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800376a:	2b00      	cmp	r3, #0
 800376c:	d1e3      	bne.n	8003736 <HAL_UART_IRQHandler+0x406>
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	3314      	adds	r3, #20
 8003774:	627b      	str	r3, [r7, #36]	; 0x24
 8003776:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003778:	e853 3f00 	ldrex	r3, [r3]
 800377c:	623b      	str	r3, [r7, #32]
 800377e:	6a3b      	ldr	r3, [r7, #32]
 8003780:	f023 0301 	bic.w	r3, r3, #1
 8003784:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	3314      	adds	r3, #20
 800378e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8003792:	633a      	str	r2, [r7, #48]	; 0x30
 8003794:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003796:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8003798:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800379a:	e841 2300 	strex	r3, r2, [r1]
 800379e:	62bb      	str	r3, [r7, #40]	; 0x28
 80037a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80037a2:	2b00      	cmp	r3, #0
 80037a4:	d1e3      	bne.n	800376e <HAL_UART_IRQHandler+0x43e>
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	2220      	movs	r2, #32
 80037aa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	2200      	movs	r2, #0
 80037b2:	631a      	str	r2, [r3, #48]	; 0x30
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	330c      	adds	r3, #12
 80037ba:	613b      	str	r3, [r7, #16]
 80037bc:	693b      	ldr	r3, [r7, #16]
 80037be:	e853 3f00 	ldrex	r3, [r3]
 80037c2:	60fb      	str	r3, [r7, #12]
 80037c4:	68fb      	ldr	r3, [r7, #12]
 80037c6:	f023 0310 	bic.w	r3, r3, #16
 80037ca:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	330c      	adds	r3, #12
 80037d4:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 80037d8:	61fa      	str	r2, [r7, #28]
 80037da:	61bb      	str	r3, [r7, #24]
 80037dc:	69b9      	ldr	r1, [r7, #24]
 80037de:	69fa      	ldr	r2, [r7, #28]
 80037e0:	e841 2300 	strex	r3, r2, [r1]
 80037e4:	617b      	str	r3, [r7, #20]
 80037e6:	697b      	ldr	r3, [r7, #20]
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	d1e3      	bne.n	80037b4 <HAL_UART_IRQHandler+0x484>
 80037ec:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80037f0:	4619      	mov	r1, r3
 80037f2:	6878      	ldr	r0, [r7, #4]
 80037f4:	f000 f83e 	bl	8003874 <HAL_UARTEx_RxEventCallback>
 80037f8:	e023      	b.n	8003842 <HAL_UART_IRQHandler+0x512>
 80037fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80037fe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003802:	2b00      	cmp	r3, #0
 8003804:	d009      	beq.n	800381a <HAL_UART_IRQHandler+0x4ea>
 8003806:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800380a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800380e:	2b00      	cmp	r3, #0
 8003810:	d003      	beq.n	800381a <HAL_UART_IRQHandler+0x4ea>
 8003812:	6878      	ldr	r0, [r7, #4]
 8003814:	f000 f95d 	bl	8003ad2 <UART_Transmit_IT>
 8003818:	e014      	b.n	8003844 <HAL_UART_IRQHandler+0x514>
 800381a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800381e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003822:	2b00      	cmp	r3, #0
 8003824:	d00e      	beq.n	8003844 <HAL_UART_IRQHandler+0x514>
 8003826:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800382a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800382e:	2b00      	cmp	r3, #0
 8003830:	d008      	beq.n	8003844 <HAL_UART_IRQHandler+0x514>
 8003832:	6878      	ldr	r0, [r7, #4]
 8003834:	f000 f99d 	bl	8003b72 <UART_EndTransmit_IT>
 8003838:	e004      	b.n	8003844 <HAL_UART_IRQHandler+0x514>
 800383a:	bf00      	nop
 800383c:	e002      	b.n	8003844 <HAL_UART_IRQHandler+0x514>
 800383e:	bf00      	nop
 8003840:	e000      	b.n	8003844 <HAL_UART_IRQHandler+0x514>
 8003842:	bf00      	nop
 8003844:	37e8      	adds	r7, #232	; 0xe8
 8003846:	46bd      	mov	sp, r7
 8003848:	bd80      	pop	{r7, pc}
 800384a:	bf00      	nop

0800384c <HAL_UART_TxCpltCallback>:
 800384c:	b480      	push	{r7}
 800384e:	b083      	sub	sp, #12
 8003850:	af00      	add	r7, sp, #0
 8003852:	6078      	str	r0, [r7, #4]
 8003854:	bf00      	nop
 8003856:	370c      	adds	r7, #12
 8003858:	46bd      	mov	sp, r7
 800385a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800385e:	4770      	bx	lr

08003860 <HAL_UART_ErrorCallback>:
 8003860:	b480      	push	{r7}
 8003862:	b083      	sub	sp, #12
 8003864:	af00      	add	r7, sp, #0
 8003866:	6078      	str	r0, [r7, #4]
 8003868:	bf00      	nop
 800386a:	370c      	adds	r7, #12
 800386c:	46bd      	mov	sp, r7
 800386e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003872:	4770      	bx	lr

08003874 <HAL_UARTEx_RxEventCallback>:
 8003874:	b480      	push	{r7}
 8003876:	b083      	sub	sp, #12
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	460b      	mov	r3, r1
 800387e:	807b      	strh	r3, [r7, #2]
 8003880:	bf00      	nop
 8003882:	370c      	adds	r7, #12
 8003884:	46bd      	mov	sp, r7
 8003886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800388a:	4770      	bx	lr

0800388c <UART_WaitOnFlagUntilTimeout>:
 800388c:	b580      	push	{r7, lr}
 800388e:	b090      	sub	sp, #64	; 0x40
 8003890:	af00      	add	r7, sp, #0
 8003892:	60f8      	str	r0, [r7, #12]
 8003894:	60b9      	str	r1, [r7, #8]
 8003896:	603b      	str	r3, [r7, #0]
 8003898:	4613      	mov	r3, r2
 800389a:	71fb      	strb	r3, [r7, #7]
 800389c:	e050      	b.n	8003940 <UART_WaitOnFlagUntilTimeout+0xb4>
 800389e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80038a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038a4:	d04c      	beq.n	8003940 <UART_WaitOnFlagUntilTimeout+0xb4>
 80038a6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d007      	beq.n	80038bc <UART_WaitOnFlagUntilTimeout+0x30>
 80038ac:	f7fe f9ae 	bl	8001c0c <HAL_GetTick>
 80038b0:	4602      	mov	r2, r0
 80038b2:	683b      	ldr	r3, [r7, #0]
 80038b4:	1ad3      	subs	r3, r2, r3
 80038b6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80038b8:	429a      	cmp	r2, r3
 80038ba:	d241      	bcs.n	8003940 <UART_WaitOnFlagUntilTimeout+0xb4>
 80038bc:	68fb      	ldr	r3, [r7, #12]
 80038be:	681b      	ldr	r3, [r3, #0]
 80038c0:	330c      	adds	r3, #12
 80038c2:	62bb      	str	r3, [r7, #40]	; 0x28
 80038c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80038c6:	e853 3f00 	ldrex	r3, [r3]
 80038ca:	627b      	str	r3, [r7, #36]	; 0x24
 80038cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038ce:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80038d2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80038d4:	68fb      	ldr	r3, [r7, #12]
 80038d6:	681b      	ldr	r3, [r3, #0]
 80038d8:	330c      	adds	r3, #12
 80038da:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80038dc:	637a      	str	r2, [r7, #52]	; 0x34
 80038de:	633b      	str	r3, [r7, #48]	; 0x30
 80038e0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80038e2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80038e4:	e841 2300 	strex	r3, r2, [r1]
 80038e8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80038ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80038ec:	2b00      	cmp	r3, #0
 80038ee:	d1e5      	bne.n	80038bc <UART_WaitOnFlagUntilTimeout+0x30>
 80038f0:	68fb      	ldr	r3, [r7, #12]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	3314      	adds	r3, #20
 80038f6:	617b      	str	r3, [r7, #20]
 80038f8:	697b      	ldr	r3, [r7, #20]
 80038fa:	e853 3f00 	ldrex	r3, [r3]
 80038fe:	613b      	str	r3, [r7, #16]
 8003900:	693b      	ldr	r3, [r7, #16]
 8003902:	f023 0301 	bic.w	r3, r3, #1
 8003906:	63bb      	str	r3, [r7, #56]	; 0x38
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	3314      	adds	r3, #20
 800390e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003910:	623a      	str	r2, [r7, #32]
 8003912:	61fb      	str	r3, [r7, #28]
 8003914:	69f9      	ldr	r1, [r7, #28]
 8003916:	6a3a      	ldr	r2, [r7, #32]
 8003918:	e841 2300 	strex	r3, r2, [r1]
 800391c:	61bb      	str	r3, [r7, #24]
 800391e:	69bb      	ldr	r3, [r7, #24]
 8003920:	2b00      	cmp	r3, #0
 8003922:	d1e5      	bne.n	80038f0 <UART_WaitOnFlagUntilTimeout+0x64>
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	2220      	movs	r2, #32
 8003928:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800392c:	68fb      	ldr	r3, [r7, #12]
 800392e:	2220      	movs	r2, #32
 8003930:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003934:	68fb      	ldr	r3, [r7, #12]
 8003936:	2200      	movs	r2, #0
 8003938:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800393c:	2303      	movs	r3, #3
 800393e:	e00f      	b.n	8003960 <UART_WaitOnFlagUntilTimeout+0xd4>
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	681a      	ldr	r2, [r3, #0]
 8003946:	68bb      	ldr	r3, [r7, #8]
 8003948:	4013      	ands	r3, r2
 800394a:	68ba      	ldr	r2, [r7, #8]
 800394c:	429a      	cmp	r2, r3
 800394e:	bf0c      	ite	eq
 8003950:	2301      	moveq	r3, #1
 8003952:	2300      	movne	r3, #0
 8003954:	b2db      	uxtb	r3, r3
 8003956:	461a      	mov	r2, r3
 8003958:	79fb      	ldrb	r3, [r7, #7]
 800395a:	429a      	cmp	r2, r3
 800395c:	d09f      	beq.n	800389e <UART_WaitOnFlagUntilTimeout+0x12>
 800395e:	2300      	movs	r3, #0
 8003960:	4618      	mov	r0, r3
 8003962:	3740      	adds	r7, #64	; 0x40
 8003964:	46bd      	mov	sp, r7
 8003966:	bd80      	pop	{r7, pc}

08003968 <UART_Start_Receive_IT>:
 8003968:	b480      	push	{r7}
 800396a:	b085      	sub	sp, #20
 800396c:	af00      	add	r7, sp, #0
 800396e:	60f8      	str	r0, [r7, #12]
 8003970:	60b9      	str	r1, [r7, #8]
 8003972:	4613      	mov	r3, r2
 8003974:	80fb      	strh	r3, [r7, #6]
 8003976:	68fb      	ldr	r3, [r7, #12]
 8003978:	68ba      	ldr	r2, [r7, #8]
 800397a:	629a      	str	r2, [r3, #40]	; 0x28
 800397c:	68fb      	ldr	r3, [r7, #12]
 800397e:	88fa      	ldrh	r2, [r7, #6]
 8003980:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003982:	68fb      	ldr	r3, [r7, #12]
 8003984:	88fa      	ldrh	r2, [r7, #6]
 8003986:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003988:	68fb      	ldr	r3, [r7, #12]
 800398a:	2200      	movs	r2, #0
 800398c:	641a      	str	r2, [r3, #64]	; 0x40
 800398e:	68fb      	ldr	r3, [r7, #12]
 8003990:	2222      	movs	r2, #34	; 0x22
 8003992:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003996:	68fb      	ldr	r3, [r7, #12]
 8003998:	2200      	movs	r2, #0
 800399a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800399e:	68fb      	ldr	r3, [r7, #12]
 80039a0:	691b      	ldr	r3, [r3, #16]
 80039a2:	2b00      	cmp	r3, #0
 80039a4:	d007      	beq.n	80039b6 <UART_Start_Receive_IT+0x4e>
 80039a6:	68fb      	ldr	r3, [r7, #12]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	68da      	ldr	r2, [r3, #12]
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80039b4:	60da      	str	r2, [r3, #12]
 80039b6:	68fb      	ldr	r3, [r7, #12]
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	695a      	ldr	r2, [r3, #20]
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	f042 0201 	orr.w	r2, r2, #1
 80039c4:	615a      	str	r2, [r3, #20]
 80039c6:	68fb      	ldr	r3, [r7, #12]
 80039c8:	681b      	ldr	r3, [r3, #0]
 80039ca:	68da      	ldr	r2, [r3, #12]
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	f042 0220 	orr.w	r2, r2, #32
 80039d4:	60da      	str	r2, [r3, #12]
 80039d6:	2300      	movs	r3, #0
 80039d8:	4618      	mov	r0, r3
 80039da:	3714      	adds	r7, #20
 80039dc:	46bd      	mov	sp, r7
 80039de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039e2:	4770      	bx	lr

080039e4 <UART_EndRxTransfer>:
 80039e4:	b480      	push	{r7}
 80039e6:	b095      	sub	sp, #84	; 0x54
 80039e8:	af00      	add	r7, sp, #0
 80039ea:	6078      	str	r0, [r7, #4]
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	330c      	adds	r3, #12
 80039f2:	637b      	str	r3, [r7, #52]	; 0x34
 80039f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80039f6:	e853 3f00 	ldrex	r3, [r3]
 80039fa:	633b      	str	r3, [r7, #48]	; 0x30
 80039fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80039fe:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8003a02:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	330c      	adds	r3, #12
 8003a0a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003a0c:	643a      	str	r2, [r7, #64]	; 0x40
 8003a0e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003a10:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8003a12:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8003a14:	e841 2300 	strex	r3, r2, [r1]
 8003a18:	63bb      	str	r3, [r7, #56]	; 0x38
 8003a1a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003a1c:	2b00      	cmp	r3, #0
 8003a1e:	d1e5      	bne.n	80039ec <UART_EndRxTransfer+0x8>
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	3314      	adds	r3, #20
 8003a26:	623b      	str	r3, [r7, #32]
 8003a28:	6a3b      	ldr	r3, [r7, #32]
 8003a2a:	e853 3f00 	ldrex	r3, [r3]
 8003a2e:	61fb      	str	r3, [r7, #28]
 8003a30:	69fb      	ldr	r3, [r7, #28]
 8003a32:	f023 0301 	bic.w	r3, r3, #1
 8003a36:	64bb      	str	r3, [r7, #72]	; 0x48
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	3314      	adds	r3, #20
 8003a3e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8003a40:	62fa      	str	r2, [r7, #44]	; 0x2c
 8003a42:	62bb      	str	r3, [r7, #40]	; 0x28
 8003a44:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003a46:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8003a48:	e841 2300 	strex	r3, r2, [r1]
 8003a4c:	627b      	str	r3, [r7, #36]	; 0x24
 8003a4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a50:	2b00      	cmp	r3, #0
 8003a52:	d1e5      	bne.n	8003a20 <UART_EndRxTransfer+0x3c>
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a58:	2b01      	cmp	r3, #1
 8003a5a:	d119      	bne.n	8003a90 <UART_EndRxTransfer+0xac>
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	330c      	adds	r3, #12
 8003a62:	60fb      	str	r3, [r7, #12]
 8003a64:	68fb      	ldr	r3, [r7, #12]
 8003a66:	e853 3f00 	ldrex	r3, [r3]
 8003a6a:	60bb      	str	r3, [r7, #8]
 8003a6c:	68bb      	ldr	r3, [r7, #8]
 8003a6e:	f023 0310 	bic.w	r3, r3, #16
 8003a72:	647b      	str	r3, [r7, #68]	; 0x44
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	681b      	ldr	r3, [r3, #0]
 8003a78:	330c      	adds	r3, #12
 8003a7a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8003a7c:	61ba      	str	r2, [r7, #24]
 8003a7e:	617b      	str	r3, [r7, #20]
 8003a80:	6979      	ldr	r1, [r7, #20]
 8003a82:	69ba      	ldr	r2, [r7, #24]
 8003a84:	e841 2300 	strex	r3, r2, [r1]
 8003a88:	613b      	str	r3, [r7, #16]
 8003a8a:	693b      	ldr	r3, [r7, #16]
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d1e5      	bne.n	8003a5c <UART_EndRxTransfer+0x78>
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	2220      	movs	r2, #32
 8003a94:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	2200      	movs	r2, #0
 8003a9c:	631a      	str	r2, [r3, #48]	; 0x30
 8003a9e:	bf00      	nop
 8003aa0:	3754      	adds	r7, #84	; 0x54
 8003aa2:	46bd      	mov	sp, r7
 8003aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aa8:	4770      	bx	lr

08003aaa <UART_DMAAbortOnError>:
 8003aaa:	b580      	push	{r7, lr}
 8003aac:	b084      	sub	sp, #16
 8003aae:	af00      	add	r7, sp, #0
 8003ab0:	6078      	str	r0, [r7, #4]
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003ab6:	60fb      	str	r3, [r7, #12]
 8003ab8:	68fb      	ldr	r3, [r7, #12]
 8003aba:	2200      	movs	r2, #0
 8003abc:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	2200      	movs	r2, #0
 8003ac2:	84da      	strh	r2, [r3, #38]	; 0x26
 8003ac4:	68f8      	ldr	r0, [r7, #12]
 8003ac6:	f7ff fecb 	bl	8003860 <HAL_UART_ErrorCallback>
 8003aca:	bf00      	nop
 8003acc:	3710      	adds	r7, #16
 8003ace:	46bd      	mov	sp, r7
 8003ad0:	bd80      	pop	{r7, pc}

08003ad2 <UART_Transmit_IT>:
 8003ad2:	b480      	push	{r7}
 8003ad4:	b085      	sub	sp, #20
 8003ad6:	af00      	add	r7, sp, #0
 8003ad8:	6078      	str	r0, [r7, #4]
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003ae0:	b2db      	uxtb	r3, r3
 8003ae2:	2b21      	cmp	r3, #33	; 0x21
 8003ae4:	d13e      	bne.n	8003b64 <UART_Transmit_IT+0x92>
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	689b      	ldr	r3, [r3, #8]
 8003aea:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003aee:	d114      	bne.n	8003b1a <UART_Transmit_IT+0x48>
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	691b      	ldr	r3, [r3, #16]
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d110      	bne.n	8003b1a <UART_Transmit_IT+0x48>
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	6a1b      	ldr	r3, [r3, #32]
 8003afc:	60fb      	str	r3, [r7, #12]
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	881b      	ldrh	r3, [r3, #0]
 8003b02:	461a      	mov	r2, r3
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	681b      	ldr	r3, [r3, #0]
 8003b08:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003b0c:	605a      	str	r2, [r3, #4]
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	6a1b      	ldr	r3, [r3, #32]
 8003b12:	1c9a      	adds	r2, r3, #2
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	621a      	str	r2, [r3, #32]
 8003b18:	e008      	b.n	8003b2c <UART_Transmit_IT+0x5a>
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	6a1b      	ldr	r3, [r3, #32]
 8003b1e:	1c59      	adds	r1, r3, #1
 8003b20:	687a      	ldr	r2, [r7, #4]
 8003b22:	6211      	str	r1, [r2, #32]
 8003b24:	781a      	ldrb	r2, [r3, #0]
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	681b      	ldr	r3, [r3, #0]
 8003b2a:	605a      	str	r2, [r3, #4]
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003b30:	b29b      	uxth	r3, r3
 8003b32:	3b01      	subs	r3, #1
 8003b34:	b29b      	uxth	r3, r3
 8003b36:	687a      	ldr	r2, [r7, #4]
 8003b38:	4619      	mov	r1, r3
 8003b3a:	84d1      	strh	r1, [r2, #38]	; 0x26
 8003b3c:	2b00      	cmp	r3, #0
 8003b3e:	d10f      	bne.n	8003b60 <UART_Transmit_IT+0x8e>
 8003b40:	687b      	ldr	r3, [r7, #4]
 8003b42:	681b      	ldr	r3, [r3, #0]
 8003b44:	68da      	ldr	r2, [r3, #12]
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003b4e:	60da      	str	r2, [r3, #12]
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	68da      	ldr	r2, [r3, #12]
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	681b      	ldr	r3, [r3, #0]
 8003b5a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003b5e:	60da      	str	r2, [r3, #12]
 8003b60:	2300      	movs	r3, #0
 8003b62:	e000      	b.n	8003b66 <UART_Transmit_IT+0x94>
 8003b64:	2302      	movs	r3, #2
 8003b66:	4618      	mov	r0, r3
 8003b68:	3714      	adds	r7, #20
 8003b6a:	46bd      	mov	sp, r7
 8003b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b70:	4770      	bx	lr

08003b72 <UART_EndTransmit_IT>:
 8003b72:	b580      	push	{r7, lr}
 8003b74:	b082      	sub	sp, #8
 8003b76:	af00      	add	r7, sp, #0
 8003b78:	6078      	str	r0, [r7, #4]
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	68da      	ldr	r2, [r3, #12]
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003b88:	60da      	str	r2, [r3, #12]
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	2220      	movs	r2, #32
 8003b8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003b92:	6878      	ldr	r0, [r7, #4]
 8003b94:	f7ff fe5a 	bl	800384c <HAL_UART_TxCpltCallback>
 8003b98:	2300      	movs	r3, #0
 8003b9a:	4618      	mov	r0, r3
 8003b9c:	3708      	adds	r7, #8
 8003b9e:	46bd      	mov	sp, r7
 8003ba0:	bd80      	pop	{r7, pc}

08003ba2 <UART_Receive_IT>:
 8003ba2:	b580      	push	{r7, lr}
 8003ba4:	b08c      	sub	sp, #48	; 0x30
 8003ba6:	af00      	add	r7, sp, #0
 8003ba8:	6078      	str	r0, [r7, #4]
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003bb0:	b2db      	uxtb	r3, r3
 8003bb2:	2b22      	cmp	r3, #34	; 0x22
 8003bb4:	f040 80ab 	bne.w	8003d0e <UART_Receive_IT+0x16c>
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	689b      	ldr	r3, [r3, #8]
 8003bbc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003bc0:	d117      	bne.n	8003bf2 <UART_Receive_IT+0x50>
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	691b      	ldr	r3, [r3, #16]
 8003bc6:	2b00      	cmp	r3, #0
 8003bc8:	d113      	bne.n	8003bf2 <UART_Receive_IT+0x50>
 8003bca:	2300      	movs	r3, #0
 8003bcc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bd2:	62bb      	str	r3, [r7, #40]	; 0x28
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	681b      	ldr	r3, [r3, #0]
 8003bd8:	685b      	ldr	r3, [r3, #4]
 8003bda:	b29b      	uxth	r3, r3
 8003bdc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003be0:	b29a      	uxth	r2, r3
 8003be2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003be4:	801a      	strh	r2, [r3, #0]
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bea:	1c9a      	adds	r2, r3, #2
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	629a      	str	r2, [r3, #40]	; 0x28
 8003bf0:	e026      	b.n	8003c40 <UART_Receive_IT+0x9e>
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003bf6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003bf8:	2300      	movs	r3, #0
 8003bfa:	62bb      	str	r3, [r7, #40]	; 0x28
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	689b      	ldr	r3, [r3, #8]
 8003c00:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003c04:	d007      	beq.n	8003c16 <UART_Receive_IT+0x74>
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	689b      	ldr	r3, [r3, #8]
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d10a      	bne.n	8003c24 <UART_Receive_IT+0x82>
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	691b      	ldr	r3, [r3, #16]
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d106      	bne.n	8003c24 <UART_Receive_IT+0x82>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	681b      	ldr	r3, [r3, #0]
 8003c1a:	685b      	ldr	r3, [r3, #4]
 8003c1c:	b2da      	uxtb	r2, r3
 8003c1e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c20:	701a      	strb	r2, [r3, #0]
 8003c22:	e008      	b.n	8003c36 <UART_Receive_IT+0x94>
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	685b      	ldr	r3, [r3, #4]
 8003c2a:	b2db      	uxtb	r3, r3
 8003c2c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003c30:	b2da      	uxtb	r2, r3
 8003c32:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c34:	701a      	strb	r2, [r3, #0]
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003c3a:	1c5a      	adds	r2, r3, #1
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	629a      	str	r2, [r3, #40]	; 0x28
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003c44:	b29b      	uxth	r3, r3
 8003c46:	3b01      	subs	r3, #1
 8003c48:	b29b      	uxth	r3, r3
 8003c4a:	687a      	ldr	r2, [r7, #4]
 8003c4c:	4619      	mov	r1, r3
 8003c4e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8003c50:	2b00      	cmp	r3, #0
 8003c52:	d15a      	bne.n	8003d0a <UART_Receive_IT+0x168>
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	68da      	ldr	r2, [r3, #12]
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	f022 0220 	bic.w	r2, r2, #32
 8003c62:	60da      	str	r2, [r3, #12]
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	68da      	ldr	r2, [r3, #12]
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003c72:	60da      	str	r2, [r3, #12]
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	695a      	ldr	r2, [r3, #20]
 8003c7a:	687b      	ldr	r3, [r7, #4]
 8003c7c:	681b      	ldr	r3, [r3, #0]
 8003c7e:	f022 0201 	bic.w	r2, r2, #1
 8003c82:	615a      	str	r2, [r3, #20]
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	2220      	movs	r2, #32
 8003c88:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c90:	2b01      	cmp	r3, #1
 8003c92:	d135      	bne.n	8003d00 <UART_Receive_IT+0x15e>
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	2200      	movs	r2, #0
 8003c98:	631a      	str	r2, [r3, #48]	; 0x30
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	330c      	adds	r3, #12
 8003ca0:	617b      	str	r3, [r7, #20]
 8003ca2:	697b      	ldr	r3, [r7, #20]
 8003ca4:	e853 3f00 	ldrex	r3, [r3]
 8003ca8:	613b      	str	r3, [r7, #16]
 8003caa:	693b      	ldr	r3, [r7, #16]
 8003cac:	f023 0310 	bic.w	r3, r3, #16
 8003cb0:	627b      	str	r3, [r7, #36]	; 0x24
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	330c      	adds	r3, #12
 8003cb8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003cba:	623a      	str	r2, [r7, #32]
 8003cbc:	61fb      	str	r3, [r7, #28]
 8003cbe:	69f9      	ldr	r1, [r7, #28]
 8003cc0:	6a3a      	ldr	r2, [r7, #32]
 8003cc2:	e841 2300 	strex	r3, r2, [r1]
 8003cc6:	61bb      	str	r3, [r7, #24]
 8003cc8:	69bb      	ldr	r3, [r7, #24]
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d1e5      	bne.n	8003c9a <UART_Receive_IT+0xf8>
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	f003 0310 	and.w	r3, r3, #16
 8003cd8:	2b10      	cmp	r3, #16
 8003cda:	d10a      	bne.n	8003cf2 <UART_Receive_IT+0x150>
 8003cdc:	2300      	movs	r3, #0
 8003cde:	60fb      	str	r3, [r7, #12]
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	60fb      	str	r3, [r7, #12]
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	685b      	ldr	r3, [r3, #4]
 8003cee:	60fb      	str	r3, [r7, #12]
 8003cf0:	68fb      	ldr	r3, [r7, #12]
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003cf6:	4619      	mov	r1, r3
 8003cf8:	6878      	ldr	r0, [r7, #4]
 8003cfa:	f7ff fdbb 	bl	8003874 <HAL_UARTEx_RxEventCallback>
 8003cfe:	e002      	b.n	8003d06 <UART_Receive_IT+0x164>
 8003d00:	6878      	ldr	r0, [r7, #4]
 8003d02:	f7fc fc9b 	bl	800063c <HAL_UART_RxCpltCallback>
 8003d06:	2300      	movs	r3, #0
 8003d08:	e002      	b.n	8003d10 <UART_Receive_IT+0x16e>
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	e000      	b.n	8003d10 <UART_Receive_IT+0x16e>
 8003d0e:	2302      	movs	r3, #2
 8003d10:	4618      	mov	r0, r3
 8003d12:	3730      	adds	r7, #48	; 0x30
 8003d14:	46bd      	mov	sp, r7
 8003d16:	bd80      	pop	{r7, pc}

08003d18 <UART_SetConfig>:
 8003d18:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003d1c:	b0c0      	sub	sp, #256	; 0x100
 8003d1e:	af00      	add	r7, sp, #0
 8003d20:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8003d24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	691b      	ldr	r3, [r3, #16]
 8003d2c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8003d30:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d34:	68d9      	ldr	r1, [r3, #12]
 8003d36:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d3a:	681a      	ldr	r2, [r3, #0]
 8003d3c:	ea40 0301 	orr.w	r3, r0, r1
 8003d40:	6113      	str	r3, [r2, #16]
 8003d42:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d46:	689a      	ldr	r2, [r3, #8]
 8003d48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d4c:	691b      	ldr	r3, [r3, #16]
 8003d4e:	431a      	orrs	r2, r3
 8003d50:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d54:	695b      	ldr	r3, [r3, #20]
 8003d56:	431a      	orrs	r2, r3
 8003d58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d5c:	69db      	ldr	r3, [r3, #28]
 8003d5e:	4313      	orrs	r3, r2
 8003d60:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8003d64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	68db      	ldr	r3, [r3, #12]
 8003d6c:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8003d70:	f021 010c 	bic.w	r1, r1, #12
 8003d74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d78:	681a      	ldr	r2, [r3, #0]
 8003d7a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8003d7e:	430b      	orrs	r3, r1
 8003d80:	60d3      	str	r3, [r2, #12]
 8003d82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	695b      	ldr	r3, [r3, #20]
 8003d8a:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8003d8e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d92:	6999      	ldr	r1, [r3, #24]
 8003d94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003d98:	681a      	ldr	r2, [r3, #0]
 8003d9a:	ea40 0301 	orr.w	r3, r0, r1
 8003d9e:	6153      	str	r3, [r2, #20]
 8003da0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003da4:	681a      	ldr	r2, [r3, #0]
 8003da6:	4b8f      	ldr	r3, [pc, #572]	; (8003fe4 <UART_SetConfig+0x2cc>)
 8003da8:	429a      	cmp	r2, r3
 8003daa:	d005      	beq.n	8003db8 <UART_SetConfig+0xa0>
 8003dac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003db0:	681a      	ldr	r2, [r3, #0]
 8003db2:	4b8d      	ldr	r3, [pc, #564]	; (8003fe8 <UART_SetConfig+0x2d0>)
 8003db4:	429a      	cmp	r2, r3
 8003db6:	d104      	bne.n	8003dc2 <UART_SetConfig+0xaa>
 8003db8:	f7fe fee4 	bl	8002b84 <HAL_RCC_GetPCLK2Freq>
 8003dbc:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8003dc0:	e003      	b.n	8003dca <UART_SetConfig+0xb2>
 8003dc2:	f7fe fecb 	bl	8002b5c <HAL_RCC_GetPCLK1Freq>
 8003dc6:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8003dca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003dce:	69db      	ldr	r3, [r3, #28]
 8003dd0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003dd4:	f040 810c 	bne.w	8003ff0 <UART_SetConfig+0x2d8>
 8003dd8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003ddc:	2200      	movs	r2, #0
 8003dde:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8003de2:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8003de6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8003dea:	4622      	mov	r2, r4
 8003dec:	462b      	mov	r3, r5
 8003dee:	1891      	adds	r1, r2, r2
 8003df0:	65b9      	str	r1, [r7, #88]	; 0x58
 8003df2:	415b      	adcs	r3, r3
 8003df4:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003df6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8003dfa:	4621      	mov	r1, r4
 8003dfc:	eb12 0801 	adds.w	r8, r2, r1
 8003e00:	4629      	mov	r1, r5
 8003e02:	eb43 0901 	adc.w	r9, r3, r1
 8003e06:	f04f 0200 	mov.w	r2, #0
 8003e0a:	f04f 0300 	mov.w	r3, #0
 8003e0e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003e12:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003e16:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003e1a:	4690      	mov	r8, r2
 8003e1c:	4699      	mov	r9, r3
 8003e1e:	4623      	mov	r3, r4
 8003e20:	eb18 0303 	adds.w	r3, r8, r3
 8003e24:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8003e28:	462b      	mov	r3, r5
 8003e2a:	eb49 0303 	adc.w	r3, r9, r3
 8003e2e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8003e32:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003e36:	685b      	ldr	r3, [r3, #4]
 8003e38:	2200      	movs	r2, #0
 8003e3a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003e3e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8003e42:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8003e46:	460b      	mov	r3, r1
 8003e48:	18db      	adds	r3, r3, r3
 8003e4a:	653b      	str	r3, [r7, #80]	; 0x50
 8003e4c:	4613      	mov	r3, r2
 8003e4e:	eb42 0303 	adc.w	r3, r2, r3
 8003e52:	657b      	str	r3, [r7, #84]	; 0x54
 8003e54:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8003e58:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8003e5c:	f7fc fa28 	bl	80002b0 <__aeabi_uldivmod>
 8003e60:	4602      	mov	r2, r0
 8003e62:	460b      	mov	r3, r1
 8003e64:	4b61      	ldr	r3, [pc, #388]	; (8003fec <UART_SetConfig+0x2d4>)
 8003e66:	fba3 2302 	umull	r2, r3, r3, r2
 8003e6a:	095b      	lsrs	r3, r3, #5
 8003e6c:	011c      	lsls	r4, r3, #4
 8003e6e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003e72:	2200      	movs	r2, #0
 8003e74:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8003e78:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8003e7c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8003e80:	4642      	mov	r2, r8
 8003e82:	464b      	mov	r3, r9
 8003e84:	1891      	adds	r1, r2, r2
 8003e86:	64b9      	str	r1, [r7, #72]	; 0x48
 8003e88:	415b      	adcs	r3, r3
 8003e8a:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003e8c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8003e90:	4641      	mov	r1, r8
 8003e92:	eb12 0a01 	adds.w	sl, r2, r1
 8003e96:	4649      	mov	r1, r9
 8003e98:	eb43 0b01 	adc.w	fp, r3, r1
 8003e9c:	f04f 0200 	mov.w	r2, #0
 8003ea0:	f04f 0300 	mov.w	r3, #0
 8003ea4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8003ea8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8003eac:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003eb0:	4692      	mov	sl, r2
 8003eb2:	469b      	mov	fp, r3
 8003eb4:	4643      	mov	r3, r8
 8003eb6:	eb1a 0303 	adds.w	r3, sl, r3
 8003eba:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8003ebe:	464b      	mov	r3, r9
 8003ec0:	eb4b 0303 	adc.w	r3, fp, r3
 8003ec4:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8003ec8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003ecc:	685b      	ldr	r3, [r3, #4]
 8003ece:	2200      	movs	r2, #0
 8003ed0:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8003ed4:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8003ed8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8003edc:	460b      	mov	r3, r1
 8003ede:	18db      	adds	r3, r3, r3
 8003ee0:	643b      	str	r3, [r7, #64]	; 0x40
 8003ee2:	4613      	mov	r3, r2
 8003ee4:	eb42 0303 	adc.w	r3, r2, r3
 8003ee8:	647b      	str	r3, [r7, #68]	; 0x44
 8003eea:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8003eee:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8003ef2:	f7fc f9dd 	bl	80002b0 <__aeabi_uldivmod>
 8003ef6:	4602      	mov	r2, r0
 8003ef8:	460b      	mov	r3, r1
 8003efa:	4611      	mov	r1, r2
 8003efc:	4b3b      	ldr	r3, [pc, #236]	; (8003fec <UART_SetConfig+0x2d4>)
 8003efe:	fba3 2301 	umull	r2, r3, r3, r1
 8003f02:	095b      	lsrs	r3, r3, #5
 8003f04:	2264      	movs	r2, #100	; 0x64
 8003f06:	fb02 f303 	mul.w	r3, r2, r3
 8003f0a:	1acb      	subs	r3, r1, r3
 8003f0c:	00db      	lsls	r3, r3, #3
 8003f0e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8003f12:	4b36      	ldr	r3, [pc, #216]	; (8003fec <UART_SetConfig+0x2d4>)
 8003f14:	fba3 2302 	umull	r2, r3, r3, r2
 8003f18:	095b      	lsrs	r3, r3, #5
 8003f1a:	005b      	lsls	r3, r3, #1
 8003f1c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8003f20:	441c      	add	r4, r3
 8003f22:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003f26:	2200      	movs	r2, #0
 8003f28:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8003f2c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8003f30:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8003f34:	4642      	mov	r2, r8
 8003f36:	464b      	mov	r3, r9
 8003f38:	1891      	adds	r1, r2, r2
 8003f3a:	63b9      	str	r1, [r7, #56]	; 0x38
 8003f3c:	415b      	adcs	r3, r3
 8003f3e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003f40:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8003f44:	4641      	mov	r1, r8
 8003f46:	1851      	adds	r1, r2, r1
 8003f48:	6339      	str	r1, [r7, #48]	; 0x30
 8003f4a:	4649      	mov	r1, r9
 8003f4c:	414b      	adcs	r3, r1
 8003f4e:	637b      	str	r3, [r7, #52]	; 0x34
 8003f50:	f04f 0200 	mov.w	r2, #0
 8003f54:	f04f 0300 	mov.w	r3, #0
 8003f58:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8003f5c:	4659      	mov	r1, fp
 8003f5e:	00cb      	lsls	r3, r1, #3
 8003f60:	4651      	mov	r1, sl
 8003f62:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8003f66:	4651      	mov	r1, sl
 8003f68:	00ca      	lsls	r2, r1, #3
 8003f6a:	4610      	mov	r0, r2
 8003f6c:	4619      	mov	r1, r3
 8003f6e:	4603      	mov	r3, r0
 8003f70:	4642      	mov	r2, r8
 8003f72:	189b      	adds	r3, r3, r2
 8003f74:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8003f78:	464b      	mov	r3, r9
 8003f7a:	460a      	mov	r2, r1
 8003f7c:	eb42 0303 	adc.w	r3, r2, r3
 8003f80:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8003f84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003f88:	685b      	ldr	r3, [r3, #4]
 8003f8a:	2200      	movs	r2, #0
 8003f8c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8003f90:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8003f94:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8003f98:	460b      	mov	r3, r1
 8003f9a:	18db      	adds	r3, r3, r3
 8003f9c:	62bb      	str	r3, [r7, #40]	; 0x28
 8003f9e:	4613      	mov	r3, r2
 8003fa0:	eb42 0303 	adc.w	r3, r2, r3
 8003fa4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003fa6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8003faa:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8003fae:	f7fc f97f 	bl	80002b0 <__aeabi_uldivmod>
 8003fb2:	4602      	mov	r2, r0
 8003fb4:	460b      	mov	r3, r1
 8003fb6:	4b0d      	ldr	r3, [pc, #52]	; (8003fec <UART_SetConfig+0x2d4>)
 8003fb8:	fba3 1302 	umull	r1, r3, r3, r2
 8003fbc:	095b      	lsrs	r3, r3, #5
 8003fbe:	2164      	movs	r1, #100	; 0x64
 8003fc0:	fb01 f303 	mul.w	r3, r1, r3
 8003fc4:	1ad3      	subs	r3, r2, r3
 8003fc6:	00db      	lsls	r3, r3, #3
 8003fc8:	3332      	adds	r3, #50	; 0x32
 8003fca:	4a08      	ldr	r2, [pc, #32]	; (8003fec <UART_SetConfig+0x2d4>)
 8003fcc:	fba2 2303 	umull	r2, r3, r2, r3
 8003fd0:	095b      	lsrs	r3, r3, #5
 8003fd2:	f003 0207 	and.w	r2, r3, #7
 8003fd6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	4422      	add	r2, r4
 8003fde:	609a      	str	r2, [r3, #8]
 8003fe0:	e105      	b.n	80041ee <UART_SetConfig+0x4d6>
 8003fe2:	bf00      	nop
 8003fe4:	40011000 	.word	0x40011000
 8003fe8:	40011400 	.word	0x40011400
 8003fec:	51eb851f 	.word	0x51eb851f
 8003ff0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003ff4:	2200      	movs	r2, #0
 8003ff6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8003ffa:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8003ffe:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8004002:	4642      	mov	r2, r8
 8004004:	464b      	mov	r3, r9
 8004006:	1891      	adds	r1, r2, r2
 8004008:	6239      	str	r1, [r7, #32]
 800400a:	415b      	adcs	r3, r3
 800400c:	627b      	str	r3, [r7, #36]	; 0x24
 800400e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004012:	4641      	mov	r1, r8
 8004014:	1854      	adds	r4, r2, r1
 8004016:	4649      	mov	r1, r9
 8004018:	eb43 0501 	adc.w	r5, r3, r1
 800401c:	f04f 0200 	mov.w	r2, #0
 8004020:	f04f 0300 	mov.w	r3, #0
 8004024:	00eb      	lsls	r3, r5, #3
 8004026:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800402a:	00e2      	lsls	r2, r4, #3
 800402c:	4614      	mov	r4, r2
 800402e:	461d      	mov	r5, r3
 8004030:	4643      	mov	r3, r8
 8004032:	18e3      	adds	r3, r4, r3
 8004034:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004038:	464b      	mov	r3, r9
 800403a:	eb45 0303 	adc.w	r3, r5, r3
 800403e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8004042:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004046:	685b      	ldr	r3, [r3, #4]
 8004048:	2200      	movs	r2, #0
 800404a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800404e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8004052:	f04f 0200 	mov.w	r2, #0
 8004056:	f04f 0300 	mov.w	r3, #0
 800405a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800405e:	4629      	mov	r1, r5
 8004060:	008b      	lsls	r3, r1, #2
 8004062:	4621      	mov	r1, r4
 8004064:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004068:	4621      	mov	r1, r4
 800406a:	008a      	lsls	r2, r1, #2
 800406c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8004070:	f7fc f91e 	bl	80002b0 <__aeabi_uldivmod>
 8004074:	4602      	mov	r2, r0
 8004076:	460b      	mov	r3, r1
 8004078:	4b60      	ldr	r3, [pc, #384]	; (80041fc <UART_SetConfig+0x4e4>)
 800407a:	fba3 2302 	umull	r2, r3, r3, r2
 800407e:	095b      	lsrs	r3, r3, #5
 8004080:	011c      	lsls	r4, r3, #4
 8004082:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004086:	2200      	movs	r2, #0
 8004088:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800408c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8004090:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8004094:	4642      	mov	r2, r8
 8004096:	464b      	mov	r3, r9
 8004098:	1891      	adds	r1, r2, r2
 800409a:	61b9      	str	r1, [r7, #24]
 800409c:	415b      	adcs	r3, r3
 800409e:	61fb      	str	r3, [r7, #28]
 80040a0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80040a4:	4641      	mov	r1, r8
 80040a6:	1851      	adds	r1, r2, r1
 80040a8:	6139      	str	r1, [r7, #16]
 80040aa:	4649      	mov	r1, r9
 80040ac:	414b      	adcs	r3, r1
 80040ae:	617b      	str	r3, [r7, #20]
 80040b0:	f04f 0200 	mov.w	r2, #0
 80040b4:	f04f 0300 	mov.w	r3, #0
 80040b8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80040bc:	4659      	mov	r1, fp
 80040be:	00cb      	lsls	r3, r1, #3
 80040c0:	4651      	mov	r1, sl
 80040c2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80040c6:	4651      	mov	r1, sl
 80040c8:	00ca      	lsls	r2, r1, #3
 80040ca:	4610      	mov	r0, r2
 80040cc:	4619      	mov	r1, r3
 80040ce:	4603      	mov	r3, r0
 80040d0:	4642      	mov	r2, r8
 80040d2:	189b      	adds	r3, r3, r2
 80040d4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80040d8:	464b      	mov	r3, r9
 80040da:	460a      	mov	r2, r1
 80040dc:	eb42 0303 	adc.w	r3, r2, r3
 80040e0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80040e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80040e8:	685b      	ldr	r3, [r3, #4]
 80040ea:	2200      	movs	r2, #0
 80040ec:	67bb      	str	r3, [r7, #120]	; 0x78
 80040ee:	67fa      	str	r2, [r7, #124]	; 0x7c
 80040f0:	f04f 0200 	mov.w	r2, #0
 80040f4:	f04f 0300 	mov.w	r3, #0
 80040f8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 80040fc:	4649      	mov	r1, r9
 80040fe:	008b      	lsls	r3, r1, #2
 8004100:	4641      	mov	r1, r8
 8004102:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004106:	4641      	mov	r1, r8
 8004108:	008a      	lsls	r2, r1, #2
 800410a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800410e:	f7fc f8cf 	bl	80002b0 <__aeabi_uldivmod>
 8004112:	4602      	mov	r2, r0
 8004114:	460b      	mov	r3, r1
 8004116:	4b39      	ldr	r3, [pc, #228]	; (80041fc <UART_SetConfig+0x4e4>)
 8004118:	fba3 1302 	umull	r1, r3, r3, r2
 800411c:	095b      	lsrs	r3, r3, #5
 800411e:	2164      	movs	r1, #100	; 0x64
 8004120:	fb01 f303 	mul.w	r3, r1, r3
 8004124:	1ad3      	subs	r3, r2, r3
 8004126:	011b      	lsls	r3, r3, #4
 8004128:	3332      	adds	r3, #50	; 0x32
 800412a:	4a34      	ldr	r2, [pc, #208]	; (80041fc <UART_SetConfig+0x4e4>)
 800412c:	fba2 2303 	umull	r2, r3, r2, r3
 8004130:	095b      	lsrs	r3, r3, #5
 8004132:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004136:	441c      	add	r4, r3
 8004138:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800413c:	2200      	movs	r2, #0
 800413e:	673b      	str	r3, [r7, #112]	; 0x70
 8004140:	677a      	str	r2, [r7, #116]	; 0x74
 8004142:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8004146:	4642      	mov	r2, r8
 8004148:	464b      	mov	r3, r9
 800414a:	1891      	adds	r1, r2, r2
 800414c:	60b9      	str	r1, [r7, #8]
 800414e:	415b      	adcs	r3, r3
 8004150:	60fb      	str	r3, [r7, #12]
 8004152:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004156:	4641      	mov	r1, r8
 8004158:	1851      	adds	r1, r2, r1
 800415a:	6039      	str	r1, [r7, #0]
 800415c:	4649      	mov	r1, r9
 800415e:	414b      	adcs	r3, r1
 8004160:	607b      	str	r3, [r7, #4]
 8004162:	f04f 0200 	mov.w	r2, #0
 8004166:	f04f 0300 	mov.w	r3, #0
 800416a:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800416e:	4659      	mov	r1, fp
 8004170:	00cb      	lsls	r3, r1, #3
 8004172:	4651      	mov	r1, sl
 8004174:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004178:	4651      	mov	r1, sl
 800417a:	00ca      	lsls	r2, r1, #3
 800417c:	4610      	mov	r0, r2
 800417e:	4619      	mov	r1, r3
 8004180:	4603      	mov	r3, r0
 8004182:	4642      	mov	r2, r8
 8004184:	189b      	adds	r3, r3, r2
 8004186:	66bb      	str	r3, [r7, #104]	; 0x68
 8004188:	464b      	mov	r3, r9
 800418a:	460a      	mov	r2, r1
 800418c:	eb42 0303 	adc.w	r3, r2, r3
 8004190:	66fb      	str	r3, [r7, #108]	; 0x6c
 8004192:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004196:	685b      	ldr	r3, [r3, #4]
 8004198:	2200      	movs	r2, #0
 800419a:	663b      	str	r3, [r7, #96]	; 0x60
 800419c:	667a      	str	r2, [r7, #100]	; 0x64
 800419e:	f04f 0200 	mov.w	r2, #0
 80041a2:	f04f 0300 	mov.w	r3, #0
 80041a6:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 80041aa:	4649      	mov	r1, r9
 80041ac:	008b      	lsls	r3, r1, #2
 80041ae:	4641      	mov	r1, r8
 80041b0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80041b4:	4641      	mov	r1, r8
 80041b6:	008a      	lsls	r2, r1, #2
 80041b8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80041bc:	f7fc f878 	bl	80002b0 <__aeabi_uldivmod>
 80041c0:	4602      	mov	r2, r0
 80041c2:	460b      	mov	r3, r1
 80041c4:	4b0d      	ldr	r3, [pc, #52]	; (80041fc <UART_SetConfig+0x4e4>)
 80041c6:	fba3 1302 	umull	r1, r3, r3, r2
 80041ca:	095b      	lsrs	r3, r3, #5
 80041cc:	2164      	movs	r1, #100	; 0x64
 80041ce:	fb01 f303 	mul.w	r3, r1, r3
 80041d2:	1ad3      	subs	r3, r2, r3
 80041d4:	011b      	lsls	r3, r3, #4
 80041d6:	3332      	adds	r3, #50	; 0x32
 80041d8:	4a08      	ldr	r2, [pc, #32]	; (80041fc <UART_SetConfig+0x4e4>)
 80041da:	fba2 2303 	umull	r2, r3, r2, r3
 80041de:	095b      	lsrs	r3, r3, #5
 80041e0:	f003 020f 	and.w	r2, r3, #15
 80041e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80041e8:	681b      	ldr	r3, [r3, #0]
 80041ea:	4422      	add	r2, r4
 80041ec:	609a      	str	r2, [r3, #8]
 80041ee:	bf00      	nop
 80041f0:	f507 7780 	add.w	r7, r7, #256	; 0x100
 80041f4:	46bd      	mov	sp, r7
 80041f6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80041fa:	bf00      	nop
 80041fc:	51eb851f 	.word	0x51eb851f

08004200 <SysTick_Handler>:
 8004200:	b580      	push	{r7, lr}
 8004202:	af00      	add	r7, sp, #0
 8004204:	4b05      	ldr	r3, [pc, #20]	; (800421c <SysTick_Handler+0x1c>)
 8004206:	681b      	ldr	r3, [r3, #0]
 8004208:	f001 fdb6 	bl	8005d78 <xTaskGetSchedulerState>
 800420c:	4603      	mov	r3, r0
 800420e:	2b01      	cmp	r3, #1
 8004210:	d001      	beq.n	8004216 <SysTick_Handler+0x16>
 8004212:	f002 fcf9 	bl	8006c08 <xPortSysTickHandler>
 8004216:	bf00      	nop
 8004218:	bd80      	pop	{r7, pc}
 800421a:	bf00      	nop
 800421c:	e000e010 	.word	0xe000e010

08004220 <vApplicationGetIdleTaskMemory>:
 8004220:	b480      	push	{r7}
 8004222:	b085      	sub	sp, #20
 8004224:	af00      	add	r7, sp, #0
 8004226:	60f8      	str	r0, [r7, #12]
 8004228:	60b9      	str	r1, [r7, #8]
 800422a:	607a      	str	r2, [r7, #4]
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	4a07      	ldr	r2, [pc, #28]	; (800424c <vApplicationGetIdleTaskMemory+0x2c>)
 8004230:	601a      	str	r2, [r3, #0]
 8004232:	68bb      	ldr	r3, [r7, #8]
 8004234:	4a06      	ldr	r2, [pc, #24]	; (8004250 <vApplicationGetIdleTaskMemory+0x30>)
 8004236:	601a      	str	r2, [r3, #0]
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	2280      	movs	r2, #128	; 0x80
 800423c:	601a      	str	r2, [r3, #0]
 800423e:	bf00      	nop
 8004240:	3714      	adds	r7, #20
 8004242:	46bd      	mov	sp, r7
 8004244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004248:	4770      	bx	lr
 800424a:	bf00      	nop
 800424c:	2000028c 	.word	0x2000028c
 8004250:	20000348 	.word	0x20000348

08004254 <vApplicationGetTimerTaskMemory>:
 8004254:	b480      	push	{r7}
 8004256:	b085      	sub	sp, #20
 8004258:	af00      	add	r7, sp, #0
 800425a:	60f8      	str	r0, [r7, #12]
 800425c:	60b9      	str	r1, [r7, #8]
 800425e:	607a      	str	r2, [r7, #4]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	4a07      	ldr	r2, [pc, #28]	; (8004280 <vApplicationGetTimerTaskMemory+0x2c>)
 8004264:	601a      	str	r2, [r3, #0]
 8004266:	68bb      	ldr	r3, [r7, #8]
 8004268:	4a06      	ldr	r2, [pc, #24]	; (8004284 <vApplicationGetTimerTaskMemory+0x30>)
 800426a:	601a      	str	r2, [r3, #0]
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004272:	601a      	str	r2, [r3, #0]
 8004274:	bf00      	nop
 8004276:	3714      	adds	r7, #20
 8004278:	46bd      	mov	sp, r7
 800427a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800427e:	4770      	bx	lr
 8004280:	20000548 	.word	0x20000548
 8004284:	20000604 	.word	0x20000604

08004288 <vListInitialise>:
 8004288:	b480      	push	{r7}
 800428a:	b083      	sub	sp, #12
 800428c:	af00      	add	r7, sp, #0
 800428e:	6078      	str	r0, [r7, #4]
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	f103 0208 	add.w	r2, r3, #8
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	605a      	str	r2, [r3, #4]
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	f04f 32ff 	mov.w	r2, #4294967295
 80042a0:	609a      	str	r2, [r3, #8]
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	f103 0208 	add.w	r2, r3, #8
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	60da      	str	r2, [r3, #12]
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	f103 0208 	add.w	r2, r3, #8
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	611a      	str	r2, [r3, #16]
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	2200      	movs	r2, #0
 80042ba:	601a      	str	r2, [r3, #0]
 80042bc:	bf00      	nop
 80042be:	370c      	adds	r7, #12
 80042c0:	46bd      	mov	sp, r7
 80042c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c6:	4770      	bx	lr

080042c8 <vListInitialiseItem>:
 80042c8:	b480      	push	{r7}
 80042ca:	b083      	sub	sp, #12
 80042cc:	af00      	add	r7, sp, #0
 80042ce:	6078      	str	r0, [r7, #4]
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	2200      	movs	r2, #0
 80042d4:	611a      	str	r2, [r3, #16]
 80042d6:	bf00      	nop
 80042d8:	370c      	adds	r7, #12
 80042da:	46bd      	mov	sp, r7
 80042dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042e0:	4770      	bx	lr

080042e2 <vListInsertEnd>:
 80042e2:	b480      	push	{r7}
 80042e4:	b085      	sub	sp, #20
 80042e6:	af00      	add	r7, sp, #0
 80042e8:	6078      	str	r0, [r7, #4]
 80042ea:	6039      	str	r1, [r7, #0]
 80042ec:	687b      	ldr	r3, [r7, #4]
 80042ee:	685b      	ldr	r3, [r3, #4]
 80042f0:	60fb      	str	r3, [r7, #12]
 80042f2:	683b      	ldr	r3, [r7, #0]
 80042f4:	68fa      	ldr	r2, [r7, #12]
 80042f6:	605a      	str	r2, [r3, #4]
 80042f8:	68fb      	ldr	r3, [r7, #12]
 80042fa:	689a      	ldr	r2, [r3, #8]
 80042fc:	683b      	ldr	r3, [r7, #0]
 80042fe:	609a      	str	r2, [r3, #8]
 8004300:	68fb      	ldr	r3, [r7, #12]
 8004302:	689b      	ldr	r3, [r3, #8]
 8004304:	683a      	ldr	r2, [r7, #0]
 8004306:	605a      	str	r2, [r3, #4]
 8004308:	68fb      	ldr	r3, [r7, #12]
 800430a:	683a      	ldr	r2, [r7, #0]
 800430c:	609a      	str	r2, [r3, #8]
 800430e:	683b      	ldr	r3, [r7, #0]
 8004310:	687a      	ldr	r2, [r7, #4]
 8004312:	611a      	str	r2, [r3, #16]
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	1c5a      	adds	r2, r3, #1
 800431a:	687b      	ldr	r3, [r7, #4]
 800431c:	601a      	str	r2, [r3, #0]
 800431e:	bf00      	nop
 8004320:	3714      	adds	r7, #20
 8004322:	46bd      	mov	sp, r7
 8004324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004328:	4770      	bx	lr

0800432a <vListInsert>:
 800432a:	b480      	push	{r7}
 800432c:	b085      	sub	sp, #20
 800432e:	af00      	add	r7, sp, #0
 8004330:	6078      	str	r0, [r7, #4]
 8004332:	6039      	str	r1, [r7, #0]
 8004334:	683b      	ldr	r3, [r7, #0]
 8004336:	681b      	ldr	r3, [r3, #0]
 8004338:	60bb      	str	r3, [r7, #8]
 800433a:	68bb      	ldr	r3, [r7, #8]
 800433c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004340:	d103      	bne.n	800434a <vListInsert+0x20>
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	691b      	ldr	r3, [r3, #16]
 8004346:	60fb      	str	r3, [r7, #12]
 8004348:	e00c      	b.n	8004364 <vListInsert+0x3a>
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	3308      	adds	r3, #8
 800434e:	60fb      	str	r3, [r7, #12]
 8004350:	e002      	b.n	8004358 <vListInsert+0x2e>
 8004352:	68fb      	ldr	r3, [r7, #12]
 8004354:	685b      	ldr	r3, [r3, #4]
 8004356:	60fb      	str	r3, [r7, #12]
 8004358:	68fb      	ldr	r3, [r7, #12]
 800435a:	685b      	ldr	r3, [r3, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	68ba      	ldr	r2, [r7, #8]
 8004360:	429a      	cmp	r2, r3
 8004362:	d2f6      	bcs.n	8004352 <vListInsert+0x28>
 8004364:	68fb      	ldr	r3, [r7, #12]
 8004366:	685a      	ldr	r2, [r3, #4]
 8004368:	683b      	ldr	r3, [r7, #0]
 800436a:	605a      	str	r2, [r3, #4]
 800436c:	683b      	ldr	r3, [r7, #0]
 800436e:	685b      	ldr	r3, [r3, #4]
 8004370:	683a      	ldr	r2, [r7, #0]
 8004372:	609a      	str	r2, [r3, #8]
 8004374:	683b      	ldr	r3, [r7, #0]
 8004376:	68fa      	ldr	r2, [r7, #12]
 8004378:	609a      	str	r2, [r3, #8]
 800437a:	68fb      	ldr	r3, [r7, #12]
 800437c:	683a      	ldr	r2, [r7, #0]
 800437e:	605a      	str	r2, [r3, #4]
 8004380:	683b      	ldr	r3, [r7, #0]
 8004382:	687a      	ldr	r2, [r7, #4]
 8004384:	611a      	str	r2, [r3, #16]
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	1c5a      	adds	r2, r3, #1
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	601a      	str	r2, [r3, #0]
 8004390:	bf00      	nop
 8004392:	3714      	adds	r7, #20
 8004394:	46bd      	mov	sp, r7
 8004396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800439a:	4770      	bx	lr

0800439c <uxListRemove>:
 800439c:	b480      	push	{r7}
 800439e:	b085      	sub	sp, #20
 80043a0:	af00      	add	r7, sp, #0
 80043a2:	6078      	str	r0, [r7, #4]
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	691b      	ldr	r3, [r3, #16]
 80043a8:	60fb      	str	r3, [r7, #12]
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	685b      	ldr	r3, [r3, #4]
 80043ae:	687a      	ldr	r2, [r7, #4]
 80043b0:	6892      	ldr	r2, [r2, #8]
 80043b2:	609a      	str	r2, [r3, #8]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	689b      	ldr	r3, [r3, #8]
 80043b8:	687a      	ldr	r2, [r7, #4]
 80043ba:	6852      	ldr	r2, [r2, #4]
 80043bc:	605a      	str	r2, [r3, #4]
 80043be:	68fb      	ldr	r3, [r7, #12]
 80043c0:	685b      	ldr	r3, [r3, #4]
 80043c2:	687a      	ldr	r2, [r7, #4]
 80043c4:	429a      	cmp	r2, r3
 80043c6:	d103      	bne.n	80043d0 <uxListRemove+0x34>
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	689a      	ldr	r2, [r3, #8]
 80043cc:	68fb      	ldr	r3, [r7, #12]
 80043ce:	605a      	str	r2, [r3, #4]
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	2200      	movs	r2, #0
 80043d4:	611a      	str	r2, [r3, #16]
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	1e5a      	subs	r2, r3, #1
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	601a      	str	r2, [r3, #0]
 80043e0:	68fb      	ldr	r3, [r7, #12]
 80043e2:	681b      	ldr	r3, [r3, #0]
 80043e4:	4618      	mov	r0, r3
 80043e6:	3714      	adds	r7, #20
 80043e8:	46bd      	mov	sp, r7
 80043ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043ee:	4770      	bx	lr

080043f0 <xQueueGenericReset>:
 80043f0:	b580      	push	{r7, lr}
 80043f2:	b084      	sub	sp, #16
 80043f4:	af00      	add	r7, sp, #0
 80043f6:	6078      	str	r0, [r7, #4]
 80043f8:	6039      	str	r1, [r7, #0]
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	60fb      	str	r3, [r7, #12]
 80043fe:	68fb      	ldr	r3, [r7, #12]
 8004400:	2b00      	cmp	r3, #0
 8004402:	d10a      	bne.n	800441a <xQueueGenericReset+0x2a>
 8004404:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004408:	f383 8811 	msr	BASEPRI, r3
 800440c:	f3bf 8f6f 	isb	sy
 8004410:	f3bf 8f4f 	dsb	sy
 8004414:	60bb      	str	r3, [r7, #8]
 8004416:	bf00      	nop
 8004418:	e7fe      	b.n	8004418 <xQueueGenericReset+0x28>
 800441a:	f002 fb63 	bl	8006ae4 <vPortEnterCritical>
 800441e:	68fb      	ldr	r3, [r7, #12]
 8004420:	681a      	ldr	r2, [r3, #0]
 8004422:	68fb      	ldr	r3, [r7, #12]
 8004424:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004426:	68f9      	ldr	r1, [r7, #12]
 8004428:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800442a:	fb01 f303 	mul.w	r3, r1, r3
 800442e:	441a      	add	r2, r3
 8004430:	68fb      	ldr	r3, [r7, #12]
 8004432:	609a      	str	r2, [r3, #8]
 8004434:	68fb      	ldr	r3, [r7, #12]
 8004436:	2200      	movs	r2, #0
 8004438:	639a      	str	r2, [r3, #56]	; 0x38
 800443a:	68fb      	ldr	r3, [r7, #12]
 800443c:	681a      	ldr	r2, [r3, #0]
 800443e:	68fb      	ldr	r3, [r7, #12]
 8004440:	605a      	str	r2, [r3, #4]
 8004442:	68fb      	ldr	r3, [r7, #12]
 8004444:	681a      	ldr	r2, [r3, #0]
 8004446:	68fb      	ldr	r3, [r7, #12]
 8004448:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800444a:	3b01      	subs	r3, #1
 800444c:	68f9      	ldr	r1, [r7, #12]
 800444e:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8004450:	fb01 f303 	mul.w	r3, r1, r3
 8004454:	441a      	add	r2, r3
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	60da      	str	r2, [r3, #12]
 800445a:	68fb      	ldr	r3, [r7, #12]
 800445c:	22ff      	movs	r2, #255	; 0xff
 800445e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004462:	68fb      	ldr	r3, [r7, #12]
 8004464:	22ff      	movs	r2, #255	; 0xff
 8004466:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800446a:	683b      	ldr	r3, [r7, #0]
 800446c:	2b00      	cmp	r3, #0
 800446e:	d114      	bne.n	800449a <xQueueGenericReset+0xaa>
 8004470:	68fb      	ldr	r3, [r7, #12]
 8004472:	691b      	ldr	r3, [r3, #16]
 8004474:	2b00      	cmp	r3, #0
 8004476:	d01a      	beq.n	80044ae <xQueueGenericReset+0xbe>
 8004478:	68fb      	ldr	r3, [r7, #12]
 800447a:	3310      	adds	r3, #16
 800447c:	4618      	mov	r0, r3
 800447e:	f001 fab9 	bl	80059f4 <xTaskRemoveFromEventList>
 8004482:	4603      	mov	r3, r0
 8004484:	2b00      	cmp	r3, #0
 8004486:	d012      	beq.n	80044ae <xQueueGenericReset+0xbe>
 8004488:	4b0c      	ldr	r3, [pc, #48]	; (80044bc <xQueueGenericReset+0xcc>)
 800448a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800448e:	601a      	str	r2, [r3, #0]
 8004490:	f3bf 8f4f 	dsb	sy
 8004494:	f3bf 8f6f 	isb	sy
 8004498:	e009      	b.n	80044ae <xQueueGenericReset+0xbe>
 800449a:	68fb      	ldr	r3, [r7, #12]
 800449c:	3310      	adds	r3, #16
 800449e:	4618      	mov	r0, r3
 80044a0:	f7ff fef2 	bl	8004288 <vListInitialise>
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	3324      	adds	r3, #36	; 0x24
 80044a8:	4618      	mov	r0, r3
 80044aa:	f7ff feed 	bl	8004288 <vListInitialise>
 80044ae:	f002 fb49 	bl	8006b44 <vPortExitCritical>
 80044b2:	2301      	movs	r3, #1
 80044b4:	4618      	mov	r0, r3
 80044b6:	3710      	adds	r7, #16
 80044b8:	46bd      	mov	sp, r7
 80044ba:	bd80      	pop	{r7, pc}
 80044bc:	e000ed04 	.word	0xe000ed04

080044c0 <xQueueGenericCreateStatic>:
 80044c0:	b580      	push	{r7, lr}
 80044c2:	b08e      	sub	sp, #56	; 0x38
 80044c4:	af02      	add	r7, sp, #8
 80044c6:	60f8      	str	r0, [r7, #12]
 80044c8:	60b9      	str	r1, [r7, #8]
 80044ca:	607a      	str	r2, [r7, #4]
 80044cc:	603b      	str	r3, [r7, #0]
 80044ce:	68fb      	ldr	r3, [r7, #12]
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	d10a      	bne.n	80044ea <xQueueGenericCreateStatic+0x2a>
 80044d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80044d8:	f383 8811 	msr	BASEPRI, r3
 80044dc:	f3bf 8f6f 	isb	sy
 80044e0:	f3bf 8f4f 	dsb	sy
 80044e4:	62bb      	str	r3, [r7, #40]	; 0x28
 80044e6:	bf00      	nop
 80044e8:	e7fe      	b.n	80044e8 <xQueueGenericCreateStatic+0x28>
 80044ea:	683b      	ldr	r3, [r7, #0]
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	d10a      	bne.n	8004506 <xQueueGenericCreateStatic+0x46>
 80044f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80044f4:	f383 8811 	msr	BASEPRI, r3
 80044f8:	f3bf 8f6f 	isb	sy
 80044fc:	f3bf 8f4f 	dsb	sy
 8004500:	627b      	str	r3, [r7, #36]	; 0x24
 8004502:	bf00      	nop
 8004504:	e7fe      	b.n	8004504 <xQueueGenericCreateStatic+0x44>
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	2b00      	cmp	r3, #0
 800450a:	d002      	beq.n	8004512 <xQueueGenericCreateStatic+0x52>
 800450c:	68bb      	ldr	r3, [r7, #8]
 800450e:	2b00      	cmp	r3, #0
 8004510:	d001      	beq.n	8004516 <xQueueGenericCreateStatic+0x56>
 8004512:	2301      	movs	r3, #1
 8004514:	e000      	b.n	8004518 <xQueueGenericCreateStatic+0x58>
 8004516:	2300      	movs	r3, #0
 8004518:	2b00      	cmp	r3, #0
 800451a:	d10a      	bne.n	8004532 <xQueueGenericCreateStatic+0x72>
 800451c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004520:	f383 8811 	msr	BASEPRI, r3
 8004524:	f3bf 8f6f 	isb	sy
 8004528:	f3bf 8f4f 	dsb	sy
 800452c:	623b      	str	r3, [r7, #32]
 800452e:	bf00      	nop
 8004530:	e7fe      	b.n	8004530 <xQueueGenericCreateStatic+0x70>
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	2b00      	cmp	r3, #0
 8004536:	d102      	bne.n	800453e <xQueueGenericCreateStatic+0x7e>
 8004538:	68bb      	ldr	r3, [r7, #8]
 800453a:	2b00      	cmp	r3, #0
 800453c:	d101      	bne.n	8004542 <xQueueGenericCreateStatic+0x82>
 800453e:	2301      	movs	r3, #1
 8004540:	e000      	b.n	8004544 <xQueueGenericCreateStatic+0x84>
 8004542:	2300      	movs	r3, #0
 8004544:	2b00      	cmp	r3, #0
 8004546:	d10a      	bne.n	800455e <xQueueGenericCreateStatic+0x9e>
 8004548:	f04f 0350 	mov.w	r3, #80	; 0x50
 800454c:	f383 8811 	msr	BASEPRI, r3
 8004550:	f3bf 8f6f 	isb	sy
 8004554:	f3bf 8f4f 	dsb	sy
 8004558:	61fb      	str	r3, [r7, #28]
 800455a:	bf00      	nop
 800455c:	e7fe      	b.n	800455c <xQueueGenericCreateStatic+0x9c>
 800455e:	2350      	movs	r3, #80	; 0x50
 8004560:	617b      	str	r3, [r7, #20]
 8004562:	697b      	ldr	r3, [r7, #20]
 8004564:	2b50      	cmp	r3, #80	; 0x50
 8004566:	d00a      	beq.n	800457e <xQueueGenericCreateStatic+0xbe>
 8004568:	f04f 0350 	mov.w	r3, #80	; 0x50
 800456c:	f383 8811 	msr	BASEPRI, r3
 8004570:	f3bf 8f6f 	isb	sy
 8004574:	f3bf 8f4f 	dsb	sy
 8004578:	61bb      	str	r3, [r7, #24]
 800457a:	bf00      	nop
 800457c:	e7fe      	b.n	800457c <xQueueGenericCreateStatic+0xbc>
 800457e:	697b      	ldr	r3, [r7, #20]
 8004580:	683b      	ldr	r3, [r7, #0]
 8004582:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004584:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004586:	2b00      	cmp	r3, #0
 8004588:	d00d      	beq.n	80045a6 <xQueueGenericCreateStatic+0xe6>
 800458a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800458c:	2201      	movs	r2, #1
 800458e:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004592:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 8004596:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004598:	9300      	str	r3, [sp, #0]
 800459a:	4613      	mov	r3, r2
 800459c:	687a      	ldr	r2, [r7, #4]
 800459e:	68b9      	ldr	r1, [r7, #8]
 80045a0:	68f8      	ldr	r0, [r7, #12]
 80045a2:	f000 f83f 	bl	8004624 <prvInitialiseNewQueue>
 80045a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80045a8:	4618      	mov	r0, r3
 80045aa:	3730      	adds	r7, #48	; 0x30
 80045ac:	46bd      	mov	sp, r7
 80045ae:	bd80      	pop	{r7, pc}

080045b0 <xQueueGenericCreate>:
 80045b0:	b580      	push	{r7, lr}
 80045b2:	b08a      	sub	sp, #40	; 0x28
 80045b4:	af02      	add	r7, sp, #8
 80045b6:	60f8      	str	r0, [r7, #12]
 80045b8:	60b9      	str	r1, [r7, #8]
 80045ba:	4613      	mov	r3, r2
 80045bc:	71fb      	strb	r3, [r7, #7]
 80045be:	68fb      	ldr	r3, [r7, #12]
 80045c0:	2b00      	cmp	r3, #0
 80045c2:	d10a      	bne.n	80045da <xQueueGenericCreate+0x2a>
 80045c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80045c8:	f383 8811 	msr	BASEPRI, r3
 80045cc:	f3bf 8f6f 	isb	sy
 80045d0:	f3bf 8f4f 	dsb	sy
 80045d4:	613b      	str	r3, [r7, #16]
 80045d6:	bf00      	nop
 80045d8:	e7fe      	b.n	80045d8 <xQueueGenericCreate+0x28>
 80045da:	68fb      	ldr	r3, [r7, #12]
 80045dc:	68ba      	ldr	r2, [r7, #8]
 80045de:	fb02 f303 	mul.w	r3, r2, r3
 80045e2:	61fb      	str	r3, [r7, #28]
 80045e4:	69fb      	ldr	r3, [r7, #28]
 80045e6:	3350      	adds	r3, #80	; 0x50
 80045e8:	4618      	mov	r0, r3
 80045ea:	f002 fb9d 	bl	8006d28 <pvPortMalloc>
 80045ee:	61b8      	str	r0, [r7, #24]
 80045f0:	69bb      	ldr	r3, [r7, #24]
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	d011      	beq.n	800461a <xQueueGenericCreate+0x6a>
 80045f6:	69bb      	ldr	r3, [r7, #24]
 80045f8:	617b      	str	r3, [r7, #20]
 80045fa:	697b      	ldr	r3, [r7, #20]
 80045fc:	3350      	adds	r3, #80	; 0x50
 80045fe:	617b      	str	r3, [r7, #20]
 8004600:	69bb      	ldr	r3, [r7, #24]
 8004602:	2200      	movs	r2, #0
 8004604:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8004608:	79fa      	ldrb	r2, [r7, #7]
 800460a:	69bb      	ldr	r3, [r7, #24]
 800460c:	9300      	str	r3, [sp, #0]
 800460e:	4613      	mov	r3, r2
 8004610:	697a      	ldr	r2, [r7, #20]
 8004612:	68b9      	ldr	r1, [r7, #8]
 8004614:	68f8      	ldr	r0, [r7, #12]
 8004616:	f000 f805 	bl	8004624 <prvInitialiseNewQueue>
 800461a:	69bb      	ldr	r3, [r7, #24]
 800461c:	4618      	mov	r0, r3
 800461e:	3720      	adds	r7, #32
 8004620:	46bd      	mov	sp, r7
 8004622:	bd80      	pop	{r7, pc}

08004624 <prvInitialiseNewQueue>:
 8004624:	b580      	push	{r7, lr}
 8004626:	b084      	sub	sp, #16
 8004628:	af00      	add	r7, sp, #0
 800462a:	60f8      	str	r0, [r7, #12]
 800462c:	60b9      	str	r1, [r7, #8]
 800462e:	607a      	str	r2, [r7, #4]
 8004630:	70fb      	strb	r3, [r7, #3]
 8004632:	68bb      	ldr	r3, [r7, #8]
 8004634:	2b00      	cmp	r3, #0
 8004636:	d103      	bne.n	8004640 <prvInitialiseNewQueue+0x1c>
 8004638:	69bb      	ldr	r3, [r7, #24]
 800463a:	69ba      	ldr	r2, [r7, #24]
 800463c:	601a      	str	r2, [r3, #0]
 800463e:	e002      	b.n	8004646 <prvInitialiseNewQueue+0x22>
 8004640:	69bb      	ldr	r3, [r7, #24]
 8004642:	687a      	ldr	r2, [r7, #4]
 8004644:	601a      	str	r2, [r3, #0]
 8004646:	69bb      	ldr	r3, [r7, #24]
 8004648:	68fa      	ldr	r2, [r7, #12]
 800464a:	63da      	str	r2, [r3, #60]	; 0x3c
 800464c:	69bb      	ldr	r3, [r7, #24]
 800464e:	68ba      	ldr	r2, [r7, #8]
 8004650:	641a      	str	r2, [r3, #64]	; 0x40
 8004652:	2101      	movs	r1, #1
 8004654:	69b8      	ldr	r0, [r7, #24]
 8004656:	f7ff fecb 	bl	80043f0 <xQueueGenericReset>
 800465a:	69bb      	ldr	r3, [r7, #24]
 800465c:	78fa      	ldrb	r2, [r7, #3]
 800465e:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8004662:	bf00      	nop
 8004664:	3710      	adds	r7, #16
 8004666:	46bd      	mov	sp, r7
 8004668:	bd80      	pop	{r7, pc}

0800466a <prvInitialiseMutex>:
 800466a:	b580      	push	{r7, lr}
 800466c:	b082      	sub	sp, #8
 800466e:	af00      	add	r7, sp, #0
 8004670:	6078      	str	r0, [r7, #4]
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	2b00      	cmp	r3, #0
 8004676:	d00e      	beq.n	8004696 <prvInitialiseMutex+0x2c>
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	2200      	movs	r2, #0
 800467c:	609a      	str	r2, [r3, #8]
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	2200      	movs	r2, #0
 8004682:	601a      	str	r2, [r3, #0]
 8004684:	687b      	ldr	r3, [r7, #4]
 8004686:	2200      	movs	r2, #0
 8004688:	60da      	str	r2, [r3, #12]
 800468a:	2300      	movs	r3, #0
 800468c:	2200      	movs	r2, #0
 800468e:	2100      	movs	r1, #0
 8004690:	6878      	ldr	r0, [r7, #4]
 8004692:	f000 f81d 	bl	80046d0 <xQueueGenericSend>
 8004696:	bf00      	nop
 8004698:	3708      	adds	r7, #8
 800469a:	46bd      	mov	sp, r7
 800469c:	bd80      	pop	{r7, pc}

0800469e <xQueueCreateMutex>:
 800469e:	b580      	push	{r7, lr}
 80046a0:	b086      	sub	sp, #24
 80046a2:	af00      	add	r7, sp, #0
 80046a4:	4603      	mov	r3, r0
 80046a6:	71fb      	strb	r3, [r7, #7]
 80046a8:	2301      	movs	r3, #1
 80046aa:	617b      	str	r3, [r7, #20]
 80046ac:	2300      	movs	r3, #0
 80046ae:	613b      	str	r3, [r7, #16]
 80046b0:	79fb      	ldrb	r3, [r7, #7]
 80046b2:	461a      	mov	r2, r3
 80046b4:	6939      	ldr	r1, [r7, #16]
 80046b6:	6978      	ldr	r0, [r7, #20]
 80046b8:	f7ff ff7a 	bl	80045b0 <xQueueGenericCreate>
 80046bc:	60f8      	str	r0, [r7, #12]
 80046be:	68f8      	ldr	r0, [r7, #12]
 80046c0:	f7ff ffd3 	bl	800466a <prvInitialiseMutex>
 80046c4:	68fb      	ldr	r3, [r7, #12]
 80046c6:	4618      	mov	r0, r3
 80046c8:	3718      	adds	r7, #24
 80046ca:	46bd      	mov	sp, r7
 80046cc:	bd80      	pop	{r7, pc}
	...

080046d0 <xQueueGenericSend>:
 80046d0:	b580      	push	{r7, lr}
 80046d2:	b08e      	sub	sp, #56	; 0x38
 80046d4:	af00      	add	r7, sp, #0
 80046d6:	60f8      	str	r0, [r7, #12]
 80046d8:	60b9      	str	r1, [r7, #8]
 80046da:	607a      	str	r2, [r7, #4]
 80046dc:	603b      	str	r3, [r7, #0]
 80046de:	2300      	movs	r3, #0
 80046e0:	637b      	str	r3, [r7, #52]	; 0x34
 80046e2:	68fb      	ldr	r3, [r7, #12]
 80046e4:	633b      	str	r3, [r7, #48]	; 0x30
 80046e6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80046e8:	2b00      	cmp	r3, #0
 80046ea:	d10a      	bne.n	8004702 <xQueueGenericSend+0x32>
 80046ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80046f0:	f383 8811 	msr	BASEPRI, r3
 80046f4:	f3bf 8f6f 	isb	sy
 80046f8:	f3bf 8f4f 	dsb	sy
 80046fc:	62bb      	str	r3, [r7, #40]	; 0x28
 80046fe:	bf00      	nop
 8004700:	e7fe      	b.n	8004700 <xQueueGenericSend+0x30>
 8004702:	68bb      	ldr	r3, [r7, #8]
 8004704:	2b00      	cmp	r3, #0
 8004706:	d103      	bne.n	8004710 <xQueueGenericSend+0x40>
 8004708:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800470a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800470c:	2b00      	cmp	r3, #0
 800470e:	d101      	bne.n	8004714 <xQueueGenericSend+0x44>
 8004710:	2301      	movs	r3, #1
 8004712:	e000      	b.n	8004716 <xQueueGenericSend+0x46>
 8004714:	2300      	movs	r3, #0
 8004716:	2b00      	cmp	r3, #0
 8004718:	d10a      	bne.n	8004730 <xQueueGenericSend+0x60>
 800471a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800471e:	f383 8811 	msr	BASEPRI, r3
 8004722:	f3bf 8f6f 	isb	sy
 8004726:	f3bf 8f4f 	dsb	sy
 800472a:	627b      	str	r3, [r7, #36]	; 0x24
 800472c:	bf00      	nop
 800472e:	e7fe      	b.n	800472e <xQueueGenericSend+0x5e>
 8004730:	683b      	ldr	r3, [r7, #0]
 8004732:	2b02      	cmp	r3, #2
 8004734:	d103      	bne.n	800473e <xQueueGenericSend+0x6e>
 8004736:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004738:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800473a:	2b01      	cmp	r3, #1
 800473c:	d101      	bne.n	8004742 <xQueueGenericSend+0x72>
 800473e:	2301      	movs	r3, #1
 8004740:	e000      	b.n	8004744 <xQueueGenericSend+0x74>
 8004742:	2300      	movs	r3, #0
 8004744:	2b00      	cmp	r3, #0
 8004746:	d10a      	bne.n	800475e <xQueueGenericSend+0x8e>
 8004748:	f04f 0350 	mov.w	r3, #80	; 0x50
 800474c:	f383 8811 	msr	BASEPRI, r3
 8004750:	f3bf 8f6f 	isb	sy
 8004754:	f3bf 8f4f 	dsb	sy
 8004758:	623b      	str	r3, [r7, #32]
 800475a:	bf00      	nop
 800475c:	e7fe      	b.n	800475c <xQueueGenericSend+0x8c>
 800475e:	f001 fb0b 	bl	8005d78 <xTaskGetSchedulerState>
 8004762:	4603      	mov	r3, r0
 8004764:	2b00      	cmp	r3, #0
 8004766:	d102      	bne.n	800476e <xQueueGenericSend+0x9e>
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	2b00      	cmp	r3, #0
 800476c:	d101      	bne.n	8004772 <xQueueGenericSend+0xa2>
 800476e:	2301      	movs	r3, #1
 8004770:	e000      	b.n	8004774 <xQueueGenericSend+0xa4>
 8004772:	2300      	movs	r3, #0
 8004774:	2b00      	cmp	r3, #0
 8004776:	d10a      	bne.n	800478e <xQueueGenericSend+0xbe>
 8004778:	f04f 0350 	mov.w	r3, #80	; 0x50
 800477c:	f383 8811 	msr	BASEPRI, r3
 8004780:	f3bf 8f6f 	isb	sy
 8004784:	f3bf 8f4f 	dsb	sy
 8004788:	61fb      	str	r3, [r7, #28]
 800478a:	bf00      	nop
 800478c:	e7fe      	b.n	800478c <xQueueGenericSend+0xbc>
 800478e:	f002 f9a9 	bl	8006ae4 <vPortEnterCritical>
 8004792:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004794:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004796:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004798:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800479a:	429a      	cmp	r2, r3
 800479c:	d302      	bcc.n	80047a4 <xQueueGenericSend+0xd4>
 800479e:	683b      	ldr	r3, [r7, #0]
 80047a0:	2b02      	cmp	r3, #2
 80047a2:	d129      	bne.n	80047f8 <xQueueGenericSend+0x128>
 80047a4:	683a      	ldr	r2, [r7, #0]
 80047a6:	68b9      	ldr	r1, [r7, #8]
 80047a8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80047aa:	f000 fb2f 	bl	8004e0c <prvCopyDataToQueue>
 80047ae:	62f8      	str	r0, [r7, #44]	; 0x2c
 80047b0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80047b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d010      	beq.n	80047da <xQueueGenericSend+0x10a>
 80047b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80047ba:	3324      	adds	r3, #36	; 0x24
 80047bc:	4618      	mov	r0, r3
 80047be:	f001 f919 	bl	80059f4 <xTaskRemoveFromEventList>
 80047c2:	4603      	mov	r3, r0
 80047c4:	2b00      	cmp	r3, #0
 80047c6:	d013      	beq.n	80047f0 <xQueueGenericSend+0x120>
 80047c8:	4b3f      	ldr	r3, [pc, #252]	; (80048c8 <xQueueGenericSend+0x1f8>)
 80047ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80047ce:	601a      	str	r2, [r3, #0]
 80047d0:	f3bf 8f4f 	dsb	sy
 80047d4:	f3bf 8f6f 	isb	sy
 80047d8:	e00a      	b.n	80047f0 <xQueueGenericSend+0x120>
 80047da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80047dc:	2b00      	cmp	r3, #0
 80047de:	d007      	beq.n	80047f0 <xQueueGenericSend+0x120>
 80047e0:	4b39      	ldr	r3, [pc, #228]	; (80048c8 <xQueueGenericSend+0x1f8>)
 80047e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80047e6:	601a      	str	r2, [r3, #0]
 80047e8:	f3bf 8f4f 	dsb	sy
 80047ec:	f3bf 8f6f 	isb	sy
 80047f0:	f002 f9a8 	bl	8006b44 <vPortExitCritical>
 80047f4:	2301      	movs	r3, #1
 80047f6:	e063      	b.n	80048c0 <xQueueGenericSend+0x1f0>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	2b00      	cmp	r3, #0
 80047fc:	d103      	bne.n	8004806 <xQueueGenericSend+0x136>
 80047fe:	f002 f9a1 	bl	8006b44 <vPortExitCritical>
 8004802:	2300      	movs	r3, #0
 8004804:	e05c      	b.n	80048c0 <xQueueGenericSend+0x1f0>
 8004806:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004808:	2b00      	cmp	r3, #0
 800480a:	d106      	bne.n	800481a <xQueueGenericSend+0x14a>
 800480c:	f107 0314 	add.w	r3, r7, #20
 8004810:	4618      	mov	r0, r3
 8004812:	f001 f953 	bl	8005abc <vTaskInternalSetTimeOutState>
 8004816:	2301      	movs	r3, #1
 8004818:	637b      	str	r3, [r7, #52]	; 0x34
 800481a:	f002 f993 	bl	8006b44 <vPortExitCritical>
 800481e:	f000 febf 	bl	80055a0 <vTaskSuspendAll>
 8004822:	f002 f95f 	bl	8006ae4 <vPortEnterCritical>
 8004826:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004828:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800482c:	b25b      	sxtb	r3, r3
 800482e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004832:	d103      	bne.n	800483c <xQueueGenericSend+0x16c>
 8004834:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004836:	2200      	movs	r2, #0
 8004838:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800483c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800483e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004842:	b25b      	sxtb	r3, r3
 8004844:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004848:	d103      	bne.n	8004852 <xQueueGenericSend+0x182>
 800484a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800484c:	2200      	movs	r2, #0
 800484e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004852:	f002 f977 	bl	8006b44 <vPortExitCritical>
 8004856:	1d3a      	adds	r2, r7, #4
 8004858:	f107 0314 	add.w	r3, r7, #20
 800485c:	4611      	mov	r1, r2
 800485e:	4618      	mov	r0, r3
 8004860:	f001 f942 	bl	8005ae8 <xTaskCheckForTimeOut>
 8004864:	4603      	mov	r3, r0
 8004866:	2b00      	cmp	r3, #0
 8004868:	d124      	bne.n	80048b4 <xQueueGenericSend+0x1e4>
 800486a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800486c:	f000 fbc6 	bl	8004ffc <prvIsQueueFull>
 8004870:	4603      	mov	r3, r0
 8004872:	2b00      	cmp	r3, #0
 8004874:	d018      	beq.n	80048a8 <xQueueGenericSend+0x1d8>
 8004876:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004878:	3310      	adds	r3, #16
 800487a:	687a      	ldr	r2, [r7, #4]
 800487c:	4611      	mov	r1, r2
 800487e:	4618      	mov	r0, r3
 8004880:	f001 f868 	bl	8005954 <vTaskPlaceOnEventList>
 8004884:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8004886:	f000 fb51 	bl	8004f2c <prvUnlockQueue>
 800488a:	f000 fe97 	bl	80055bc <xTaskResumeAll>
 800488e:	4603      	mov	r3, r0
 8004890:	2b00      	cmp	r3, #0
 8004892:	f47f af7c 	bne.w	800478e <xQueueGenericSend+0xbe>
 8004896:	4b0c      	ldr	r3, [pc, #48]	; (80048c8 <xQueueGenericSend+0x1f8>)
 8004898:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800489c:	601a      	str	r2, [r3, #0]
 800489e:	f3bf 8f4f 	dsb	sy
 80048a2:	f3bf 8f6f 	isb	sy
 80048a6:	e772      	b.n	800478e <xQueueGenericSend+0xbe>
 80048a8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80048aa:	f000 fb3f 	bl	8004f2c <prvUnlockQueue>
 80048ae:	f000 fe85 	bl	80055bc <xTaskResumeAll>
 80048b2:	e76c      	b.n	800478e <xQueueGenericSend+0xbe>
 80048b4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80048b6:	f000 fb39 	bl	8004f2c <prvUnlockQueue>
 80048ba:	f000 fe7f 	bl	80055bc <xTaskResumeAll>
 80048be:	2300      	movs	r3, #0
 80048c0:	4618      	mov	r0, r3
 80048c2:	3738      	adds	r7, #56	; 0x38
 80048c4:	46bd      	mov	sp, r7
 80048c6:	bd80      	pop	{r7, pc}
 80048c8:	e000ed04 	.word	0xe000ed04

080048cc <xQueueGenericSendFromISR>:
 80048cc:	b580      	push	{r7, lr}
 80048ce:	b090      	sub	sp, #64	; 0x40
 80048d0:	af00      	add	r7, sp, #0
 80048d2:	60f8      	str	r0, [r7, #12]
 80048d4:	60b9      	str	r1, [r7, #8]
 80048d6:	607a      	str	r2, [r7, #4]
 80048d8:	603b      	str	r3, [r7, #0]
 80048da:	68fb      	ldr	r3, [r7, #12]
 80048dc:	63bb      	str	r3, [r7, #56]	; 0x38
 80048de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80048e0:	2b00      	cmp	r3, #0
 80048e2:	d10a      	bne.n	80048fa <xQueueGenericSendFromISR+0x2e>
 80048e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80048e8:	f383 8811 	msr	BASEPRI, r3
 80048ec:	f3bf 8f6f 	isb	sy
 80048f0:	f3bf 8f4f 	dsb	sy
 80048f4:	62bb      	str	r3, [r7, #40]	; 0x28
 80048f6:	bf00      	nop
 80048f8:	e7fe      	b.n	80048f8 <xQueueGenericSendFromISR+0x2c>
 80048fa:	68bb      	ldr	r3, [r7, #8]
 80048fc:	2b00      	cmp	r3, #0
 80048fe:	d103      	bne.n	8004908 <xQueueGenericSendFromISR+0x3c>
 8004900:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004902:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004904:	2b00      	cmp	r3, #0
 8004906:	d101      	bne.n	800490c <xQueueGenericSendFromISR+0x40>
 8004908:	2301      	movs	r3, #1
 800490a:	e000      	b.n	800490e <xQueueGenericSendFromISR+0x42>
 800490c:	2300      	movs	r3, #0
 800490e:	2b00      	cmp	r3, #0
 8004910:	d10a      	bne.n	8004928 <xQueueGenericSendFromISR+0x5c>
 8004912:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004916:	f383 8811 	msr	BASEPRI, r3
 800491a:	f3bf 8f6f 	isb	sy
 800491e:	f3bf 8f4f 	dsb	sy
 8004922:	627b      	str	r3, [r7, #36]	; 0x24
 8004924:	bf00      	nop
 8004926:	e7fe      	b.n	8004926 <xQueueGenericSendFromISR+0x5a>
 8004928:	683b      	ldr	r3, [r7, #0]
 800492a:	2b02      	cmp	r3, #2
 800492c:	d103      	bne.n	8004936 <xQueueGenericSendFromISR+0x6a>
 800492e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004930:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004932:	2b01      	cmp	r3, #1
 8004934:	d101      	bne.n	800493a <xQueueGenericSendFromISR+0x6e>
 8004936:	2301      	movs	r3, #1
 8004938:	e000      	b.n	800493c <xQueueGenericSendFromISR+0x70>
 800493a:	2300      	movs	r3, #0
 800493c:	2b00      	cmp	r3, #0
 800493e:	d10a      	bne.n	8004956 <xQueueGenericSendFromISR+0x8a>
 8004940:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004944:	f383 8811 	msr	BASEPRI, r3
 8004948:	f3bf 8f6f 	isb	sy
 800494c:	f3bf 8f4f 	dsb	sy
 8004950:	623b      	str	r3, [r7, #32]
 8004952:	bf00      	nop
 8004954:	e7fe      	b.n	8004954 <xQueueGenericSendFromISR+0x88>
 8004956:	f002 f9a7 	bl	8006ca8 <vPortValidateInterruptPriority>
 800495a:	f3ef 8211 	mrs	r2, BASEPRI
 800495e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004962:	f383 8811 	msr	BASEPRI, r3
 8004966:	f3bf 8f6f 	isb	sy
 800496a:	f3bf 8f4f 	dsb	sy
 800496e:	61fa      	str	r2, [r7, #28]
 8004970:	61bb      	str	r3, [r7, #24]
 8004972:	69fb      	ldr	r3, [r7, #28]
 8004974:	637b      	str	r3, [r7, #52]	; 0x34
 8004976:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004978:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800497a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800497c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800497e:	429a      	cmp	r2, r3
 8004980:	d302      	bcc.n	8004988 <xQueueGenericSendFromISR+0xbc>
 8004982:	683b      	ldr	r3, [r7, #0]
 8004984:	2b02      	cmp	r3, #2
 8004986:	d12f      	bne.n	80049e8 <xQueueGenericSendFromISR+0x11c>
 8004988:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800498a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800498e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8004992:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004994:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004996:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004998:	683a      	ldr	r2, [r7, #0]
 800499a:	68b9      	ldr	r1, [r7, #8]
 800499c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 800499e:	f000 fa35 	bl	8004e0c <prvCopyDataToQueue>
 80049a2:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 80049a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049aa:	d112      	bne.n	80049d2 <xQueueGenericSendFromISR+0x106>
 80049ac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049b0:	2b00      	cmp	r3, #0
 80049b2:	d016      	beq.n	80049e2 <xQueueGenericSendFromISR+0x116>
 80049b4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049b6:	3324      	adds	r3, #36	; 0x24
 80049b8:	4618      	mov	r0, r3
 80049ba:	f001 f81b 	bl	80059f4 <xTaskRemoveFromEventList>
 80049be:	4603      	mov	r3, r0
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d00e      	beq.n	80049e2 <xQueueGenericSendFromISR+0x116>
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	2b00      	cmp	r3, #0
 80049c8:	d00b      	beq.n	80049e2 <xQueueGenericSendFromISR+0x116>
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	2201      	movs	r2, #1
 80049ce:	601a      	str	r2, [r3, #0]
 80049d0:	e007      	b.n	80049e2 <xQueueGenericSendFromISR+0x116>
 80049d2:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80049d6:	3301      	adds	r3, #1
 80049d8:	b2db      	uxtb	r3, r3
 80049da:	b25a      	sxtb	r2, r3
 80049dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049de:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80049e2:	2301      	movs	r3, #1
 80049e4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80049e6:	e001      	b.n	80049ec <xQueueGenericSendFromISR+0x120>
 80049e8:	2300      	movs	r3, #0
 80049ea:	63fb      	str	r3, [r7, #60]	; 0x3c
 80049ec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80049ee:	617b      	str	r3, [r7, #20]
 80049f0:	697b      	ldr	r3, [r7, #20]
 80049f2:	f383 8811 	msr	BASEPRI, r3
 80049f6:	bf00      	nop
 80049f8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80049fa:	4618      	mov	r0, r3
 80049fc:	3740      	adds	r7, #64	; 0x40
 80049fe:	46bd      	mov	sp, r7
 8004a00:	bd80      	pop	{r7, pc}
	...

08004a04 <xQueueReceive>:
 8004a04:	b580      	push	{r7, lr}
 8004a06:	b08c      	sub	sp, #48	; 0x30
 8004a08:	af00      	add	r7, sp, #0
 8004a0a:	60f8      	str	r0, [r7, #12]
 8004a0c:	60b9      	str	r1, [r7, #8]
 8004a0e:	607a      	str	r2, [r7, #4]
 8004a10:	2300      	movs	r3, #0
 8004a12:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	62bb      	str	r3, [r7, #40]	; 0x28
 8004a18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004a1a:	2b00      	cmp	r3, #0
 8004a1c:	d10a      	bne.n	8004a34 <xQueueReceive+0x30>
 8004a1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a22:	f383 8811 	msr	BASEPRI, r3
 8004a26:	f3bf 8f6f 	isb	sy
 8004a2a:	f3bf 8f4f 	dsb	sy
 8004a2e:	623b      	str	r3, [r7, #32]
 8004a30:	bf00      	nop
 8004a32:	e7fe      	b.n	8004a32 <xQueueReceive+0x2e>
 8004a34:	68bb      	ldr	r3, [r7, #8]
 8004a36:	2b00      	cmp	r3, #0
 8004a38:	d103      	bne.n	8004a42 <xQueueReceive+0x3e>
 8004a3a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004a3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a3e:	2b00      	cmp	r3, #0
 8004a40:	d101      	bne.n	8004a46 <xQueueReceive+0x42>
 8004a42:	2301      	movs	r3, #1
 8004a44:	e000      	b.n	8004a48 <xQueueReceive+0x44>
 8004a46:	2300      	movs	r3, #0
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	d10a      	bne.n	8004a62 <xQueueReceive+0x5e>
 8004a4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a50:	f383 8811 	msr	BASEPRI, r3
 8004a54:	f3bf 8f6f 	isb	sy
 8004a58:	f3bf 8f4f 	dsb	sy
 8004a5c:	61fb      	str	r3, [r7, #28]
 8004a5e:	bf00      	nop
 8004a60:	e7fe      	b.n	8004a60 <xQueueReceive+0x5c>
 8004a62:	f001 f989 	bl	8005d78 <xTaskGetSchedulerState>
 8004a66:	4603      	mov	r3, r0
 8004a68:	2b00      	cmp	r3, #0
 8004a6a:	d102      	bne.n	8004a72 <xQueueReceive+0x6e>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	2b00      	cmp	r3, #0
 8004a70:	d101      	bne.n	8004a76 <xQueueReceive+0x72>
 8004a72:	2301      	movs	r3, #1
 8004a74:	e000      	b.n	8004a78 <xQueueReceive+0x74>
 8004a76:	2300      	movs	r3, #0
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	d10a      	bne.n	8004a92 <xQueueReceive+0x8e>
 8004a7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a80:	f383 8811 	msr	BASEPRI, r3
 8004a84:	f3bf 8f6f 	isb	sy
 8004a88:	f3bf 8f4f 	dsb	sy
 8004a8c:	61bb      	str	r3, [r7, #24]
 8004a8e:	bf00      	nop
 8004a90:	e7fe      	b.n	8004a90 <xQueueReceive+0x8c>
 8004a92:	f002 f827 	bl	8006ae4 <vPortEnterCritical>
 8004a96:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004a98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004a9a:	627b      	str	r3, [r7, #36]	; 0x24
 8004a9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d01f      	beq.n	8004ae2 <xQueueReceive+0xde>
 8004aa2:	68b9      	ldr	r1, [r7, #8]
 8004aa4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004aa6:	f000 fa1b 	bl	8004ee0 <prvCopyDataFromQueue>
 8004aaa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004aac:	1e5a      	subs	r2, r3, #1
 8004aae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004ab0:	639a      	str	r2, [r3, #56]	; 0x38
 8004ab2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004ab4:	691b      	ldr	r3, [r3, #16]
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d00f      	beq.n	8004ada <xQueueReceive+0xd6>
 8004aba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004abc:	3310      	adds	r3, #16
 8004abe:	4618      	mov	r0, r3
 8004ac0:	f000 ff98 	bl	80059f4 <xTaskRemoveFromEventList>
 8004ac4:	4603      	mov	r3, r0
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	d007      	beq.n	8004ada <xQueueReceive+0xd6>
 8004aca:	4b3d      	ldr	r3, [pc, #244]	; (8004bc0 <xQueueReceive+0x1bc>)
 8004acc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004ad0:	601a      	str	r2, [r3, #0]
 8004ad2:	f3bf 8f4f 	dsb	sy
 8004ad6:	f3bf 8f6f 	isb	sy
 8004ada:	f002 f833 	bl	8006b44 <vPortExitCritical>
 8004ade:	2301      	movs	r3, #1
 8004ae0:	e069      	b.n	8004bb6 <xQueueReceive+0x1b2>
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	2b00      	cmp	r3, #0
 8004ae6:	d103      	bne.n	8004af0 <xQueueReceive+0xec>
 8004ae8:	f002 f82c 	bl	8006b44 <vPortExitCritical>
 8004aec:	2300      	movs	r3, #0
 8004aee:	e062      	b.n	8004bb6 <xQueueReceive+0x1b2>
 8004af0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	d106      	bne.n	8004b04 <xQueueReceive+0x100>
 8004af6:	f107 0310 	add.w	r3, r7, #16
 8004afa:	4618      	mov	r0, r3
 8004afc:	f000 ffde 	bl	8005abc <vTaskInternalSetTimeOutState>
 8004b00:	2301      	movs	r3, #1
 8004b02:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b04:	f002 f81e 	bl	8006b44 <vPortExitCritical>
 8004b08:	f000 fd4a 	bl	80055a0 <vTaskSuspendAll>
 8004b0c:	f001 ffea 	bl	8006ae4 <vPortEnterCritical>
 8004b10:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b12:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004b16:	b25b      	sxtb	r3, r3
 8004b18:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b1c:	d103      	bne.n	8004b26 <xQueueReceive+0x122>
 8004b1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b20:	2200      	movs	r2, #0
 8004b22:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004b26:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b28:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004b2c:	b25b      	sxtb	r3, r3
 8004b2e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b32:	d103      	bne.n	8004b3c <xQueueReceive+0x138>
 8004b34:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b36:	2200      	movs	r2, #0
 8004b38:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004b3c:	f002 f802 	bl	8006b44 <vPortExitCritical>
 8004b40:	1d3a      	adds	r2, r7, #4
 8004b42:	f107 0310 	add.w	r3, r7, #16
 8004b46:	4611      	mov	r1, r2
 8004b48:	4618      	mov	r0, r3
 8004b4a:	f000 ffcd 	bl	8005ae8 <xTaskCheckForTimeOut>
 8004b4e:	4603      	mov	r3, r0
 8004b50:	2b00      	cmp	r3, #0
 8004b52:	d123      	bne.n	8004b9c <xQueueReceive+0x198>
 8004b54:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004b56:	f000 fa3b 	bl	8004fd0 <prvIsQueueEmpty>
 8004b5a:	4603      	mov	r3, r0
 8004b5c:	2b00      	cmp	r3, #0
 8004b5e:	d017      	beq.n	8004b90 <xQueueReceive+0x18c>
 8004b60:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b62:	3324      	adds	r3, #36	; 0x24
 8004b64:	687a      	ldr	r2, [r7, #4]
 8004b66:	4611      	mov	r1, r2
 8004b68:	4618      	mov	r0, r3
 8004b6a:	f000 fef3 	bl	8005954 <vTaskPlaceOnEventList>
 8004b6e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004b70:	f000 f9dc 	bl	8004f2c <prvUnlockQueue>
 8004b74:	f000 fd22 	bl	80055bc <xTaskResumeAll>
 8004b78:	4603      	mov	r3, r0
 8004b7a:	2b00      	cmp	r3, #0
 8004b7c:	d189      	bne.n	8004a92 <xQueueReceive+0x8e>
 8004b7e:	4b10      	ldr	r3, [pc, #64]	; (8004bc0 <xQueueReceive+0x1bc>)
 8004b80:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004b84:	601a      	str	r2, [r3, #0]
 8004b86:	f3bf 8f4f 	dsb	sy
 8004b8a:	f3bf 8f6f 	isb	sy
 8004b8e:	e780      	b.n	8004a92 <xQueueReceive+0x8e>
 8004b90:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004b92:	f000 f9cb 	bl	8004f2c <prvUnlockQueue>
 8004b96:	f000 fd11 	bl	80055bc <xTaskResumeAll>
 8004b9a:	e77a      	b.n	8004a92 <xQueueReceive+0x8e>
 8004b9c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004b9e:	f000 f9c5 	bl	8004f2c <prvUnlockQueue>
 8004ba2:	f000 fd0b 	bl	80055bc <xTaskResumeAll>
 8004ba6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004ba8:	f000 fa12 	bl	8004fd0 <prvIsQueueEmpty>
 8004bac:	4603      	mov	r3, r0
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	f43f af6f 	beq.w	8004a92 <xQueueReceive+0x8e>
 8004bb4:	2300      	movs	r3, #0
 8004bb6:	4618      	mov	r0, r3
 8004bb8:	3730      	adds	r7, #48	; 0x30
 8004bba:	46bd      	mov	sp, r7
 8004bbc:	bd80      	pop	{r7, pc}
 8004bbe:	bf00      	nop
 8004bc0:	e000ed04 	.word	0xe000ed04

08004bc4 <xQueueSemaphoreTake>:
 8004bc4:	b580      	push	{r7, lr}
 8004bc6:	b08e      	sub	sp, #56	; 0x38
 8004bc8:	af00      	add	r7, sp, #0
 8004bca:	6078      	str	r0, [r7, #4]
 8004bcc:	6039      	str	r1, [r7, #0]
 8004bce:	2300      	movs	r3, #0
 8004bd0:	637b      	str	r3, [r7, #52]	; 0x34
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bd6:	2300      	movs	r3, #0
 8004bd8:	633b      	str	r3, [r7, #48]	; 0x30
 8004bda:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004bdc:	2b00      	cmp	r3, #0
 8004bde:	d10a      	bne.n	8004bf6 <xQueueSemaphoreTake+0x32>
 8004be0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004be4:	f383 8811 	msr	BASEPRI, r3
 8004be8:	f3bf 8f6f 	isb	sy
 8004bec:	f3bf 8f4f 	dsb	sy
 8004bf0:	623b      	str	r3, [r7, #32]
 8004bf2:	bf00      	nop
 8004bf4:	e7fe      	b.n	8004bf4 <xQueueSemaphoreTake+0x30>
 8004bf6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004bf8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	d00a      	beq.n	8004c14 <xQueueSemaphoreTake+0x50>
 8004bfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c02:	f383 8811 	msr	BASEPRI, r3
 8004c06:	f3bf 8f6f 	isb	sy
 8004c0a:	f3bf 8f4f 	dsb	sy
 8004c0e:	61fb      	str	r3, [r7, #28]
 8004c10:	bf00      	nop
 8004c12:	e7fe      	b.n	8004c12 <xQueueSemaphoreTake+0x4e>
 8004c14:	f001 f8b0 	bl	8005d78 <xTaskGetSchedulerState>
 8004c18:	4603      	mov	r3, r0
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	d102      	bne.n	8004c24 <xQueueSemaphoreTake+0x60>
 8004c1e:	683b      	ldr	r3, [r7, #0]
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	d101      	bne.n	8004c28 <xQueueSemaphoreTake+0x64>
 8004c24:	2301      	movs	r3, #1
 8004c26:	e000      	b.n	8004c2a <xQueueSemaphoreTake+0x66>
 8004c28:	2300      	movs	r3, #0
 8004c2a:	2b00      	cmp	r3, #0
 8004c2c:	d10a      	bne.n	8004c44 <xQueueSemaphoreTake+0x80>
 8004c2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c32:	f383 8811 	msr	BASEPRI, r3
 8004c36:	f3bf 8f6f 	isb	sy
 8004c3a:	f3bf 8f4f 	dsb	sy
 8004c3e:	61bb      	str	r3, [r7, #24]
 8004c40:	bf00      	nop
 8004c42:	e7fe      	b.n	8004c42 <xQueueSemaphoreTake+0x7e>
 8004c44:	f001 ff4e 	bl	8006ae4 <vPortEnterCritical>
 8004c48:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c4c:	62bb      	str	r3, [r7, #40]	; 0x28
 8004c4e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c50:	2b00      	cmp	r3, #0
 8004c52:	d024      	beq.n	8004c9e <xQueueSemaphoreTake+0xda>
 8004c54:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c56:	1e5a      	subs	r2, r3, #1
 8004c58:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c5a:	639a      	str	r2, [r3, #56]	; 0x38
 8004c5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c5e:	681b      	ldr	r3, [r3, #0]
 8004c60:	2b00      	cmp	r3, #0
 8004c62:	d104      	bne.n	8004c6e <xQueueSemaphoreTake+0xaa>
 8004c64:	f001 f9fe 	bl	8006064 <pvTaskIncrementMutexHeldCount>
 8004c68:	4602      	mov	r2, r0
 8004c6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c6c:	609a      	str	r2, [r3, #8]
 8004c6e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c70:	691b      	ldr	r3, [r3, #16]
 8004c72:	2b00      	cmp	r3, #0
 8004c74:	d00f      	beq.n	8004c96 <xQueueSemaphoreTake+0xd2>
 8004c76:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004c78:	3310      	adds	r3, #16
 8004c7a:	4618      	mov	r0, r3
 8004c7c:	f000 feba 	bl	80059f4 <xTaskRemoveFromEventList>
 8004c80:	4603      	mov	r3, r0
 8004c82:	2b00      	cmp	r3, #0
 8004c84:	d007      	beq.n	8004c96 <xQueueSemaphoreTake+0xd2>
 8004c86:	4b54      	ldr	r3, [pc, #336]	; (8004dd8 <xQueueSemaphoreTake+0x214>)
 8004c88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004c8c:	601a      	str	r2, [r3, #0]
 8004c8e:	f3bf 8f4f 	dsb	sy
 8004c92:	f3bf 8f6f 	isb	sy
 8004c96:	f001 ff55 	bl	8006b44 <vPortExitCritical>
 8004c9a:	2301      	movs	r3, #1
 8004c9c:	e097      	b.n	8004dce <xQueueSemaphoreTake+0x20a>
 8004c9e:	683b      	ldr	r3, [r7, #0]
 8004ca0:	2b00      	cmp	r3, #0
 8004ca2:	d111      	bne.n	8004cc8 <xQueueSemaphoreTake+0x104>
 8004ca4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ca6:	2b00      	cmp	r3, #0
 8004ca8:	d00a      	beq.n	8004cc0 <xQueueSemaphoreTake+0xfc>
 8004caa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004cae:	f383 8811 	msr	BASEPRI, r3
 8004cb2:	f3bf 8f6f 	isb	sy
 8004cb6:	f3bf 8f4f 	dsb	sy
 8004cba:	617b      	str	r3, [r7, #20]
 8004cbc:	bf00      	nop
 8004cbe:	e7fe      	b.n	8004cbe <xQueueSemaphoreTake+0xfa>
 8004cc0:	f001 ff40 	bl	8006b44 <vPortExitCritical>
 8004cc4:	2300      	movs	r3, #0
 8004cc6:	e082      	b.n	8004dce <xQueueSemaphoreTake+0x20a>
 8004cc8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004cca:	2b00      	cmp	r3, #0
 8004ccc:	d106      	bne.n	8004cdc <xQueueSemaphoreTake+0x118>
 8004cce:	f107 030c 	add.w	r3, r7, #12
 8004cd2:	4618      	mov	r0, r3
 8004cd4:	f000 fef2 	bl	8005abc <vTaskInternalSetTimeOutState>
 8004cd8:	2301      	movs	r3, #1
 8004cda:	637b      	str	r3, [r7, #52]	; 0x34
 8004cdc:	f001 ff32 	bl	8006b44 <vPortExitCritical>
 8004ce0:	f000 fc5e 	bl	80055a0 <vTaskSuspendAll>
 8004ce4:	f001 fefe 	bl	8006ae4 <vPortEnterCritical>
 8004ce8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004cea:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004cee:	b25b      	sxtb	r3, r3
 8004cf0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004cf4:	d103      	bne.n	8004cfe <xQueueSemaphoreTake+0x13a>
 8004cf6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004cf8:	2200      	movs	r2, #0
 8004cfa:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004cfe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d00:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004d04:	b25b      	sxtb	r3, r3
 8004d06:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d0a:	d103      	bne.n	8004d14 <xQueueSemaphoreTake+0x150>
 8004d0c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d0e:	2200      	movs	r2, #0
 8004d10:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004d14:	f001 ff16 	bl	8006b44 <vPortExitCritical>
 8004d18:	463a      	mov	r2, r7
 8004d1a:	f107 030c 	add.w	r3, r7, #12
 8004d1e:	4611      	mov	r1, r2
 8004d20:	4618      	mov	r0, r3
 8004d22:	f000 fee1 	bl	8005ae8 <xTaskCheckForTimeOut>
 8004d26:	4603      	mov	r3, r0
 8004d28:	2b00      	cmp	r3, #0
 8004d2a:	d132      	bne.n	8004d92 <xQueueSemaphoreTake+0x1ce>
 8004d2c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004d2e:	f000 f94f 	bl	8004fd0 <prvIsQueueEmpty>
 8004d32:	4603      	mov	r3, r0
 8004d34:	2b00      	cmp	r3, #0
 8004d36:	d026      	beq.n	8004d86 <xQueueSemaphoreTake+0x1c2>
 8004d38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	2b00      	cmp	r3, #0
 8004d3e:	d109      	bne.n	8004d54 <xQueueSemaphoreTake+0x190>
 8004d40:	f001 fed0 	bl	8006ae4 <vPortEnterCritical>
 8004d44:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d46:	689b      	ldr	r3, [r3, #8]
 8004d48:	4618      	mov	r0, r3
 8004d4a:	f001 f833 	bl	8005db4 <xTaskPriorityInherit>
 8004d4e:	6338      	str	r0, [r7, #48]	; 0x30
 8004d50:	f001 fef8 	bl	8006b44 <vPortExitCritical>
 8004d54:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004d56:	3324      	adds	r3, #36	; 0x24
 8004d58:	683a      	ldr	r2, [r7, #0]
 8004d5a:	4611      	mov	r1, r2
 8004d5c:	4618      	mov	r0, r3
 8004d5e:	f000 fdf9 	bl	8005954 <vTaskPlaceOnEventList>
 8004d62:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004d64:	f000 f8e2 	bl	8004f2c <prvUnlockQueue>
 8004d68:	f000 fc28 	bl	80055bc <xTaskResumeAll>
 8004d6c:	4603      	mov	r3, r0
 8004d6e:	2b00      	cmp	r3, #0
 8004d70:	f47f af68 	bne.w	8004c44 <xQueueSemaphoreTake+0x80>
 8004d74:	4b18      	ldr	r3, [pc, #96]	; (8004dd8 <xQueueSemaphoreTake+0x214>)
 8004d76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004d7a:	601a      	str	r2, [r3, #0]
 8004d7c:	f3bf 8f4f 	dsb	sy
 8004d80:	f3bf 8f6f 	isb	sy
 8004d84:	e75e      	b.n	8004c44 <xQueueSemaphoreTake+0x80>
 8004d86:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004d88:	f000 f8d0 	bl	8004f2c <prvUnlockQueue>
 8004d8c:	f000 fc16 	bl	80055bc <xTaskResumeAll>
 8004d90:	e758      	b.n	8004c44 <xQueueSemaphoreTake+0x80>
 8004d92:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004d94:	f000 f8ca 	bl	8004f2c <prvUnlockQueue>
 8004d98:	f000 fc10 	bl	80055bc <xTaskResumeAll>
 8004d9c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004d9e:	f000 f917 	bl	8004fd0 <prvIsQueueEmpty>
 8004da2:	4603      	mov	r3, r0
 8004da4:	2b00      	cmp	r3, #0
 8004da6:	f43f af4d 	beq.w	8004c44 <xQueueSemaphoreTake+0x80>
 8004daa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	d00d      	beq.n	8004dcc <xQueueSemaphoreTake+0x208>
 8004db0:	f001 fe98 	bl	8006ae4 <vPortEnterCritical>
 8004db4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004db6:	f000 f811 	bl	8004ddc <prvGetDisinheritPriorityAfterTimeout>
 8004dba:	6278      	str	r0, [r7, #36]	; 0x24
 8004dbc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004dbe:	689b      	ldr	r3, [r3, #8]
 8004dc0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8004dc2:	4618      	mov	r0, r3
 8004dc4:	f001 f8cc 	bl	8005f60 <vTaskPriorityDisinheritAfterTimeout>
 8004dc8:	f001 febc 	bl	8006b44 <vPortExitCritical>
 8004dcc:	2300      	movs	r3, #0
 8004dce:	4618      	mov	r0, r3
 8004dd0:	3738      	adds	r7, #56	; 0x38
 8004dd2:	46bd      	mov	sp, r7
 8004dd4:	bd80      	pop	{r7, pc}
 8004dd6:	bf00      	nop
 8004dd8:	e000ed04 	.word	0xe000ed04

08004ddc <prvGetDisinheritPriorityAfterTimeout>:
 8004ddc:	b480      	push	{r7}
 8004dde:	b085      	sub	sp, #20
 8004de0:	af00      	add	r7, sp, #0
 8004de2:	6078      	str	r0, [r7, #4]
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004de8:	2b00      	cmp	r3, #0
 8004dea:	d006      	beq.n	8004dfa <prvGetDisinheritPriorityAfterTimeout+0x1e>
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004df0:	681b      	ldr	r3, [r3, #0]
 8004df2:	f1c3 0338 	rsb	r3, r3, #56	; 0x38
 8004df6:	60fb      	str	r3, [r7, #12]
 8004df8:	e001      	b.n	8004dfe <prvGetDisinheritPriorityAfterTimeout+0x22>
 8004dfa:	2300      	movs	r3, #0
 8004dfc:	60fb      	str	r3, [r7, #12]
 8004dfe:	68fb      	ldr	r3, [r7, #12]
 8004e00:	4618      	mov	r0, r3
 8004e02:	3714      	adds	r7, #20
 8004e04:	46bd      	mov	sp, r7
 8004e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e0a:	4770      	bx	lr

08004e0c <prvCopyDataToQueue>:
 8004e0c:	b580      	push	{r7, lr}
 8004e0e:	b086      	sub	sp, #24
 8004e10:	af00      	add	r7, sp, #0
 8004e12:	60f8      	str	r0, [r7, #12]
 8004e14:	60b9      	str	r1, [r7, #8]
 8004e16:	607a      	str	r2, [r7, #4]
 8004e18:	2300      	movs	r3, #0
 8004e1a:	617b      	str	r3, [r7, #20]
 8004e1c:	68fb      	ldr	r3, [r7, #12]
 8004e1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e20:	613b      	str	r3, [r7, #16]
 8004e22:	68fb      	ldr	r3, [r7, #12]
 8004e24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e26:	2b00      	cmp	r3, #0
 8004e28:	d10d      	bne.n	8004e46 <prvCopyDataToQueue+0x3a>
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	d14d      	bne.n	8004ece <prvCopyDataToQueue+0xc2>
 8004e32:	68fb      	ldr	r3, [r7, #12]
 8004e34:	689b      	ldr	r3, [r3, #8]
 8004e36:	4618      	mov	r0, r3
 8004e38:	f001 f824 	bl	8005e84 <xTaskPriorityDisinherit>
 8004e3c:	6178      	str	r0, [r7, #20]
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	2200      	movs	r2, #0
 8004e42:	609a      	str	r2, [r3, #8]
 8004e44:	e043      	b.n	8004ece <prvCopyDataToQueue+0xc2>
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	2b00      	cmp	r3, #0
 8004e4a:	d119      	bne.n	8004e80 <prvCopyDataToQueue+0x74>
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	6858      	ldr	r0, [r3, #4]
 8004e50:	68fb      	ldr	r3, [r7, #12]
 8004e52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e54:	461a      	mov	r2, r3
 8004e56:	68b9      	ldr	r1, [r7, #8]
 8004e58:	f001 fff0 	bl	8006e3c <memcpy>
 8004e5c:	68fb      	ldr	r3, [r7, #12]
 8004e5e:	685a      	ldr	r2, [r3, #4]
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e64:	441a      	add	r2, r3
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	605a      	str	r2, [r3, #4]
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	685a      	ldr	r2, [r3, #4]
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	689b      	ldr	r3, [r3, #8]
 8004e72:	429a      	cmp	r2, r3
 8004e74:	d32b      	bcc.n	8004ece <prvCopyDataToQueue+0xc2>
 8004e76:	68fb      	ldr	r3, [r7, #12]
 8004e78:	681a      	ldr	r2, [r3, #0]
 8004e7a:	68fb      	ldr	r3, [r7, #12]
 8004e7c:	605a      	str	r2, [r3, #4]
 8004e7e:	e026      	b.n	8004ece <prvCopyDataToQueue+0xc2>
 8004e80:	68fb      	ldr	r3, [r7, #12]
 8004e82:	68d8      	ldr	r0, [r3, #12]
 8004e84:	68fb      	ldr	r3, [r7, #12]
 8004e86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e88:	461a      	mov	r2, r3
 8004e8a:	68b9      	ldr	r1, [r7, #8]
 8004e8c:	f001 ffd6 	bl	8006e3c <memcpy>
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	68da      	ldr	r2, [r3, #12]
 8004e94:	68fb      	ldr	r3, [r7, #12]
 8004e96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e98:	425b      	negs	r3, r3
 8004e9a:	441a      	add	r2, r3
 8004e9c:	68fb      	ldr	r3, [r7, #12]
 8004e9e:	60da      	str	r2, [r3, #12]
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	68da      	ldr	r2, [r3, #12]
 8004ea4:	68fb      	ldr	r3, [r7, #12]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	429a      	cmp	r2, r3
 8004eaa:	d207      	bcs.n	8004ebc <prvCopyDataToQueue+0xb0>
 8004eac:	68fb      	ldr	r3, [r7, #12]
 8004eae:	689a      	ldr	r2, [r3, #8]
 8004eb0:	68fb      	ldr	r3, [r7, #12]
 8004eb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eb4:	425b      	negs	r3, r3
 8004eb6:	441a      	add	r2, r3
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	60da      	str	r2, [r3, #12]
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	2b02      	cmp	r3, #2
 8004ec0:	d105      	bne.n	8004ece <prvCopyDataToQueue+0xc2>
 8004ec2:	693b      	ldr	r3, [r7, #16]
 8004ec4:	2b00      	cmp	r3, #0
 8004ec6:	d002      	beq.n	8004ece <prvCopyDataToQueue+0xc2>
 8004ec8:	693b      	ldr	r3, [r7, #16]
 8004eca:	3b01      	subs	r3, #1
 8004ecc:	613b      	str	r3, [r7, #16]
 8004ece:	693b      	ldr	r3, [r7, #16]
 8004ed0:	1c5a      	adds	r2, r3, #1
 8004ed2:	68fb      	ldr	r3, [r7, #12]
 8004ed4:	639a      	str	r2, [r3, #56]	; 0x38
 8004ed6:	697b      	ldr	r3, [r7, #20]
 8004ed8:	4618      	mov	r0, r3
 8004eda:	3718      	adds	r7, #24
 8004edc:	46bd      	mov	sp, r7
 8004ede:	bd80      	pop	{r7, pc}

08004ee0 <prvCopyDataFromQueue>:
 8004ee0:	b580      	push	{r7, lr}
 8004ee2:	b082      	sub	sp, #8
 8004ee4:	af00      	add	r7, sp, #0
 8004ee6:	6078      	str	r0, [r7, #4]
 8004ee8:	6039      	str	r1, [r7, #0]
 8004eea:	687b      	ldr	r3, [r7, #4]
 8004eec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004eee:	2b00      	cmp	r3, #0
 8004ef0:	d018      	beq.n	8004f24 <prvCopyDataFromQueue+0x44>
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	68da      	ldr	r2, [r3, #12]
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004efa:	441a      	add	r2, r3
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	60da      	str	r2, [r3, #12]
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	68da      	ldr	r2, [r3, #12]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	689b      	ldr	r3, [r3, #8]
 8004f08:	429a      	cmp	r2, r3
 8004f0a:	d303      	bcc.n	8004f14 <prvCopyDataFromQueue+0x34>
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	681a      	ldr	r2, [r3, #0]
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	60da      	str	r2, [r3, #12]
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	68d9      	ldr	r1, [r3, #12]
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f1c:	461a      	mov	r2, r3
 8004f1e:	6838      	ldr	r0, [r7, #0]
 8004f20:	f001 ff8c 	bl	8006e3c <memcpy>
 8004f24:	bf00      	nop
 8004f26:	3708      	adds	r7, #8
 8004f28:	46bd      	mov	sp, r7
 8004f2a:	bd80      	pop	{r7, pc}

08004f2c <prvUnlockQueue>:
 8004f2c:	b580      	push	{r7, lr}
 8004f2e:	b084      	sub	sp, #16
 8004f30:	af00      	add	r7, sp, #0
 8004f32:	6078      	str	r0, [r7, #4]
 8004f34:	f001 fdd6 	bl	8006ae4 <vPortEnterCritical>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004f3e:	73fb      	strb	r3, [r7, #15]
 8004f40:	e011      	b.n	8004f66 <prvUnlockQueue+0x3a>
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f46:	2b00      	cmp	r3, #0
 8004f48:	d012      	beq.n	8004f70 <prvUnlockQueue+0x44>
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	3324      	adds	r3, #36	; 0x24
 8004f4e:	4618      	mov	r0, r3
 8004f50:	f000 fd50 	bl	80059f4 <xTaskRemoveFromEventList>
 8004f54:	4603      	mov	r3, r0
 8004f56:	2b00      	cmp	r3, #0
 8004f58:	d001      	beq.n	8004f5e <prvUnlockQueue+0x32>
 8004f5a:	f000 fe27 	bl	8005bac <vTaskMissedYield>
 8004f5e:	7bfb      	ldrb	r3, [r7, #15]
 8004f60:	3b01      	subs	r3, #1
 8004f62:	b2db      	uxtb	r3, r3
 8004f64:	73fb      	strb	r3, [r7, #15]
 8004f66:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004f6a:	2b00      	cmp	r3, #0
 8004f6c:	dce9      	bgt.n	8004f42 <prvUnlockQueue+0x16>
 8004f6e:	e000      	b.n	8004f72 <prvUnlockQueue+0x46>
 8004f70:	bf00      	nop
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	22ff      	movs	r2, #255	; 0xff
 8004f76:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004f7a:	f001 fde3 	bl	8006b44 <vPortExitCritical>
 8004f7e:	f001 fdb1 	bl	8006ae4 <vPortEnterCritical>
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004f88:	73bb      	strb	r3, [r7, #14]
 8004f8a:	e011      	b.n	8004fb0 <prvUnlockQueue+0x84>
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	691b      	ldr	r3, [r3, #16]
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d012      	beq.n	8004fba <prvUnlockQueue+0x8e>
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	3310      	adds	r3, #16
 8004f98:	4618      	mov	r0, r3
 8004f9a:	f000 fd2b 	bl	80059f4 <xTaskRemoveFromEventList>
 8004f9e:	4603      	mov	r3, r0
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	d001      	beq.n	8004fa8 <prvUnlockQueue+0x7c>
 8004fa4:	f000 fe02 	bl	8005bac <vTaskMissedYield>
 8004fa8:	7bbb      	ldrb	r3, [r7, #14]
 8004faa:	3b01      	subs	r3, #1
 8004fac:	b2db      	uxtb	r3, r3
 8004fae:	73bb      	strb	r3, [r7, #14]
 8004fb0:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8004fb4:	2b00      	cmp	r3, #0
 8004fb6:	dce9      	bgt.n	8004f8c <prvUnlockQueue+0x60>
 8004fb8:	e000      	b.n	8004fbc <prvUnlockQueue+0x90>
 8004fba:	bf00      	nop
 8004fbc:	687b      	ldr	r3, [r7, #4]
 8004fbe:	22ff      	movs	r2, #255	; 0xff
 8004fc0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004fc4:	f001 fdbe 	bl	8006b44 <vPortExitCritical>
 8004fc8:	bf00      	nop
 8004fca:	3710      	adds	r7, #16
 8004fcc:	46bd      	mov	sp, r7
 8004fce:	bd80      	pop	{r7, pc}

08004fd0 <prvIsQueueEmpty>:
 8004fd0:	b580      	push	{r7, lr}
 8004fd2:	b084      	sub	sp, #16
 8004fd4:	af00      	add	r7, sp, #0
 8004fd6:	6078      	str	r0, [r7, #4]
 8004fd8:	f001 fd84 	bl	8006ae4 <vPortEnterCritical>
 8004fdc:	687b      	ldr	r3, [r7, #4]
 8004fde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fe0:	2b00      	cmp	r3, #0
 8004fe2:	d102      	bne.n	8004fea <prvIsQueueEmpty+0x1a>
 8004fe4:	2301      	movs	r3, #1
 8004fe6:	60fb      	str	r3, [r7, #12]
 8004fe8:	e001      	b.n	8004fee <prvIsQueueEmpty+0x1e>
 8004fea:	2300      	movs	r3, #0
 8004fec:	60fb      	str	r3, [r7, #12]
 8004fee:	f001 fda9 	bl	8006b44 <vPortExitCritical>
 8004ff2:	68fb      	ldr	r3, [r7, #12]
 8004ff4:	4618      	mov	r0, r3
 8004ff6:	3710      	adds	r7, #16
 8004ff8:	46bd      	mov	sp, r7
 8004ffa:	bd80      	pop	{r7, pc}

08004ffc <prvIsQueueFull>:
 8004ffc:	b580      	push	{r7, lr}
 8004ffe:	b084      	sub	sp, #16
 8005000:	af00      	add	r7, sp, #0
 8005002:	6078      	str	r0, [r7, #4]
 8005004:	f001 fd6e 	bl	8006ae4 <vPortEnterCritical>
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005010:	429a      	cmp	r2, r3
 8005012:	d102      	bne.n	800501a <prvIsQueueFull+0x1e>
 8005014:	2301      	movs	r3, #1
 8005016:	60fb      	str	r3, [r7, #12]
 8005018:	e001      	b.n	800501e <prvIsQueueFull+0x22>
 800501a:	2300      	movs	r3, #0
 800501c:	60fb      	str	r3, [r7, #12]
 800501e:	f001 fd91 	bl	8006b44 <vPortExitCritical>
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	4618      	mov	r0, r3
 8005026:	3710      	adds	r7, #16
 8005028:	46bd      	mov	sp, r7
 800502a:	bd80      	pop	{r7, pc}

0800502c <vQueueAddToRegistry>:
 800502c:	b480      	push	{r7}
 800502e:	b085      	sub	sp, #20
 8005030:	af00      	add	r7, sp, #0
 8005032:	6078      	str	r0, [r7, #4]
 8005034:	6039      	str	r1, [r7, #0]
 8005036:	2300      	movs	r3, #0
 8005038:	60fb      	str	r3, [r7, #12]
 800503a:	e014      	b.n	8005066 <vQueueAddToRegistry+0x3a>
 800503c:	4a0f      	ldr	r2, [pc, #60]	; (800507c <vQueueAddToRegistry+0x50>)
 800503e:	68fb      	ldr	r3, [r7, #12]
 8005040:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8005044:	2b00      	cmp	r3, #0
 8005046:	d10b      	bne.n	8005060 <vQueueAddToRegistry+0x34>
 8005048:	490c      	ldr	r1, [pc, #48]	; (800507c <vQueueAddToRegistry+0x50>)
 800504a:	68fb      	ldr	r3, [r7, #12]
 800504c:	683a      	ldr	r2, [r7, #0]
 800504e:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8005052:	4a0a      	ldr	r2, [pc, #40]	; (800507c <vQueueAddToRegistry+0x50>)
 8005054:	68fb      	ldr	r3, [r7, #12]
 8005056:	00db      	lsls	r3, r3, #3
 8005058:	4413      	add	r3, r2
 800505a:	687a      	ldr	r2, [r7, #4]
 800505c:	605a      	str	r2, [r3, #4]
 800505e:	e006      	b.n	800506e <vQueueAddToRegistry+0x42>
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	3301      	adds	r3, #1
 8005064:	60fb      	str	r3, [r7, #12]
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	2b07      	cmp	r3, #7
 800506a:	d9e7      	bls.n	800503c <vQueueAddToRegistry+0x10>
 800506c:	bf00      	nop
 800506e:	bf00      	nop
 8005070:	3714      	adds	r7, #20
 8005072:	46bd      	mov	sp, r7
 8005074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005078:	4770      	bx	lr
 800507a:	bf00      	nop
 800507c:	20000a04 	.word	0x20000a04

08005080 <vQueueWaitForMessageRestricted>:
 8005080:	b580      	push	{r7, lr}
 8005082:	b086      	sub	sp, #24
 8005084:	af00      	add	r7, sp, #0
 8005086:	60f8      	str	r0, [r7, #12]
 8005088:	60b9      	str	r1, [r7, #8]
 800508a:	607a      	str	r2, [r7, #4]
 800508c:	68fb      	ldr	r3, [r7, #12]
 800508e:	617b      	str	r3, [r7, #20]
 8005090:	f001 fd28 	bl	8006ae4 <vPortEnterCritical>
 8005094:	697b      	ldr	r3, [r7, #20]
 8005096:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800509a:	b25b      	sxtb	r3, r3
 800509c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80050a0:	d103      	bne.n	80050aa <vQueueWaitForMessageRestricted+0x2a>
 80050a2:	697b      	ldr	r3, [r7, #20]
 80050a4:	2200      	movs	r2, #0
 80050a6:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80050aa:	697b      	ldr	r3, [r7, #20]
 80050ac:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80050b0:	b25b      	sxtb	r3, r3
 80050b2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80050b6:	d103      	bne.n	80050c0 <vQueueWaitForMessageRestricted+0x40>
 80050b8:	697b      	ldr	r3, [r7, #20]
 80050ba:	2200      	movs	r2, #0
 80050bc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80050c0:	f001 fd40 	bl	8006b44 <vPortExitCritical>
 80050c4:	697b      	ldr	r3, [r7, #20]
 80050c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050c8:	2b00      	cmp	r3, #0
 80050ca:	d106      	bne.n	80050da <vQueueWaitForMessageRestricted+0x5a>
 80050cc:	697b      	ldr	r3, [r7, #20]
 80050ce:	3324      	adds	r3, #36	; 0x24
 80050d0:	687a      	ldr	r2, [r7, #4]
 80050d2:	68b9      	ldr	r1, [r7, #8]
 80050d4:	4618      	mov	r0, r3
 80050d6:	f000 fc61 	bl	800599c <vTaskPlaceOnEventListRestricted>
 80050da:	6978      	ldr	r0, [r7, #20]
 80050dc:	f7ff ff26 	bl	8004f2c <prvUnlockQueue>
 80050e0:	bf00      	nop
 80050e2:	3718      	adds	r7, #24
 80050e4:	46bd      	mov	sp, r7
 80050e6:	bd80      	pop	{r7, pc}

080050e8 <xTaskCreateStatic>:
 80050e8:	b580      	push	{r7, lr}
 80050ea:	b08e      	sub	sp, #56	; 0x38
 80050ec:	af04      	add	r7, sp, #16
 80050ee:	60f8      	str	r0, [r7, #12]
 80050f0:	60b9      	str	r1, [r7, #8]
 80050f2:	607a      	str	r2, [r7, #4]
 80050f4:	603b      	str	r3, [r7, #0]
 80050f6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80050f8:	2b00      	cmp	r3, #0
 80050fa:	d10a      	bne.n	8005112 <xTaskCreateStatic+0x2a>
 80050fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005100:	f383 8811 	msr	BASEPRI, r3
 8005104:	f3bf 8f6f 	isb	sy
 8005108:	f3bf 8f4f 	dsb	sy
 800510c:	623b      	str	r3, [r7, #32]
 800510e:	bf00      	nop
 8005110:	e7fe      	b.n	8005110 <xTaskCreateStatic+0x28>
 8005112:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005114:	2b00      	cmp	r3, #0
 8005116:	d10a      	bne.n	800512e <xTaskCreateStatic+0x46>
 8005118:	f04f 0350 	mov.w	r3, #80	; 0x50
 800511c:	f383 8811 	msr	BASEPRI, r3
 8005120:	f3bf 8f6f 	isb	sy
 8005124:	f3bf 8f4f 	dsb	sy
 8005128:	61fb      	str	r3, [r7, #28]
 800512a:	bf00      	nop
 800512c:	e7fe      	b.n	800512c <xTaskCreateStatic+0x44>
 800512e:	23bc      	movs	r3, #188	; 0xbc
 8005130:	613b      	str	r3, [r7, #16]
 8005132:	693b      	ldr	r3, [r7, #16]
 8005134:	2bbc      	cmp	r3, #188	; 0xbc
 8005136:	d00a      	beq.n	800514e <xTaskCreateStatic+0x66>
 8005138:	f04f 0350 	mov.w	r3, #80	; 0x50
 800513c:	f383 8811 	msr	BASEPRI, r3
 8005140:	f3bf 8f6f 	isb	sy
 8005144:	f3bf 8f4f 	dsb	sy
 8005148:	61bb      	str	r3, [r7, #24]
 800514a:	bf00      	nop
 800514c:	e7fe      	b.n	800514c <xTaskCreateStatic+0x64>
 800514e:	693b      	ldr	r3, [r7, #16]
 8005150:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005152:	2b00      	cmp	r3, #0
 8005154:	d01e      	beq.n	8005194 <xTaskCreateStatic+0xac>
 8005156:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005158:	2b00      	cmp	r3, #0
 800515a:	d01b      	beq.n	8005194 <xTaskCreateStatic+0xac>
 800515c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800515e:	627b      	str	r3, [r7, #36]	; 0x24
 8005160:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005162:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8005164:	631a      	str	r2, [r3, #48]	; 0x30
 8005166:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005168:	2202      	movs	r2, #2
 800516a:	f883 20b9 	strb.w	r2, [r3, #185]	; 0xb9
 800516e:	2300      	movs	r3, #0
 8005170:	9303      	str	r3, [sp, #12]
 8005172:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005174:	9302      	str	r3, [sp, #8]
 8005176:	f107 0314 	add.w	r3, r7, #20
 800517a:	9301      	str	r3, [sp, #4]
 800517c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800517e:	9300      	str	r3, [sp, #0]
 8005180:	683b      	ldr	r3, [r7, #0]
 8005182:	687a      	ldr	r2, [r7, #4]
 8005184:	68b9      	ldr	r1, [r7, #8]
 8005186:	68f8      	ldr	r0, [r7, #12]
 8005188:	f000 f850 	bl	800522c <prvInitialiseNewTask>
 800518c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800518e:	f000 f8f3 	bl	8005378 <prvAddNewTaskToReadyList>
 8005192:	e001      	b.n	8005198 <xTaskCreateStatic+0xb0>
 8005194:	2300      	movs	r3, #0
 8005196:	617b      	str	r3, [r7, #20]
 8005198:	697b      	ldr	r3, [r7, #20]
 800519a:	4618      	mov	r0, r3
 800519c:	3728      	adds	r7, #40	; 0x28
 800519e:	46bd      	mov	sp, r7
 80051a0:	bd80      	pop	{r7, pc}

080051a2 <xTaskCreate>:
 80051a2:	b580      	push	{r7, lr}
 80051a4:	b08c      	sub	sp, #48	; 0x30
 80051a6:	af04      	add	r7, sp, #16
 80051a8:	60f8      	str	r0, [r7, #12]
 80051aa:	60b9      	str	r1, [r7, #8]
 80051ac:	603b      	str	r3, [r7, #0]
 80051ae:	4613      	mov	r3, r2
 80051b0:	80fb      	strh	r3, [r7, #6]
 80051b2:	88fb      	ldrh	r3, [r7, #6]
 80051b4:	009b      	lsls	r3, r3, #2
 80051b6:	4618      	mov	r0, r3
 80051b8:	f001 fdb6 	bl	8006d28 <pvPortMalloc>
 80051bc:	6178      	str	r0, [r7, #20]
 80051be:	697b      	ldr	r3, [r7, #20]
 80051c0:	2b00      	cmp	r3, #0
 80051c2:	d00e      	beq.n	80051e2 <xTaskCreate+0x40>
 80051c4:	20bc      	movs	r0, #188	; 0xbc
 80051c6:	f001 fdaf 	bl	8006d28 <pvPortMalloc>
 80051ca:	61f8      	str	r0, [r7, #28]
 80051cc:	69fb      	ldr	r3, [r7, #28]
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d003      	beq.n	80051da <xTaskCreate+0x38>
 80051d2:	69fb      	ldr	r3, [r7, #28]
 80051d4:	697a      	ldr	r2, [r7, #20]
 80051d6:	631a      	str	r2, [r3, #48]	; 0x30
 80051d8:	e005      	b.n	80051e6 <xTaskCreate+0x44>
 80051da:	6978      	ldr	r0, [r7, #20]
 80051dc:	f001 fdea 	bl	8006db4 <vPortFree>
 80051e0:	e001      	b.n	80051e6 <xTaskCreate+0x44>
 80051e2:	2300      	movs	r3, #0
 80051e4:	61fb      	str	r3, [r7, #28]
 80051e6:	69fb      	ldr	r3, [r7, #28]
 80051e8:	2b00      	cmp	r3, #0
 80051ea:	d017      	beq.n	800521c <xTaskCreate+0x7a>
 80051ec:	69fb      	ldr	r3, [r7, #28]
 80051ee:	2200      	movs	r2, #0
 80051f0:	f883 20b9 	strb.w	r2, [r3, #185]	; 0xb9
 80051f4:	88fa      	ldrh	r2, [r7, #6]
 80051f6:	2300      	movs	r3, #0
 80051f8:	9303      	str	r3, [sp, #12]
 80051fa:	69fb      	ldr	r3, [r7, #28]
 80051fc:	9302      	str	r3, [sp, #8]
 80051fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005200:	9301      	str	r3, [sp, #4]
 8005202:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005204:	9300      	str	r3, [sp, #0]
 8005206:	683b      	ldr	r3, [r7, #0]
 8005208:	68b9      	ldr	r1, [r7, #8]
 800520a:	68f8      	ldr	r0, [r7, #12]
 800520c:	f000 f80e 	bl	800522c <prvInitialiseNewTask>
 8005210:	69f8      	ldr	r0, [r7, #28]
 8005212:	f000 f8b1 	bl	8005378 <prvAddNewTaskToReadyList>
 8005216:	2301      	movs	r3, #1
 8005218:	61bb      	str	r3, [r7, #24]
 800521a:	e002      	b.n	8005222 <xTaskCreate+0x80>
 800521c:	f04f 33ff 	mov.w	r3, #4294967295
 8005220:	61bb      	str	r3, [r7, #24]
 8005222:	69bb      	ldr	r3, [r7, #24]
 8005224:	4618      	mov	r0, r3
 8005226:	3720      	adds	r7, #32
 8005228:	46bd      	mov	sp, r7
 800522a:	bd80      	pop	{r7, pc}

0800522c <prvInitialiseNewTask>:
 800522c:	b580      	push	{r7, lr}
 800522e:	b088      	sub	sp, #32
 8005230:	af00      	add	r7, sp, #0
 8005232:	60f8      	str	r0, [r7, #12]
 8005234:	60b9      	str	r1, [r7, #8]
 8005236:	607a      	str	r2, [r7, #4]
 8005238:	603b      	str	r3, [r7, #0]
 800523a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800523c:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	009b      	lsls	r3, r3, #2
 8005242:	461a      	mov	r2, r3
 8005244:	21a5      	movs	r1, #165	; 0xa5
 8005246:	f001 fe07 	bl	8006e58 <memset>
 800524a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800524c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8005254:	3b01      	subs	r3, #1
 8005256:	009b      	lsls	r3, r3, #2
 8005258:	4413      	add	r3, r2
 800525a:	61bb      	str	r3, [r7, #24]
 800525c:	69bb      	ldr	r3, [r7, #24]
 800525e:	f023 0307 	bic.w	r3, r3, #7
 8005262:	61bb      	str	r3, [r7, #24]
 8005264:	69bb      	ldr	r3, [r7, #24]
 8005266:	f003 0307 	and.w	r3, r3, #7
 800526a:	2b00      	cmp	r3, #0
 800526c:	d00a      	beq.n	8005284 <prvInitialiseNewTask+0x58>
 800526e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005272:	f383 8811 	msr	BASEPRI, r3
 8005276:	f3bf 8f6f 	isb	sy
 800527a:	f3bf 8f4f 	dsb	sy
 800527e:	617b      	str	r3, [r7, #20]
 8005280:	bf00      	nop
 8005282:	e7fe      	b.n	8005282 <prvInitialiseNewTask+0x56>
 8005284:	68bb      	ldr	r3, [r7, #8]
 8005286:	2b00      	cmp	r3, #0
 8005288:	d01f      	beq.n	80052ca <prvInitialiseNewTask+0x9e>
 800528a:	2300      	movs	r3, #0
 800528c:	61fb      	str	r3, [r7, #28]
 800528e:	e012      	b.n	80052b6 <prvInitialiseNewTask+0x8a>
 8005290:	68ba      	ldr	r2, [r7, #8]
 8005292:	69fb      	ldr	r3, [r7, #28]
 8005294:	4413      	add	r3, r2
 8005296:	7819      	ldrb	r1, [r3, #0]
 8005298:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800529a:	69fb      	ldr	r3, [r7, #28]
 800529c:	4413      	add	r3, r2
 800529e:	3334      	adds	r3, #52	; 0x34
 80052a0:	460a      	mov	r2, r1
 80052a2:	701a      	strb	r2, [r3, #0]
 80052a4:	68ba      	ldr	r2, [r7, #8]
 80052a6:	69fb      	ldr	r3, [r7, #28]
 80052a8:	4413      	add	r3, r2
 80052aa:	781b      	ldrb	r3, [r3, #0]
 80052ac:	2b00      	cmp	r3, #0
 80052ae:	d006      	beq.n	80052be <prvInitialiseNewTask+0x92>
 80052b0:	69fb      	ldr	r3, [r7, #28]
 80052b2:	3301      	adds	r3, #1
 80052b4:	61fb      	str	r3, [r7, #28]
 80052b6:	69fb      	ldr	r3, [r7, #28]
 80052b8:	2b0f      	cmp	r3, #15
 80052ba:	d9e9      	bls.n	8005290 <prvInitialiseNewTask+0x64>
 80052bc:	e000      	b.n	80052c0 <prvInitialiseNewTask+0x94>
 80052be:	bf00      	nop
 80052c0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052c2:	2200      	movs	r2, #0
 80052c4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80052c8:	e003      	b.n	80052d2 <prvInitialiseNewTask+0xa6>
 80052ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052cc:	2200      	movs	r2, #0
 80052ce:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80052d2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80052d4:	2b37      	cmp	r3, #55	; 0x37
 80052d6:	d901      	bls.n	80052dc <prvInitialiseNewTask+0xb0>
 80052d8:	2337      	movs	r3, #55	; 0x37
 80052da:	62bb      	str	r3, [r7, #40]	; 0x28
 80052dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052de:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80052e0:	62da      	str	r2, [r3, #44]	; 0x2c
 80052e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052e4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80052e6:	64da      	str	r2, [r3, #76]	; 0x4c
 80052e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052ea:	2200      	movs	r2, #0
 80052ec:	651a      	str	r2, [r3, #80]	; 0x50
 80052ee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052f0:	3304      	adds	r3, #4
 80052f2:	4618      	mov	r0, r3
 80052f4:	f7fe ffe8 	bl	80042c8 <vListInitialiseItem>
 80052f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80052fa:	3318      	adds	r3, #24
 80052fc:	4618      	mov	r0, r3
 80052fe:	f7fe ffe3 	bl	80042c8 <vListInitialiseItem>
 8005302:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005304:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005306:	611a      	str	r2, [r3, #16]
 8005308:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800530a:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800530e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005310:	619a      	str	r2, [r3, #24]
 8005312:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005314:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005316:	625a      	str	r2, [r3, #36]	; 0x24
 8005318:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800531a:	2200      	movs	r2, #0
 800531c:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8005320:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005322:	2200      	movs	r2, #0
 8005324:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
 8005328:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800532a:	3354      	adds	r3, #84	; 0x54
 800532c:	2260      	movs	r2, #96	; 0x60
 800532e:	2100      	movs	r1, #0
 8005330:	4618      	mov	r0, r3
 8005332:	f001 fd91 	bl	8006e58 <memset>
 8005336:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005338:	4a0c      	ldr	r2, [pc, #48]	; (800536c <prvInitialiseNewTask+0x140>)
 800533a:	659a      	str	r2, [r3, #88]	; 0x58
 800533c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800533e:	4a0c      	ldr	r2, [pc, #48]	; (8005370 <prvInitialiseNewTask+0x144>)
 8005340:	65da      	str	r2, [r3, #92]	; 0x5c
 8005342:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005344:	4a0b      	ldr	r2, [pc, #44]	; (8005374 <prvInitialiseNewTask+0x148>)
 8005346:	661a      	str	r2, [r3, #96]	; 0x60
 8005348:	683a      	ldr	r2, [r7, #0]
 800534a:	68f9      	ldr	r1, [r7, #12]
 800534c:	69b8      	ldr	r0, [r7, #24]
 800534e:	f001 fa9b 	bl	8006888 <pxPortInitialiseStack>
 8005352:	4602      	mov	r2, r0
 8005354:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005356:	601a      	str	r2, [r3, #0]
 8005358:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800535a:	2b00      	cmp	r3, #0
 800535c:	d002      	beq.n	8005364 <prvInitialiseNewTask+0x138>
 800535e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005360:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005362:	601a      	str	r2, [r3, #0]
 8005364:	bf00      	nop
 8005366:	3720      	adds	r7, #32
 8005368:	46bd      	mov	sp, r7
 800536a:	bd80      	pop	{r7, pc}
 800536c:	080082b0 	.word	0x080082b0
 8005370:	080082d0 	.word	0x080082d0
 8005374:	08008290 	.word	0x08008290

08005378 <prvAddNewTaskToReadyList>:
 8005378:	b580      	push	{r7, lr}
 800537a:	b082      	sub	sp, #8
 800537c:	af00      	add	r7, sp, #0
 800537e:	6078      	str	r0, [r7, #4]
 8005380:	f001 fbb0 	bl	8006ae4 <vPortEnterCritical>
 8005384:	4b2d      	ldr	r3, [pc, #180]	; (800543c <prvAddNewTaskToReadyList+0xc4>)
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	3301      	adds	r3, #1
 800538a:	4a2c      	ldr	r2, [pc, #176]	; (800543c <prvAddNewTaskToReadyList+0xc4>)
 800538c:	6013      	str	r3, [r2, #0]
 800538e:	4b2c      	ldr	r3, [pc, #176]	; (8005440 <prvAddNewTaskToReadyList+0xc8>)
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	2b00      	cmp	r3, #0
 8005394:	d109      	bne.n	80053aa <prvAddNewTaskToReadyList+0x32>
 8005396:	4a2a      	ldr	r2, [pc, #168]	; (8005440 <prvAddNewTaskToReadyList+0xc8>)
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	6013      	str	r3, [r2, #0]
 800539c:	4b27      	ldr	r3, [pc, #156]	; (800543c <prvAddNewTaskToReadyList+0xc4>)
 800539e:	681b      	ldr	r3, [r3, #0]
 80053a0:	2b01      	cmp	r3, #1
 80053a2:	d110      	bne.n	80053c6 <prvAddNewTaskToReadyList+0x4e>
 80053a4:	f000 fc26 	bl	8005bf4 <prvInitialiseTaskLists>
 80053a8:	e00d      	b.n	80053c6 <prvAddNewTaskToReadyList+0x4e>
 80053aa:	4b26      	ldr	r3, [pc, #152]	; (8005444 <prvAddNewTaskToReadyList+0xcc>)
 80053ac:	681b      	ldr	r3, [r3, #0]
 80053ae:	2b00      	cmp	r3, #0
 80053b0:	d109      	bne.n	80053c6 <prvAddNewTaskToReadyList+0x4e>
 80053b2:	4b23      	ldr	r3, [pc, #140]	; (8005440 <prvAddNewTaskToReadyList+0xc8>)
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053bc:	429a      	cmp	r2, r3
 80053be:	d802      	bhi.n	80053c6 <prvAddNewTaskToReadyList+0x4e>
 80053c0:	4a1f      	ldr	r2, [pc, #124]	; (8005440 <prvAddNewTaskToReadyList+0xc8>)
 80053c2:	687b      	ldr	r3, [r7, #4]
 80053c4:	6013      	str	r3, [r2, #0]
 80053c6:	4b20      	ldr	r3, [pc, #128]	; (8005448 <prvAddNewTaskToReadyList+0xd0>)
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	3301      	adds	r3, #1
 80053cc:	4a1e      	ldr	r2, [pc, #120]	; (8005448 <prvAddNewTaskToReadyList+0xd0>)
 80053ce:	6013      	str	r3, [r2, #0]
 80053d0:	4b1d      	ldr	r3, [pc, #116]	; (8005448 <prvAddNewTaskToReadyList+0xd0>)
 80053d2:	681a      	ldr	r2, [r3, #0]
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	645a      	str	r2, [r3, #68]	; 0x44
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053dc:	4b1b      	ldr	r3, [pc, #108]	; (800544c <prvAddNewTaskToReadyList+0xd4>)
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	429a      	cmp	r2, r3
 80053e2:	d903      	bls.n	80053ec <prvAddNewTaskToReadyList+0x74>
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053e8:	4a18      	ldr	r2, [pc, #96]	; (800544c <prvAddNewTaskToReadyList+0xd4>)
 80053ea:	6013      	str	r3, [r2, #0]
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053f0:	4613      	mov	r3, r2
 80053f2:	009b      	lsls	r3, r3, #2
 80053f4:	4413      	add	r3, r2
 80053f6:	009b      	lsls	r3, r3, #2
 80053f8:	4a15      	ldr	r2, [pc, #84]	; (8005450 <prvAddNewTaskToReadyList+0xd8>)
 80053fa:	441a      	add	r2, r3
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	3304      	adds	r3, #4
 8005400:	4619      	mov	r1, r3
 8005402:	4610      	mov	r0, r2
 8005404:	f7fe ff6d 	bl	80042e2 <vListInsertEnd>
 8005408:	f001 fb9c 	bl	8006b44 <vPortExitCritical>
 800540c:	4b0d      	ldr	r3, [pc, #52]	; (8005444 <prvAddNewTaskToReadyList+0xcc>)
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	2b00      	cmp	r3, #0
 8005412:	d00e      	beq.n	8005432 <prvAddNewTaskToReadyList+0xba>
 8005414:	4b0a      	ldr	r3, [pc, #40]	; (8005440 <prvAddNewTaskToReadyList+0xc8>)
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800541e:	429a      	cmp	r2, r3
 8005420:	d207      	bcs.n	8005432 <prvAddNewTaskToReadyList+0xba>
 8005422:	4b0c      	ldr	r3, [pc, #48]	; (8005454 <prvAddNewTaskToReadyList+0xdc>)
 8005424:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005428:	601a      	str	r2, [r3, #0]
 800542a:	f3bf 8f4f 	dsb	sy
 800542e:	f3bf 8f6f 	isb	sy
 8005432:	bf00      	nop
 8005434:	3708      	adds	r7, #8
 8005436:	46bd      	mov	sp, r7
 8005438:	bd80      	pop	{r7, pc}
 800543a:	bf00      	nop
 800543c:	20000f18 	.word	0x20000f18
 8005440:	20000a44 	.word	0x20000a44
 8005444:	20000f24 	.word	0x20000f24
 8005448:	20000f34 	.word	0x20000f34
 800544c:	20000f20 	.word	0x20000f20
 8005450:	20000a48 	.word	0x20000a48
 8005454:	e000ed04 	.word	0xe000ed04

08005458 <vTaskDelay>:
 8005458:	b580      	push	{r7, lr}
 800545a:	b084      	sub	sp, #16
 800545c:	af00      	add	r7, sp, #0
 800545e:	6078      	str	r0, [r7, #4]
 8005460:	2300      	movs	r3, #0
 8005462:	60fb      	str	r3, [r7, #12]
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	2b00      	cmp	r3, #0
 8005468:	d017      	beq.n	800549a <vTaskDelay+0x42>
 800546a:	4b13      	ldr	r3, [pc, #76]	; (80054b8 <vTaskDelay+0x60>)
 800546c:	681b      	ldr	r3, [r3, #0]
 800546e:	2b00      	cmp	r3, #0
 8005470:	d00a      	beq.n	8005488 <vTaskDelay+0x30>
 8005472:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005476:	f383 8811 	msr	BASEPRI, r3
 800547a:	f3bf 8f6f 	isb	sy
 800547e:	f3bf 8f4f 	dsb	sy
 8005482:	60bb      	str	r3, [r7, #8]
 8005484:	bf00      	nop
 8005486:	e7fe      	b.n	8005486 <vTaskDelay+0x2e>
 8005488:	f000 f88a 	bl	80055a0 <vTaskSuspendAll>
 800548c:	2100      	movs	r1, #0
 800548e:	6878      	ldr	r0, [r7, #4]
 8005490:	f000 fdfc 	bl	800608c <prvAddCurrentTaskToDelayedList>
 8005494:	f000 f892 	bl	80055bc <xTaskResumeAll>
 8005498:	60f8      	str	r0, [r7, #12]
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	2b00      	cmp	r3, #0
 800549e:	d107      	bne.n	80054b0 <vTaskDelay+0x58>
 80054a0:	4b06      	ldr	r3, [pc, #24]	; (80054bc <vTaskDelay+0x64>)
 80054a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80054a6:	601a      	str	r2, [r3, #0]
 80054a8:	f3bf 8f4f 	dsb	sy
 80054ac:	f3bf 8f6f 	isb	sy
 80054b0:	bf00      	nop
 80054b2:	3710      	adds	r7, #16
 80054b4:	46bd      	mov	sp, r7
 80054b6:	bd80      	pop	{r7, pc}
 80054b8:	20000f40 	.word	0x20000f40
 80054bc:	e000ed04 	.word	0xe000ed04

080054c0 <vTaskStartScheduler>:
 80054c0:	b580      	push	{r7, lr}
 80054c2:	b08a      	sub	sp, #40	; 0x28
 80054c4:	af04      	add	r7, sp, #16
 80054c6:	2300      	movs	r3, #0
 80054c8:	60bb      	str	r3, [r7, #8]
 80054ca:	2300      	movs	r3, #0
 80054cc:	607b      	str	r3, [r7, #4]
 80054ce:	463a      	mov	r2, r7
 80054d0:	1d39      	adds	r1, r7, #4
 80054d2:	f107 0308 	add.w	r3, r7, #8
 80054d6:	4618      	mov	r0, r3
 80054d8:	f7fe fea2 	bl	8004220 <vApplicationGetIdleTaskMemory>
 80054dc:	6839      	ldr	r1, [r7, #0]
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	68ba      	ldr	r2, [r7, #8]
 80054e2:	9202      	str	r2, [sp, #8]
 80054e4:	9301      	str	r3, [sp, #4]
 80054e6:	2300      	movs	r3, #0
 80054e8:	9300      	str	r3, [sp, #0]
 80054ea:	2300      	movs	r3, #0
 80054ec:	460a      	mov	r2, r1
 80054ee:	4924      	ldr	r1, [pc, #144]	; (8005580 <vTaskStartScheduler+0xc0>)
 80054f0:	4824      	ldr	r0, [pc, #144]	; (8005584 <vTaskStartScheduler+0xc4>)
 80054f2:	f7ff fdf9 	bl	80050e8 <xTaskCreateStatic>
 80054f6:	4603      	mov	r3, r0
 80054f8:	4a23      	ldr	r2, [pc, #140]	; (8005588 <vTaskStartScheduler+0xc8>)
 80054fa:	6013      	str	r3, [r2, #0]
 80054fc:	4b22      	ldr	r3, [pc, #136]	; (8005588 <vTaskStartScheduler+0xc8>)
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	2b00      	cmp	r3, #0
 8005502:	d002      	beq.n	800550a <vTaskStartScheduler+0x4a>
 8005504:	2301      	movs	r3, #1
 8005506:	617b      	str	r3, [r7, #20]
 8005508:	e001      	b.n	800550e <vTaskStartScheduler+0x4e>
 800550a:	2300      	movs	r3, #0
 800550c:	617b      	str	r3, [r7, #20]
 800550e:	697b      	ldr	r3, [r7, #20]
 8005510:	2b01      	cmp	r3, #1
 8005512:	d102      	bne.n	800551a <vTaskStartScheduler+0x5a>
 8005514:	f000 fe0e 	bl	8006134 <xTimerCreateTimerTask>
 8005518:	6178      	str	r0, [r7, #20]
 800551a:	697b      	ldr	r3, [r7, #20]
 800551c:	2b01      	cmp	r3, #1
 800551e:	d11b      	bne.n	8005558 <vTaskStartScheduler+0x98>
 8005520:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005524:	f383 8811 	msr	BASEPRI, r3
 8005528:	f3bf 8f6f 	isb	sy
 800552c:	f3bf 8f4f 	dsb	sy
 8005530:	613b      	str	r3, [r7, #16]
 8005532:	bf00      	nop
 8005534:	4b15      	ldr	r3, [pc, #84]	; (800558c <vTaskStartScheduler+0xcc>)
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	3354      	adds	r3, #84	; 0x54
 800553a:	4a15      	ldr	r2, [pc, #84]	; (8005590 <vTaskStartScheduler+0xd0>)
 800553c:	6013      	str	r3, [r2, #0]
 800553e:	4b15      	ldr	r3, [pc, #84]	; (8005594 <vTaskStartScheduler+0xd4>)
 8005540:	f04f 32ff 	mov.w	r2, #4294967295
 8005544:	601a      	str	r2, [r3, #0]
 8005546:	4b14      	ldr	r3, [pc, #80]	; (8005598 <vTaskStartScheduler+0xd8>)
 8005548:	2201      	movs	r2, #1
 800554a:	601a      	str	r2, [r3, #0]
 800554c:	4b13      	ldr	r3, [pc, #76]	; (800559c <vTaskStartScheduler+0xdc>)
 800554e:	2200      	movs	r2, #0
 8005550:	601a      	str	r2, [r3, #0]
 8005552:	f001 fa25 	bl	80069a0 <xPortStartScheduler>
 8005556:	e00e      	b.n	8005576 <vTaskStartScheduler+0xb6>
 8005558:	697b      	ldr	r3, [r7, #20]
 800555a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800555e:	d10a      	bne.n	8005576 <vTaskStartScheduler+0xb6>
 8005560:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005564:	f383 8811 	msr	BASEPRI, r3
 8005568:	f3bf 8f6f 	isb	sy
 800556c:	f3bf 8f4f 	dsb	sy
 8005570:	60fb      	str	r3, [r7, #12]
 8005572:	bf00      	nop
 8005574:	e7fe      	b.n	8005574 <vTaskStartScheduler+0xb4>
 8005576:	bf00      	nop
 8005578:	3718      	adds	r7, #24
 800557a:	46bd      	mov	sp, r7
 800557c:	bd80      	pop	{r7, pc}
 800557e:	bf00      	nop
 8005580:	08008260 	.word	0x08008260
 8005584:	08005bc5 	.word	0x08005bc5
 8005588:	20000f3c 	.word	0x20000f3c
 800558c:	20000a44 	.word	0x20000a44
 8005590:	20000024 	.word	0x20000024
 8005594:	20000f38 	.word	0x20000f38
 8005598:	20000f24 	.word	0x20000f24
 800559c:	20000f1c 	.word	0x20000f1c

080055a0 <vTaskSuspendAll>:
 80055a0:	b480      	push	{r7}
 80055a2:	af00      	add	r7, sp, #0
 80055a4:	4b04      	ldr	r3, [pc, #16]	; (80055b8 <vTaskSuspendAll+0x18>)
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	3301      	adds	r3, #1
 80055aa:	4a03      	ldr	r2, [pc, #12]	; (80055b8 <vTaskSuspendAll+0x18>)
 80055ac:	6013      	str	r3, [r2, #0]
 80055ae:	bf00      	nop
 80055b0:	46bd      	mov	sp, r7
 80055b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055b6:	4770      	bx	lr
 80055b8:	20000f40 	.word	0x20000f40

080055bc <xTaskResumeAll>:
 80055bc:	b580      	push	{r7, lr}
 80055be:	b084      	sub	sp, #16
 80055c0:	af00      	add	r7, sp, #0
 80055c2:	2300      	movs	r3, #0
 80055c4:	60fb      	str	r3, [r7, #12]
 80055c6:	2300      	movs	r3, #0
 80055c8:	60bb      	str	r3, [r7, #8]
 80055ca:	4b42      	ldr	r3, [pc, #264]	; (80056d4 <xTaskResumeAll+0x118>)
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	2b00      	cmp	r3, #0
 80055d0:	d10a      	bne.n	80055e8 <xTaskResumeAll+0x2c>
 80055d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80055d6:	f383 8811 	msr	BASEPRI, r3
 80055da:	f3bf 8f6f 	isb	sy
 80055de:	f3bf 8f4f 	dsb	sy
 80055e2:	603b      	str	r3, [r7, #0]
 80055e4:	bf00      	nop
 80055e6:	e7fe      	b.n	80055e6 <xTaskResumeAll+0x2a>
 80055e8:	f001 fa7c 	bl	8006ae4 <vPortEnterCritical>
 80055ec:	4b39      	ldr	r3, [pc, #228]	; (80056d4 <xTaskResumeAll+0x118>)
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	3b01      	subs	r3, #1
 80055f2:	4a38      	ldr	r2, [pc, #224]	; (80056d4 <xTaskResumeAll+0x118>)
 80055f4:	6013      	str	r3, [r2, #0]
 80055f6:	4b37      	ldr	r3, [pc, #220]	; (80056d4 <xTaskResumeAll+0x118>)
 80055f8:	681b      	ldr	r3, [r3, #0]
 80055fa:	2b00      	cmp	r3, #0
 80055fc:	d162      	bne.n	80056c4 <xTaskResumeAll+0x108>
 80055fe:	4b36      	ldr	r3, [pc, #216]	; (80056d8 <xTaskResumeAll+0x11c>)
 8005600:	681b      	ldr	r3, [r3, #0]
 8005602:	2b00      	cmp	r3, #0
 8005604:	d05e      	beq.n	80056c4 <xTaskResumeAll+0x108>
 8005606:	e02f      	b.n	8005668 <xTaskResumeAll+0xac>
 8005608:	4b34      	ldr	r3, [pc, #208]	; (80056dc <xTaskResumeAll+0x120>)
 800560a:	68db      	ldr	r3, [r3, #12]
 800560c:	68db      	ldr	r3, [r3, #12]
 800560e:	60fb      	str	r3, [r7, #12]
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	3318      	adds	r3, #24
 8005614:	4618      	mov	r0, r3
 8005616:	f7fe fec1 	bl	800439c <uxListRemove>
 800561a:	68fb      	ldr	r3, [r7, #12]
 800561c:	3304      	adds	r3, #4
 800561e:	4618      	mov	r0, r3
 8005620:	f7fe febc 	bl	800439c <uxListRemove>
 8005624:	68fb      	ldr	r3, [r7, #12]
 8005626:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005628:	4b2d      	ldr	r3, [pc, #180]	; (80056e0 <xTaskResumeAll+0x124>)
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	429a      	cmp	r2, r3
 800562e:	d903      	bls.n	8005638 <xTaskResumeAll+0x7c>
 8005630:	68fb      	ldr	r3, [r7, #12]
 8005632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005634:	4a2a      	ldr	r2, [pc, #168]	; (80056e0 <xTaskResumeAll+0x124>)
 8005636:	6013      	str	r3, [r2, #0]
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800563c:	4613      	mov	r3, r2
 800563e:	009b      	lsls	r3, r3, #2
 8005640:	4413      	add	r3, r2
 8005642:	009b      	lsls	r3, r3, #2
 8005644:	4a27      	ldr	r2, [pc, #156]	; (80056e4 <xTaskResumeAll+0x128>)
 8005646:	441a      	add	r2, r3
 8005648:	68fb      	ldr	r3, [r7, #12]
 800564a:	3304      	adds	r3, #4
 800564c:	4619      	mov	r1, r3
 800564e:	4610      	mov	r0, r2
 8005650:	f7fe fe47 	bl	80042e2 <vListInsertEnd>
 8005654:	68fb      	ldr	r3, [r7, #12]
 8005656:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005658:	4b23      	ldr	r3, [pc, #140]	; (80056e8 <xTaskResumeAll+0x12c>)
 800565a:	681b      	ldr	r3, [r3, #0]
 800565c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800565e:	429a      	cmp	r2, r3
 8005660:	d302      	bcc.n	8005668 <xTaskResumeAll+0xac>
 8005662:	4b22      	ldr	r3, [pc, #136]	; (80056ec <xTaskResumeAll+0x130>)
 8005664:	2201      	movs	r2, #1
 8005666:	601a      	str	r2, [r3, #0]
 8005668:	4b1c      	ldr	r3, [pc, #112]	; (80056dc <xTaskResumeAll+0x120>)
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	2b00      	cmp	r3, #0
 800566e:	d1cb      	bne.n	8005608 <xTaskResumeAll+0x4c>
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	2b00      	cmp	r3, #0
 8005674:	d001      	beq.n	800567a <xTaskResumeAll+0xbe>
 8005676:	f000 fb5f 	bl	8005d38 <prvResetNextTaskUnblockTime>
 800567a:	4b1d      	ldr	r3, [pc, #116]	; (80056f0 <xTaskResumeAll+0x134>)
 800567c:	681b      	ldr	r3, [r3, #0]
 800567e:	607b      	str	r3, [r7, #4]
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	2b00      	cmp	r3, #0
 8005684:	d010      	beq.n	80056a8 <xTaskResumeAll+0xec>
 8005686:	f000 f847 	bl	8005718 <xTaskIncrementTick>
 800568a:	4603      	mov	r3, r0
 800568c:	2b00      	cmp	r3, #0
 800568e:	d002      	beq.n	8005696 <xTaskResumeAll+0xda>
 8005690:	4b16      	ldr	r3, [pc, #88]	; (80056ec <xTaskResumeAll+0x130>)
 8005692:	2201      	movs	r2, #1
 8005694:	601a      	str	r2, [r3, #0]
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	3b01      	subs	r3, #1
 800569a:	607b      	str	r3, [r7, #4]
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	2b00      	cmp	r3, #0
 80056a0:	d1f1      	bne.n	8005686 <xTaskResumeAll+0xca>
 80056a2:	4b13      	ldr	r3, [pc, #76]	; (80056f0 <xTaskResumeAll+0x134>)
 80056a4:	2200      	movs	r2, #0
 80056a6:	601a      	str	r2, [r3, #0]
 80056a8:	4b10      	ldr	r3, [pc, #64]	; (80056ec <xTaskResumeAll+0x130>)
 80056aa:	681b      	ldr	r3, [r3, #0]
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	d009      	beq.n	80056c4 <xTaskResumeAll+0x108>
 80056b0:	2301      	movs	r3, #1
 80056b2:	60bb      	str	r3, [r7, #8]
 80056b4:	4b0f      	ldr	r3, [pc, #60]	; (80056f4 <xTaskResumeAll+0x138>)
 80056b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80056ba:	601a      	str	r2, [r3, #0]
 80056bc:	f3bf 8f4f 	dsb	sy
 80056c0:	f3bf 8f6f 	isb	sy
 80056c4:	f001 fa3e 	bl	8006b44 <vPortExitCritical>
 80056c8:	68bb      	ldr	r3, [r7, #8]
 80056ca:	4618      	mov	r0, r3
 80056cc:	3710      	adds	r7, #16
 80056ce:	46bd      	mov	sp, r7
 80056d0:	bd80      	pop	{r7, pc}
 80056d2:	bf00      	nop
 80056d4:	20000f40 	.word	0x20000f40
 80056d8:	20000f18 	.word	0x20000f18
 80056dc:	20000ed8 	.word	0x20000ed8
 80056e0:	20000f20 	.word	0x20000f20
 80056e4:	20000a48 	.word	0x20000a48
 80056e8:	20000a44 	.word	0x20000a44
 80056ec:	20000f2c 	.word	0x20000f2c
 80056f0:	20000f28 	.word	0x20000f28
 80056f4:	e000ed04 	.word	0xe000ed04

080056f8 <xTaskGetTickCount>:
 80056f8:	b480      	push	{r7}
 80056fa:	b083      	sub	sp, #12
 80056fc:	af00      	add	r7, sp, #0
 80056fe:	4b05      	ldr	r3, [pc, #20]	; (8005714 <xTaskGetTickCount+0x1c>)
 8005700:	681b      	ldr	r3, [r3, #0]
 8005702:	607b      	str	r3, [r7, #4]
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	4618      	mov	r0, r3
 8005708:	370c      	adds	r7, #12
 800570a:	46bd      	mov	sp, r7
 800570c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005710:	4770      	bx	lr
 8005712:	bf00      	nop
 8005714:	20000f1c 	.word	0x20000f1c

08005718 <xTaskIncrementTick>:
 8005718:	b580      	push	{r7, lr}
 800571a:	b086      	sub	sp, #24
 800571c:	af00      	add	r7, sp, #0
 800571e:	2300      	movs	r3, #0
 8005720:	617b      	str	r3, [r7, #20]
 8005722:	4b4f      	ldr	r3, [pc, #316]	; (8005860 <xTaskIncrementTick+0x148>)
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	2b00      	cmp	r3, #0
 8005728:	f040 808f 	bne.w	800584a <xTaskIncrementTick+0x132>
 800572c:	4b4d      	ldr	r3, [pc, #308]	; (8005864 <xTaskIncrementTick+0x14c>)
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	3301      	adds	r3, #1
 8005732:	613b      	str	r3, [r7, #16]
 8005734:	4a4b      	ldr	r2, [pc, #300]	; (8005864 <xTaskIncrementTick+0x14c>)
 8005736:	693b      	ldr	r3, [r7, #16]
 8005738:	6013      	str	r3, [r2, #0]
 800573a:	693b      	ldr	r3, [r7, #16]
 800573c:	2b00      	cmp	r3, #0
 800573e:	d120      	bne.n	8005782 <xTaskIncrementTick+0x6a>
 8005740:	4b49      	ldr	r3, [pc, #292]	; (8005868 <xTaskIncrementTick+0x150>)
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	681b      	ldr	r3, [r3, #0]
 8005746:	2b00      	cmp	r3, #0
 8005748:	d00a      	beq.n	8005760 <xTaskIncrementTick+0x48>
 800574a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800574e:	f383 8811 	msr	BASEPRI, r3
 8005752:	f3bf 8f6f 	isb	sy
 8005756:	f3bf 8f4f 	dsb	sy
 800575a:	603b      	str	r3, [r7, #0]
 800575c:	bf00      	nop
 800575e:	e7fe      	b.n	800575e <xTaskIncrementTick+0x46>
 8005760:	4b41      	ldr	r3, [pc, #260]	; (8005868 <xTaskIncrementTick+0x150>)
 8005762:	681b      	ldr	r3, [r3, #0]
 8005764:	60fb      	str	r3, [r7, #12]
 8005766:	4b41      	ldr	r3, [pc, #260]	; (800586c <xTaskIncrementTick+0x154>)
 8005768:	681b      	ldr	r3, [r3, #0]
 800576a:	4a3f      	ldr	r2, [pc, #252]	; (8005868 <xTaskIncrementTick+0x150>)
 800576c:	6013      	str	r3, [r2, #0]
 800576e:	4a3f      	ldr	r2, [pc, #252]	; (800586c <xTaskIncrementTick+0x154>)
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	6013      	str	r3, [r2, #0]
 8005774:	4b3e      	ldr	r3, [pc, #248]	; (8005870 <xTaskIncrementTick+0x158>)
 8005776:	681b      	ldr	r3, [r3, #0]
 8005778:	3301      	adds	r3, #1
 800577a:	4a3d      	ldr	r2, [pc, #244]	; (8005870 <xTaskIncrementTick+0x158>)
 800577c:	6013      	str	r3, [r2, #0]
 800577e:	f000 fadb 	bl	8005d38 <prvResetNextTaskUnblockTime>
 8005782:	4b3c      	ldr	r3, [pc, #240]	; (8005874 <xTaskIncrementTick+0x15c>)
 8005784:	681b      	ldr	r3, [r3, #0]
 8005786:	693a      	ldr	r2, [r7, #16]
 8005788:	429a      	cmp	r2, r3
 800578a:	d349      	bcc.n	8005820 <xTaskIncrementTick+0x108>
 800578c:	4b36      	ldr	r3, [pc, #216]	; (8005868 <xTaskIncrementTick+0x150>)
 800578e:	681b      	ldr	r3, [r3, #0]
 8005790:	681b      	ldr	r3, [r3, #0]
 8005792:	2b00      	cmp	r3, #0
 8005794:	d104      	bne.n	80057a0 <xTaskIncrementTick+0x88>
 8005796:	4b37      	ldr	r3, [pc, #220]	; (8005874 <xTaskIncrementTick+0x15c>)
 8005798:	f04f 32ff 	mov.w	r2, #4294967295
 800579c:	601a      	str	r2, [r3, #0]
 800579e:	e03f      	b.n	8005820 <xTaskIncrementTick+0x108>
 80057a0:	4b31      	ldr	r3, [pc, #196]	; (8005868 <xTaskIncrementTick+0x150>)
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	68db      	ldr	r3, [r3, #12]
 80057a6:	68db      	ldr	r3, [r3, #12]
 80057a8:	60bb      	str	r3, [r7, #8]
 80057aa:	68bb      	ldr	r3, [r7, #8]
 80057ac:	685b      	ldr	r3, [r3, #4]
 80057ae:	607b      	str	r3, [r7, #4]
 80057b0:	693a      	ldr	r2, [r7, #16]
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	429a      	cmp	r2, r3
 80057b6:	d203      	bcs.n	80057c0 <xTaskIncrementTick+0xa8>
 80057b8:	4a2e      	ldr	r2, [pc, #184]	; (8005874 <xTaskIncrementTick+0x15c>)
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	6013      	str	r3, [r2, #0]
 80057be:	e02f      	b.n	8005820 <xTaskIncrementTick+0x108>
 80057c0:	68bb      	ldr	r3, [r7, #8]
 80057c2:	3304      	adds	r3, #4
 80057c4:	4618      	mov	r0, r3
 80057c6:	f7fe fde9 	bl	800439c <uxListRemove>
 80057ca:	68bb      	ldr	r3, [r7, #8]
 80057cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057ce:	2b00      	cmp	r3, #0
 80057d0:	d004      	beq.n	80057dc <xTaskIncrementTick+0xc4>
 80057d2:	68bb      	ldr	r3, [r7, #8]
 80057d4:	3318      	adds	r3, #24
 80057d6:	4618      	mov	r0, r3
 80057d8:	f7fe fde0 	bl	800439c <uxListRemove>
 80057dc:	68bb      	ldr	r3, [r7, #8]
 80057de:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80057e0:	4b25      	ldr	r3, [pc, #148]	; (8005878 <xTaskIncrementTick+0x160>)
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	429a      	cmp	r2, r3
 80057e6:	d903      	bls.n	80057f0 <xTaskIncrementTick+0xd8>
 80057e8:	68bb      	ldr	r3, [r7, #8]
 80057ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80057ec:	4a22      	ldr	r2, [pc, #136]	; (8005878 <xTaskIncrementTick+0x160>)
 80057ee:	6013      	str	r3, [r2, #0]
 80057f0:	68bb      	ldr	r3, [r7, #8]
 80057f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80057f4:	4613      	mov	r3, r2
 80057f6:	009b      	lsls	r3, r3, #2
 80057f8:	4413      	add	r3, r2
 80057fa:	009b      	lsls	r3, r3, #2
 80057fc:	4a1f      	ldr	r2, [pc, #124]	; (800587c <xTaskIncrementTick+0x164>)
 80057fe:	441a      	add	r2, r3
 8005800:	68bb      	ldr	r3, [r7, #8]
 8005802:	3304      	adds	r3, #4
 8005804:	4619      	mov	r1, r3
 8005806:	4610      	mov	r0, r2
 8005808:	f7fe fd6b 	bl	80042e2 <vListInsertEnd>
 800580c:	68bb      	ldr	r3, [r7, #8]
 800580e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005810:	4b1b      	ldr	r3, [pc, #108]	; (8005880 <xTaskIncrementTick+0x168>)
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005816:	429a      	cmp	r2, r3
 8005818:	d3b8      	bcc.n	800578c <xTaskIncrementTick+0x74>
 800581a:	2301      	movs	r3, #1
 800581c:	617b      	str	r3, [r7, #20]
 800581e:	e7b5      	b.n	800578c <xTaskIncrementTick+0x74>
 8005820:	4b17      	ldr	r3, [pc, #92]	; (8005880 <xTaskIncrementTick+0x168>)
 8005822:	681b      	ldr	r3, [r3, #0]
 8005824:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005826:	4915      	ldr	r1, [pc, #84]	; (800587c <xTaskIncrementTick+0x164>)
 8005828:	4613      	mov	r3, r2
 800582a:	009b      	lsls	r3, r3, #2
 800582c:	4413      	add	r3, r2
 800582e:	009b      	lsls	r3, r3, #2
 8005830:	440b      	add	r3, r1
 8005832:	681b      	ldr	r3, [r3, #0]
 8005834:	2b01      	cmp	r3, #1
 8005836:	d901      	bls.n	800583c <xTaskIncrementTick+0x124>
 8005838:	2301      	movs	r3, #1
 800583a:	617b      	str	r3, [r7, #20]
 800583c:	4b11      	ldr	r3, [pc, #68]	; (8005884 <xTaskIncrementTick+0x16c>)
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	2b00      	cmp	r3, #0
 8005842:	d007      	beq.n	8005854 <xTaskIncrementTick+0x13c>
 8005844:	2301      	movs	r3, #1
 8005846:	617b      	str	r3, [r7, #20]
 8005848:	e004      	b.n	8005854 <xTaskIncrementTick+0x13c>
 800584a:	4b0f      	ldr	r3, [pc, #60]	; (8005888 <xTaskIncrementTick+0x170>)
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	3301      	adds	r3, #1
 8005850:	4a0d      	ldr	r2, [pc, #52]	; (8005888 <xTaskIncrementTick+0x170>)
 8005852:	6013      	str	r3, [r2, #0]
 8005854:	697b      	ldr	r3, [r7, #20]
 8005856:	4618      	mov	r0, r3
 8005858:	3718      	adds	r7, #24
 800585a:	46bd      	mov	sp, r7
 800585c:	bd80      	pop	{r7, pc}
 800585e:	bf00      	nop
 8005860:	20000f40 	.word	0x20000f40
 8005864:	20000f1c 	.word	0x20000f1c
 8005868:	20000ed0 	.word	0x20000ed0
 800586c:	20000ed4 	.word	0x20000ed4
 8005870:	20000f30 	.word	0x20000f30
 8005874:	20000f38 	.word	0x20000f38
 8005878:	20000f20 	.word	0x20000f20
 800587c:	20000a48 	.word	0x20000a48
 8005880:	20000a44 	.word	0x20000a44
 8005884:	20000f2c 	.word	0x20000f2c
 8005888:	20000f28 	.word	0x20000f28

0800588c <vTaskSwitchContext>:
 800588c:	b480      	push	{r7}
 800588e:	b085      	sub	sp, #20
 8005890:	af00      	add	r7, sp, #0
 8005892:	4b2a      	ldr	r3, [pc, #168]	; (800593c <vTaskSwitchContext+0xb0>)
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	2b00      	cmp	r3, #0
 8005898:	d003      	beq.n	80058a2 <vTaskSwitchContext+0x16>
 800589a:	4b29      	ldr	r3, [pc, #164]	; (8005940 <vTaskSwitchContext+0xb4>)
 800589c:	2201      	movs	r2, #1
 800589e:	601a      	str	r2, [r3, #0]
 80058a0:	e046      	b.n	8005930 <vTaskSwitchContext+0xa4>
 80058a2:	4b27      	ldr	r3, [pc, #156]	; (8005940 <vTaskSwitchContext+0xb4>)
 80058a4:	2200      	movs	r2, #0
 80058a6:	601a      	str	r2, [r3, #0]
 80058a8:	4b26      	ldr	r3, [pc, #152]	; (8005944 <vTaskSwitchContext+0xb8>)
 80058aa:	681b      	ldr	r3, [r3, #0]
 80058ac:	60fb      	str	r3, [r7, #12]
 80058ae:	e010      	b.n	80058d2 <vTaskSwitchContext+0x46>
 80058b0:	68fb      	ldr	r3, [r7, #12]
 80058b2:	2b00      	cmp	r3, #0
 80058b4:	d10a      	bne.n	80058cc <vTaskSwitchContext+0x40>
 80058b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80058ba:	f383 8811 	msr	BASEPRI, r3
 80058be:	f3bf 8f6f 	isb	sy
 80058c2:	f3bf 8f4f 	dsb	sy
 80058c6:	607b      	str	r3, [r7, #4]
 80058c8:	bf00      	nop
 80058ca:	e7fe      	b.n	80058ca <vTaskSwitchContext+0x3e>
 80058cc:	68fb      	ldr	r3, [r7, #12]
 80058ce:	3b01      	subs	r3, #1
 80058d0:	60fb      	str	r3, [r7, #12]
 80058d2:	491d      	ldr	r1, [pc, #116]	; (8005948 <vTaskSwitchContext+0xbc>)
 80058d4:	68fa      	ldr	r2, [r7, #12]
 80058d6:	4613      	mov	r3, r2
 80058d8:	009b      	lsls	r3, r3, #2
 80058da:	4413      	add	r3, r2
 80058dc:	009b      	lsls	r3, r3, #2
 80058de:	440b      	add	r3, r1
 80058e0:	681b      	ldr	r3, [r3, #0]
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	d0e4      	beq.n	80058b0 <vTaskSwitchContext+0x24>
 80058e6:	68fa      	ldr	r2, [r7, #12]
 80058e8:	4613      	mov	r3, r2
 80058ea:	009b      	lsls	r3, r3, #2
 80058ec:	4413      	add	r3, r2
 80058ee:	009b      	lsls	r3, r3, #2
 80058f0:	4a15      	ldr	r2, [pc, #84]	; (8005948 <vTaskSwitchContext+0xbc>)
 80058f2:	4413      	add	r3, r2
 80058f4:	60bb      	str	r3, [r7, #8]
 80058f6:	68bb      	ldr	r3, [r7, #8]
 80058f8:	685b      	ldr	r3, [r3, #4]
 80058fa:	685a      	ldr	r2, [r3, #4]
 80058fc:	68bb      	ldr	r3, [r7, #8]
 80058fe:	605a      	str	r2, [r3, #4]
 8005900:	68bb      	ldr	r3, [r7, #8]
 8005902:	685a      	ldr	r2, [r3, #4]
 8005904:	68bb      	ldr	r3, [r7, #8]
 8005906:	3308      	adds	r3, #8
 8005908:	429a      	cmp	r2, r3
 800590a:	d104      	bne.n	8005916 <vTaskSwitchContext+0x8a>
 800590c:	68bb      	ldr	r3, [r7, #8]
 800590e:	685b      	ldr	r3, [r3, #4]
 8005910:	685a      	ldr	r2, [r3, #4]
 8005912:	68bb      	ldr	r3, [r7, #8]
 8005914:	605a      	str	r2, [r3, #4]
 8005916:	68bb      	ldr	r3, [r7, #8]
 8005918:	685b      	ldr	r3, [r3, #4]
 800591a:	68db      	ldr	r3, [r3, #12]
 800591c:	4a0b      	ldr	r2, [pc, #44]	; (800594c <vTaskSwitchContext+0xc0>)
 800591e:	6013      	str	r3, [r2, #0]
 8005920:	4a08      	ldr	r2, [pc, #32]	; (8005944 <vTaskSwitchContext+0xb8>)
 8005922:	68fb      	ldr	r3, [r7, #12]
 8005924:	6013      	str	r3, [r2, #0]
 8005926:	4b09      	ldr	r3, [pc, #36]	; (800594c <vTaskSwitchContext+0xc0>)
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	3354      	adds	r3, #84	; 0x54
 800592c:	4a08      	ldr	r2, [pc, #32]	; (8005950 <vTaskSwitchContext+0xc4>)
 800592e:	6013      	str	r3, [r2, #0]
 8005930:	bf00      	nop
 8005932:	3714      	adds	r7, #20
 8005934:	46bd      	mov	sp, r7
 8005936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800593a:	4770      	bx	lr
 800593c:	20000f40 	.word	0x20000f40
 8005940:	20000f2c 	.word	0x20000f2c
 8005944:	20000f20 	.word	0x20000f20
 8005948:	20000a48 	.word	0x20000a48
 800594c:	20000a44 	.word	0x20000a44
 8005950:	20000024 	.word	0x20000024

08005954 <vTaskPlaceOnEventList>:
 8005954:	b580      	push	{r7, lr}
 8005956:	b084      	sub	sp, #16
 8005958:	af00      	add	r7, sp, #0
 800595a:	6078      	str	r0, [r7, #4]
 800595c:	6039      	str	r1, [r7, #0]
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	2b00      	cmp	r3, #0
 8005962:	d10a      	bne.n	800597a <vTaskPlaceOnEventList+0x26>
 8005964:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005968:	f383 8811 	msr	BASEPRI, r3
 800596c:	f3bf 8f6f 	isb	sy
 8005970:	f3bf 8f4f 	dsb	sy
 8005974:	60fb      	str	r3, [r7, #12]
 8005976:	bf00      	nop
 8005978:	e7fe      	b.n	8005978 <vTaskPlaceOnEventList+0x24>
 800597a:	4b07      	ldr	r3, [pc, #28]	; (8005998 <vTaskPlaceOnEventList+0x44>)
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	3318      	adds	r3, #24
 8005980:	4619      	mov	r1, r3
 8005982:	6878      	ldr	r0, [r7, #4]
 8005984:	f7fe fcd1 	bl	800432a <vListInsert>
 8005988:	2101      	movs	r1, #1
 800598a:	6838      	ldr	r0, [r7, #0]
 800598c:	f000 fb7e 	bl	800608c <prvAddCurrentTaskToDelayedList>
 8005990:	bf00      	nop
 8005992:	3710      	adds	r7, #16
 8005994:	46bd      	mov	sp, r7
 8005996:	bd80      	pop	{r7, pc}
 8005998:	20000a44 	.word	0x20000a44

0800599c <vTaskPlaceOnEventListRestricted>:
 800599c:	b580      	push	{r7, lr}
 800599e:	b086      	sub	sp, #24
 80059a0:	af00      	add	r7, sp, #0
 80059a2:	60f8      	str	r0, [r7, #12]
 80059a4:	60b9      	str	r1, [r7, #8]
 80059a6:	607a      	str	r2, [r7, #4]
 80059a8:	68fb      	ldr	r3, [r7, #12]
 80059aa:	2b00      	cmp	r3, #0
 80059ac:	d10a      	bne.n	80059c4 <vTaskPlaceOnEventListRestricted+0x28>
 80059ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80059b2:	f383 8811 	msr	BASEPRI, r3
 80059b6:	f3bf 8f6f 	isb	sy
 80059ba:	f3bf 8f4f 	dsb	sy
 80059be:	617b      	str	r3, [r7, #20]
 80059c0:	bf00      	nop
 80059c2:	e7fe      	b.n	80059c2 <vTaskPlaceOnEventListRestricted+0x26>
 80059c4:	4b0a      	ldr	r3, [pc, #40]	; (80059f0 <vTaskPlaceOnEventListRestricted+0x54>)
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	3318      	adds	r3, #24
 80059ca:	4619      	mov	r1, r3
 80059cc:	68f8      	ldr	r0, [r7, #12]
 80059ce:	f7fe fc88 	bl	80042e2 <vListInsertEnd>
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	2b00      	cmp	r3, #0
 80059d6:	d002      	beq.n	80059de <vTaskPlaceOnEventListRestricted+0x42>
 80059d8:	f04f 33ff 	mov.w	r3, #4294967295
 80059dc:	60bb      	str	r3, [r7, #8]
 80059de:	6879      	ldr	r1, [r7, #4]
 80059e0:	68b8      	ldr	r0, [r7, #8]
 80059e2:	f000 fb53 	bl	800608c <prvAddCurrentTaskToDelayedList>
 80059e6:	bf00      	nop
 80059e8:	3718      	adds	r7, #24
 80059ea:	46bd      	mov	sp, r7
 80059ec:	bd80      	pop	{r7, pc}
 80059ee:	bf00      	nop
 80059f0:	20000a44 	.word	0x20000a44

080059f4 <xTaskRemoveFromEventList>:
 80059f4:	b580      	push	{r7, lr}
 80059f6:	b086      	sub	sp, #24
 80059f8:	af00      	add	r7, sp, #0
 80059fa:	6078      	str	r0, [r7, #4]
 80059fc:	687b      	ldr	r3, [r7, #4]
 80059fe:	68db      	ldr	r3, [r3, #12]
 8005a00:	68db      	ldr	r3, [r3, #12]
 8005a02:	613b      	str	r3, [r7, #16]
 8005a04:	693b      	ldr	r3, [r7, #16]
 8005a06:	2b00      	cmp	r3, #0
 8005a08:	d10a      	bne.n	8005a20 <xTaskRemoveFromEventList+0x2c>
 8005a0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005a0e:	f383 8811 	msr	BASEPRI, r3
 8005a12:	f3bf 8f6f 	isb	sy
 8005a16:	f3bf 8f4f 	dsb	sy
 8005a1a:	60fb      	str	r3, [r7, #12]
 8005a1c:	bf00      	nop
 8005a1e:	e7fe      	b.n	8005a1e <xTaskRemoveFromEventList+0x2a>
 8005a20:	693b      	ldr	r3, [r7, #16]
 8005a22:	3318      	adds	r3, #24
 8005a24:	4618      	mov	r0, r3
 8005a26:	f7fe fcb9 	bl	800439c <uxListRemove>
 8005a2a:	4b1e      	ldr	r3, [pc, #120]	; (8005aa4 <xTaskRemoveFromEventList+0xb0>)
 8005a2c:	681b      	ldr	r3, [r3, #0]
 8005a2e:	2b00      	cmp	r3, #0
 8005a30:	d11d      	bne.n	8005a6e <xTaskRemoveFromEventList+0x7a>
 8005a32:	693b      	ldr	r3, [r7, #16]
 8005a34:	3304      	adds	r3, #4
 8005a36:	4618      	mov	r0, r3
 8005a38:	f7fe fcb0 	bl	800439c <uxListRemove>
 8005a3c:	693b      	ldr	r3, [r7, #16]
 8005a3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a40:	4b19      	ldr	r3, [pc, #100]	; (8005aa8 <xTaskRemoveFromEventList+0xb4>)
 8005a42:	681b      	ldr	r3, [r3, #0]
 8005a44:	429a      	cmp	r2, r3
 8005a46:	d903      	bls.n	8005a50 <xTaskRemoveFromEventList+0x5c>
 8005a48:	693b      	ldr	r3, [r7, #16]
 8005a4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a4c:	4a16      	ldr	r2, [pc, #88]	; (8005aa8 <xTaskRemoveFromEventList+0xb4>)
 8005a4e:	6013      	str	r3, [r2, #0]
 8005a50:	693b      	ldr	r3, [r7, #16]
 8005a52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a54:	4613      	mov	r3, r2
 8005a56:	009b      	lsls	r3, r3, #2
 8005a58:	4413      	add	r3, r2
 8005a5a:	009b      	lsls	r3, r3, #2
 8005a5c:	4a13      	ldr	r2, [pc, #76]	; (8005aac <xTaskRemoveFromEventList+0xb8>)
 8005a5e:	441a      	add	r2, r3
 8005a60:	693b      	ldr	r3, [r7, #16]
 8005a62:	3304      	adds	r3, #4
 8005a64:	4619      	mov	r1, r3
 8005a66:	4610      	mov	r0, r2
 8005a68:	f7fe fc3b 	bl	80042e2 <vListInsertEnd>
 8005a6c:	e005      	b.n	8005a7a <xTaskRemoveFromEventList+0x86>
 8005a6e:	693b      	ldr	r3, [r7, #16]
 8005a70:	3318      	adds	r3, #24
 8005a72:	4619      	mov	r1, r3
 8005a74:	480e      	ldr	r0, [pc, #56]	; (8005ab0 <xTaskRemoveFromEventList+0xbc>)
 8005a76:	f7fe fc34 	bl	80042e2 <vListInsertEnd>
 8005a7a:	693b      	ldr	r3, [r7, #16]
 8005a7c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a7e:	4b0d      	ldr	r3, [pc, #52]	; (8005ab4 <xTaskRemoveFromEventList+0xc0>)
 8005a80:	681b      	ldr	r3, [r3, #0]
 8005a82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a84:	429a      	cmp	r2, r3
 8005a86:	d905      	bls.n	8005a94 <xTaskRemoveFromEventList+0xa0>
 8005a88:	2301      	movs	r3, #1
 8005a8a:	617b      	str	r3, [r7, #20]
 8005a8c:	4b0a      	ldr	r3, [pc, #40]	; (8005ab8 <xTaskRemoveFromEventList+0xc4>)
 8005a8e:	2201      	movs	r2, #1
 8005a90:	601a      	str	r2, [r3, #0]
 8005a92:	e001      	b.n	8005a98 <xTaskRemoveFromEventList+0xa4>
 8005a94:	2300      	movs	r3, #0
 8005a96:	617b      	str	r3, [r7, #20]
 8005a98:	697b      	ldr	r3, [r7, #20]
 8005a9a:	4618      	mov	r0, r3
 8005a9c:	3718      	adds	r7, #24
 8005a9e:	46bd      	mov	sp, r7
 8005aa0:	bd80      	pop	{r7, pc}
 8005aa2:	bf00      	nop
 8005aa4:	20000f40 	.word	0x20000f40
 8005aa8:	20000f20 	.word	0x20000f20
 8005aac:	20000a48 	.word	0x20000a48
 8005ab0:	20000ed8 	.word	0x20000ed8
 8005ab4:	20000a44 	.word	0x20000a44
 8005ab8:	20000f2c 	.word	0x20000f2c

08005abc <vTaskInternalSetTimeOutState>:
 8005abc:	b480      	push	{r7}
 8005abe:	b083      	sub	sp, #12
 8005ac0:	af00      	add	r7, sp, #0
 8005ac2:	6078      	str	r0, [r7, #4]
 8005ac4:	4b06      	ldr	r3, [pc, #24]	; (8005ae0 <vTaskInternalSetTimeOutState+0x24>)
 8005ac6:	681a      	ldr	r2, [r3, #0]
 8005ac8:	687b      	ldr	r3, [r7, #4]
 8005aca:	601a      	str	r2, [r3, #0]
 8005acc:	4b05      	ldr	r3, [pc, #20]	; (8005ae4 <vTaskInternalSetTimeOutState+0x28>)
 8005ace:	681a      	ldr	r2, [r3, #0]
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	605a      	str	r2, [r3, #4]
 8005ad4:	bf00      	nop
 8005ad6:	370c      	adds	r7, #12
 8005ad8:	46bd      	mov	sp, r7
 8005ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ade:	4770      	bx	lr
 8005ae0:	20000f30 	.word	0x20000f30
 8005ae4:	20000f1c 	.word	0x20000f1c

08005ae8 <xTaskCheckForTimeOut>:
 8005ae8:	b580      	push	{r7, lr}
 8005aea:	b088      	sub	sp, #32
 8005aec:	af00      	add	r7, sp, #0
 8005aee:	6078      	str	r0, [r7, #4]
 8005af0:	6039      	str	r1, [r7, #0]
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	2b00      	cmp	r3, #0
 8005af6:	d10a      	bne.n	8005b0e <xTaskCheckForTimeOut+0x26>
 8005af8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005afc:	f383 8811 	msr	BASEPRI, r3
 8005b00:	f3bf 8f6f 	isb	sy
 8005b04:	f3bf 8f4f 	dsb	sy
 8005b08:	613b      	str	r3, [r7, #16]
 8005b0a:	bf00      	nop
 8005b0c:	e7fe      	b.n	8005b0c <xTaskCheckForTimeOut+0x24>
 8005b0e:	683b      	ldr	r3, [r7, #0]
 8005b10:	2b00      	cmp	r3, #0
 8005b12:	d10a      	bne.n	8005b2a <xTaskCheckForTimeOut+0x42>
 8005b14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005b18:	f383 8811 	msr	BASEPRI, r3
 8005b1c:	f3bf 8f6f 	isb	sy
 8005b20:	f3bf 8f4f 	dsb	sy
 8005b24:	60fb      	str	r3, [r7, #12]
 8005b26:	bf00      	nop
 8005b28:	e7fe      	b.n	8005b28 <xTaskCheckForTimeOut+0x40>
 8005b2a:	f000 ffdb 	bl	8006ae4 <vPortEnterCritical>
 8005b2e:	4b1d      	ldr	r3, [pc, #116]	; (8005ba4 <xTaskCheckForTimeOut+0xbc>)
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	61bb      	str	r3, [r7, #24]
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	685b      	ldr	r3, [r3, #4]
 8005b38:	69ba      	ldr	r2, [r7, #24]
 8005b3a:	1ad3      	subs	r3, r2, r3
 8005b3c:	617b      	str	r3, [r7, #20]
 8005b3e:	683b      	ldr	r3, [r7, #0]
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005b46:	d102      	bne.n	8005b4e <xTaskCheckForTimeOut+0x66>
 8005b48:	2300      	movs	r3, #0
 8005b4a:	61fb      	str	r3, [r7, #28]
 8005b4c:	e023      	b.n	8005b96 <xTaskCheckForTimeOut+0xae>
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	681a      	ldr	r2, [r3, #0]
 8005b52:	4b15      	ldr	r3, [pc, #84]	; (8005ba8 <xTaskCheckForTimeOut+0xc0>)
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	429a      	cmp	r2, r3
 8005b58:	d007      	beq.n	8005b6a <xTaskCheckForTimeOut+0x82>
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	685b      	ldr	r3, [r3, #4]
 8005b5e:	69ba      	ldr	r2, [r7, #24]
 8005b60:	429a      	cmp	r2, r3
 8005b62:	d302      	bcc.n	8005b6a <xTaskCheckForTimeOut+0x82>
 8005b64:	2301      	movs	r3, #1
 8005b66:	61fb      	str	r3, [r7, #28]
 8005b68:	e015      	b.n	8005b96 <xTaskCheckForTimeOut+0xae>
 8005b6a:	683b      	ldr	r3, [r7, #0]
 8005b6c:	681b      	ldr	r3, [r3, #0]
 8005b6e:	697a      	ldr	r2, [r7, #20]
 8005b70:	429a      	cmp	r2, r3
 8005b72:	d20b      	bcs.n	8005b8c <xTaskCheckForTimeOut+0xa4>
 8005b74:	683b      	ldr	r3, [r7, #0]
 8005b76:	681a      	ldr	r2, [r3, #0]
 8005b78:	697b      	ldr	r3, [r7, #20]
 8005b7a:	1ad2      	subs	r2, r2, r3
 8005b7c:	683b      	ldr	r3, [r7, #0]
 8005b7e:	601a      	str	r2, [r3, #0]
 8005b80:	6878      	ldr	r0, [r7, #4]
 8005b82:	f7ff ff9b 	bl	8005abc <vTaskInternalSetTimeOutState>
 8005b86:	2300      	movs	r3, #0
 8005b88:	61fb      	str	r3, [r7, #28]
 8005b8a:	e004      	b.n	8005b96 <xTaskCheckForTimeOut+0xae>
 8005b8c:	683b      	ldr	r3, [r7, #0]
 8005b8e:	2200      	movs	r2, #0
 8005b90:	601a      	str	r2, [r3, #0]
 8005b92:	2301      	movs	r3, #1
 8005b94:	61fb      	str	r3, [r7, #28]
 8005b96:	f000 ffd5 	bl	8006b44 <vPortExitCritical>
 8005b9a:	69fb      	ldr	r3, [r7, #28]
 8005b9c:	4618      	mov	r0, r3
 8005b9e:	3720      	adds	r7, #32
 8005ba0:	46bd      	mov	sp, r7
 8005ba2:	bd80      	pop	{r7, pc}
 8005ba4:	20000f1c 	.word	0x20000f1c
 8005ba8:	20000f30 	.word	0x20000f30

08005bac <vTaskMissedYield>:
 8005bac:	b480      	push	{r7}
 8005bae:	af00      	add	r7, sp, #0
 8005bb0:	4b03      	ldr	r3, [pc, #12]	; (8005bc0 <vTaskMissedYield+0x14>)
 8005bb2:	2201      	movs	r2, #1
 8005bb4:	601a      	str	r2, [r3, #0]
 8005bb6:	bf00      	nop
 8005bb8:	46bd      	mov	sp, r7
 8005bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bbe:	4770      	bx	lr
 8005bc0:	20000f2c 	.word	0x20000f2c

08005bc4 <prvIdleTask>:
 8005bc4:	b580      	push	{r7, lr}
 8005bc6:	b082      	sub	sp, #8
 8005bc8:	af00      	add	r7, sp, #0
 8005bca:	6078      	str	r0, [r7, #4]
 8005bcc:	f000 f852 	bl	8005c74 <prvCheckTasksWaitingTermination>
 8005bd0:	4b06      	ldr	r3, [pc, #24]	; (8005bec <prvIdleTask+0x28>)
 8005bd2:	681b      	ldr	r3, [r3, #0]
 8005bd4:	2b01      	cmp	r3, #1
 8005bd6:	d9f9      	bls.n	8005bcc <prvIdleTask+0x8>
 8005bd8:	4b05      	ldr	r3, [pc, #20]	; (8005bf0 <prvIdleTask+0x2c>)
 8005bda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005bde:	601a      	str	r2, [r3, #0]
 8005be0:	f3bf 8f4f 	dsb	sy
 8005be4:	f3bf 8f6f 	isb	sy
 8005be8:	e7f0      	b.n	8005bcc <prvIdleTask+0x8>
 8005bea:	bf00      	nop
 8005bec:	20000a48 	.word	0x20000a48
 8005bf0:	e000ed04 	.word	0xe000ed04

08005bf4 <prvInitialiseTaskLists>:
 8005bf4:	b580      	push	{r7, lr}
 8005bf6:	b082      	sub	sp, #8
 8005bf8:	af00      	add	r7, sp, #0
 8005bfa:	2300      	movs	r3, #0
 8005bfc:	607b      	str	r3, [r7, #4]
 8005bfe:	e00c      	b.n	8005c1a <prvInitialiseTaskLists+0x26>
 8005c00:	687a      	ldr	r2, [r7, #4]
 8005c02:	4613      	mov	r3, r2
 8005c04:	009b      	lsls	r3, r3, #2
 8005c06:	4413      	add	r3, r2
 8005c08:	009b      	lsls	r3, r3, #2
 8005c0a:	4a12      	ldr	r2, [pc, #72]	; (8005c54 <prvInitialiseTaskLists+0x60>)
 8005c0c:	4413      	add	r3, r2
 8005c0e:	4618      	mov	r0, r3
 8005c10:	f7fe fb3a 	bl	8004288 <vListInitialise>
 8005c14:	687b      	ldr	r3, [r7, #4]
 8005c16:	3301      	adds	r3, #1
 8005c18:	607b      	str	r3, [r7, #4]
 8005c1a:	687b      	ldr	r3, [r7, #4]
 8005c1c:	2b37      	cmp	r3, #55	; 0x37
 8005c1e:	d9ef      	bls.n	8005c00 <prvInitialiseTaskLists+0xc>
 8005c20:	480d      	ldr	r0, [pc, #52]	; (8005c58 <prvInitialiseTaskLists+0x64>)
 8005c22:	f7fe fb31 	bl	8004288 <vListInitialise>
 8005c26:	480d      	ldr	r0, [pc, #52]	; (8005c5c <prvInitialiseTaskLists+0x68>)
 8005c28:	f7fe fb2e 	bl	8004288 <vListInitialise>
 8005c2c:	480c      	ldr	r0, [pc, #48]	; (8005c60 <prvInitialiseTaskLists+0x6c>)
 8005c2e:	f7fe fb2b 	bl	8004288 <vListInitialise>
 8005c32:	480c      	ldr	r0, [pc, #48]	; (8005c64 <prvInitialiseTaskLists+0x70>)
 8005c34:	f7fe fb28 	bl	8004288 <vListInitialise>
 8005c38:	480b      	ldr	r0, [pc, #44]	; (8005c68 <prvInitialiseTaskLists+0x74>)
 8005c3a:	f7fe fb25 	bl	8004288 <vListInitialise>
 8005c3e:	4b0b      	ldr	r3, [pc, #44]	; (8005c6c <prvInitialiseTaskLists+0x78>)
 8005c40:	4a05      	ldr	r2, [pc, #20]	; (8005c58 <prvInitialiseTaskLists+0x64>)
 8005c42:	601a      	str	r2, [r3, #0]
 8005c44:	4b0a      	ldr	r3, [pc, #40]	; (8005c70 <prvInitialiseTaskLists+0x7c>)
 8005c46:	4a05      	ldr	r2, [pc, #20]	; (8005c5c <prvInitialiseTaskLists+0x68>)
 8005c48:	601a      	str	r2, [r3, #0]
 8005c4a:	bf00      	nop
 8005c4c:	3708      	adds	r7, #8
 8005c4e:	46bd      	mov	sp, r7
 8005c50:	bd80      	pop	{r7, pc}
 8005c52:	bf00      	nop
 8005c54:	20000a48 	.word	0x20000a48
 8005c58:	20000ea8 	.word	0x20000ea8
 8005c5c:	20000ebc 	.word	0x20000ebc
 8005c60:	20000ed8 	.word	0x20000ed8
 8005c64:	20000eec 	.word	0x20000eec
 8005c68:	20000f04 	.word	0x20000f04
 8005c6c:	20000ed0 	.word	0x20000ed0
 8005c70:	20000ed4 	.word	0x20000ed4

08005c74 <prvCheckTasksWaitingTermination>:
 8005c74:	b580      	push	{r7, lr}
 8005c76:	b082      	sub	sp, #8
 8005c78:	af00      	add	r7, sp, #0
 8005c7a:	e019      	b.n	8005cb0 <prvCheckTasksWaitingTermination+0x3c>
 8005c7c:	f000 ff32 	bl	8006ae4 <vPortEnterCritical>
 8005c80:	4b10      	ldr	r3, [pc, #64]	; (8005cc4 <prvCheckTasksWaitingTermination+0x50>)
 8005c82:	68db      	ldr	r3, [r3, #12]
 8005c84:	68db      	ldr	r3, [r3, #12]
 8005c86:	607b      	str	r3, [r7, #4]
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	3304      	adds	r3, #4
 8005c8c:	4618      	mov	r0, r3
 8005c8e:	f7fe fb85 	bl	800439c <uxListRemove>
 8005c92:	4b0d      	ldr	r3, [pc, #52]	; (8005cc8 <prvCheckTasksWaitingTermination+0x54>)
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	3b01      	subs	r3, #1
 8005c98:	4a0b      	ldr	r2, [pc, #44]	; (8005cc8 <prvCheckTasksWaitingTermination+0x54>)
 8005c9a:	6013      	str	r3, [r2, #0]
 8005c9c:	4b0b      	ldr	r3, [pc, #44]	; (8005ccc <prvCheckTasksWaitingTermination+0x58>)
 8005c9e:	681b      	ldr	r3, [r3, #0]
 8005ca0:	3b01      	subs	r3, #1
 8005ca2:	4a0a      	ldr	r2, [pc, #40]	; (8005ccc <prvCheckTasksWaitingTermination+0x58>)
 8005ca4:	6013      	str	r3, [r2, #0]
 8005ca6:	f000 ff4d 	bl	8006b44 <vPortExitCritical>
 8005caa:	6878      	ldr	r0, [r7, #4]
 8005cac:	f000 f810 	bl	8005cd0 <prvDeleteTCB>
 8005cb0:	4b06      	ldr	r3, [pc, #24]	; (8005ccc <prvCheckTasksWaitingTermination+0x58>)
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	d1e1      	bne.n	8005c7c <prvCheckTasksWaitingTermination+0x8>
 8005cb8:	bf00      	nop
 8005cba:	bf00      	nop
 8005cbc:	3708      	adds	r7, #8
 8005cbe:	46bd      	mov	sp, r7
 8005cc0:	bd80      	pop	{r7, pc}
 8005cc2:	bf00      	nop
 8005cc4:	20000eec 	.word	0x20000eec
 8005cc8:	20000f18 	.word	0x20000f18
 8005ccc:	20000f00 	.word	0x20000f00

08005cd0 <prvDeleteTCB>:
 8005cd0:	b580      	push	{r7, lr}
 8005cd2:	b084      	sub	sp, #16
 8005cd4:	af00      	add	r7, sp, #0
 8005cd6:	6078      	str	r0, [r7, #4]
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	3354      	adds	r3, #84	; 0x54
 8005cdc:	4618      	mov	r0, r3
 8005cde:	f001 f965 	bl	8006fac <_reclaim_reent>
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	d108      	bne.n	8005cfe <prvDeleteTCB+0x2e>
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005cf0:	4618      	mov	r0, r3
 8005cf2:	f001 f85f 	bl	8006db4 <vPortFree>
 8005cf6:	6878      	ldr	r0, [r7, #4]
 8005cf8:	f001 f85c 	bl	8006db4 <vPortFree>
 8005cfc:	e018      	b.n	8005d30 <prvDeleteTCB+0x60>
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 8005d04:	2b01      	cmp	r3, #1
 8005d06:	d103      	bne.n	8005d10 <prvDeleteTCB+0x40>
 8005d08:	6878      	ldr	r0, [r7, #4]
 8005d0a:	f001 f853 	bl	8006db4 <vPortFree>
 8005d0e:	e00f      	b.n	8005d30 <prvDeleteTCB+0x60>
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	f893 30b9 	ldrb.w	r3, [r3, #185]	; 0xb9
 8005d16:	2b02      	cmp	r3, #2
 8005d18:	d00a      	beq.n	8005d30 <prvDeleteTCB+0x60>
 8005d1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d1e:	f383 8811 	msr	BASEPRI, r3
 8005d22:	f3bf 8f6f 	isb	sy
 8005d26:	f3bf 8f4f 	dsb	sy
 8005d2a:	60fb      	str	r3, [r7, #12]
 8005d2c:	bf00      	nop
 8005d2e:	e7fe      	b.n	8005d2e <prvDeleteTCB+0x5e>
 8005d30:	bf00      	nop
 8005d32:	3710      	adds	r7, #16
 8005d34:	46bd      	mov	sp, r7
 8005d36:	bd80      	pop	{r7, pc}

08005d38 <prvResetNextTaskUnblockTime>:
 8005d38:	b480      	push	{r7}
 8005d3a:	b083      	sub	sp, #12
 8005d3c:	af00      	add	r7, sp, #0
 8005d3e:	4b0c      	ldr	r3, [pc, #48]	; (8005d70 <prvResetNextTaskUnblockTime+0x38>)
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	2b00      	cmp	r3, #0
 8005d46:	d104      	bne.n	8005d52 <prvResetNextTaskUnblockTime+0x1a>
 8005d48:	4b0a      	ldr	r3, [pc, #40]	; (8005d74 <prvResetNextTaskUnblockTime+0x3c>)
 8005d4a:	f04f 32ff 	mov.w	r2, #4294967295
 8005d4e:	601a      	str	r2, [r3, #0]
 8005d50:	e008      	b.n	8005d64 <prvResetNextTaskUnblockTime+0x2c>
 8005d52:	4b07      	ldr	r3, [pc, #28]	; (8005d70 <prvResetNextTaskUnblockTime+0x38>)
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	68db      	ldr	r3, [r3, #12]
 8005d58:	68db      	ldr	r3, [r3, #12]
 8005d5a:	607b      	str	r3, [r7, #4]
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	685b      	ldr	r3, [r3, #4]
 8005d60:	4a04      	ldr	r2, [pc, #16]	; (8005d74 <prvResetNextTaskUnblockTime+0x3c>)
 8005d62:	6013      	str	r3, [r2, #0]
 8005d64:	bf00      	nop
 8005d66:	370c      	adds	r7, #12
 8005d68:	46bd      	mov	sp, r7
 8005d6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d6e:	4770      	bx	lr
 8005d70:	20000ed0 	.word	0x20000ed0
 8005d74:	20000f38 	.word	0x20000f38

08005d78 <xTaskGetSchedulerState>:
 8005d78:	b480      	push	{r7}
 8005d7a:	b083      	sub	sp, #12
 8005d7c:	af00      	add	r7, sp, #0
 8005d7e:	4b0b      	ldr	r3, [pc, #44]	; (8005dac <xTaskGetSchedulerState+0x34>)
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	2b00      	cmp	r3, #0
 8005d84:	d102      	bne.n	8005d8c <xTaskGetSchedulerState+0x14>
 8005d86:	2301      	movs	r3, #1
 8005d88:	607b      	str	r3, [r7, #4]
 8005d8a:	e008      	b.n	8005d9e <xTaskGetSchedulerState+0x26>
 8005d8c:	4b08      	ldr	r3, [pc, #32]	; (8005db0 <xTaskGetSchedulerState+0x38>)
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	2b00      	cmp	r3, #0
 8005d92:	d102      	bne.n	8005d9a <xTaskGetSchedulerState+0x22>
 8005d94:	2302      	movs	r3, #2
 8005d96:	607b      	str	r3, [r7, #4]
 8005d98:	e001      	b.n	8005d9e <xTaskGetSchedulerState+0x26>
 8005d9a:	2300      	movs	r3, #0
 8005d9c:	607b      	str	r3, [r7, #4]
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	4618      	mov	r0, r3
 8005da2:	370c      	adds	r7, #12
 8005da4:	46bd      	mov	sp, r7
 8005da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005daa:	4770      	bx	lr
 8005dac:	20000f24 	.word	0x20000f24
 8005db0:	20000f40 	.word	0x20000f40

08005db4 <xTaskPriorityInherit>:
 8005db4:	b580      	push	{r7, lr}
 8005db6:	b084      	sub	sp, #16
 8005db8:	af00      	add	r7, sp, #0
 8005dba:	6078      	str	r0, [r7, #4]
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	60bb      	str	r3, [r7, #8]
 8005dc0:	2300      	movs	r3, #0
 8005dc2:	60fb      	str	r3, [r7, #12]
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	2b00      	cmp	r3, #0
 8005dc8:	d051      	beq.n	8005e6e <xTaskPriorityInherit+0xba>
 8005dca:	68bb      	ldr	r3, [r7, #8]
 8005dcc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005dce:	4b2a      	ldr	r3, [pc, #168]	; (8005e78 <xTaskPriorityInherit+0xc4>)
 8005dd0:	681b      	ldr	r3, [r3, #0]
 8005dd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005dd4:	429a      	cmp	r2, r3
 8005dd6:	d241      	bcs.n	8005e5c <xTaskPriorityInherit+0xa8>
 8005dd8:	68bb      	ldr	r3, [r7, #8]
 8005dda:	699b      	ldr	r3, [r3, #24]
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	db06      	blt.n	8005dee <xTaskPriorityInherit+0x3a>
 8005de0:	4b25      	ldr	r3, [pc, #148]	; (8005e78 <xTaskPriorityInherit+0xc4>)
 8005de2:	681b      	ldr	r3, [r3, #0]
 8005de4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005de6:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005dea:	68bb      	ldr	r3, [r7, #8]
 8005dec:	619a      	str	r2, [r3, #24]
 8005dee:	68bb      	ldr	r3, [r7, #8]
 8005df0:	6959      	ldr	r1, [r3, #20]
 8005df2:	68bb      	ldr	r3, [r7, #8]
 8005df4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005df6:	4613      	mov	r3, r2
 8005df8:	009b      	lsls	r3, r3, #2
 8005dfa:	4413      	add	r3, r2
 8005dfc:	009b      	lsls	r3, r3, #2
 8005dfe:	4a1f      	ldr	r2, [pc, #124]	; (8005e7c <xTaskPriorityInherit+0xc8>)
 8005e00:	4413      	add	r3, r2
 8005e02:	4299      	cmp	r1, r3
 8005e04:	d122      	bne.n	8005e4c <xTaskPriorityInherit+0x98>
 8005e06:	68bb      	ldr	r3, [r7, #8]
 8005e08:	3304      	adds	r3, #4
 8005e0a:	4618      	mov	r0, r3
 8005e0c:	f7fe fac6 	bl	800439c <uxListRemove>
 8005e10:	4b19      	ldr	r3, [pc, #100]	; (8005e78 <xTaskPriorityInherit+0xc4>)
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e16:	68bb      	ldr	r3, [r7, #8]
 8005e18:	62da      	str	r2, [r3, #44]	; 0x2c
 8005e1a:	68bb      	ldr	r3, [r7, #8]
 8005e1c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e1e:	4b18      	ldr	r3, [pc, #96]	; (8005e80 <xTaskPriorityInherit+0xcc>)
 8005e20:	681b      	ldr	r3, [r3, #0]
 8005e22:	429a      	cmp	r2, r3
 8005e24:	d903      	bls.n	8005e2e <xTaskPriorityInherit+0x7a>
 8005e26:	68bb      	ldr	r3, [r7, #8]
 8005e28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005e2a:	4a15      	ldr	r2, [pc, #84]	; (8005e80 <xTaskPriorityInherit+0xcc>)
 8005e2c:	6013      	str	r3, [r2, #0]
 8005e2e:	68bb      	ldr	r3, [r7, #8]
 8005e30:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e32:	4613      	mov	r3, r2
 8005e34:	009b      	lsls	r3, r3, #2
 8005e36:	4413      	add	r3, r2
 8005e38:	009b      	lsls	r3, r3, #2
 8005e3a:	4a10      	ldr	r2, [pc, #64]	; (8005e7c <xTaskPriorityInherit+0xc8>)
 8005e3c:	441a      	add	r2, r3
 8005e3e:	68bb      	ldr	r3, [r7, #8]
 8005e40:	3304      	adds	r3, #4
 8005e42:	4619      	mov	r1, r3
 8005e44:	4610      	mov	r0, r2
 8005e46:	f7fe fa4c 	bl	80042e2 <vListInsertEnd>
 8005e4a:	e004      	b.n	8005e56 <xTaskPriorityInherit+0xa2>
 8005e4c:	4b0a      	ldr	r3, [pc, #40]	; (8005e78 <xTaskPriorityInherit+0xc4>)
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005e52:	68bb      	ldr	r3, [r7, #8]
 8005e54:	62da      	str	r2, [r3, #44]	; 0x2c
 8005e56:	2301      	movs	r3, #1
 8005e58:	60fb      	str	r3, [r7, #12]
 8005e5a:	e008      	b.n	8005e6e <xTaskPriorityInherit+0xba>
 8005e5c:	68bb      	ldr	r3, [r7, #8]
 8005e5e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005e60:	4b05      	ldr	r3, [pc, #20]	; (8005e78 <xTaskPriorityInherit+0xc4>)
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005e66:	429a      	cmp	r2, r3
 8005e68:	d201      	bcs.n	8005e6e <xTaskPriorityInherit+0xba>
 8005e6a:	2301      	movs	r3, #1
 8005e6c:	60fb      	str	r3, [r7, #12]
 8005e6e:	68fb      	ldr	r3, [r7, #12]
 8005e70:	4618      	mov	r0, r3
 8005e72:	3710      	adds	r7, #16
 8005e74:	46bd      	mov	sp, r7
 8005e76:	bd80      	pop	{r7, pc}
 8005e78:	20000a44 	.word	0x20000a44
 8005e7c:	20000a48 	.word	0x20000a48
 8005e80:	20000f20 	.word	0x20000f20

08005e84 <xTaskPriorityDisinherit>:
 8005e84:	b580      	push	{r7, lr}
 8005e86:	b086      	sub	sp, #24
 8005e88:	af00      	add	r7, sp, #0
 8005e8a:	6078      	str	r0, [r7, #4]
 8005e8c:	687b      	ldr	r3, [r7, #4]
 8005e8e:	613b      	str	r3, [r7, #16]
 8005e90:	2300      	movs	r3, #0
 8005e92:	617b      	str	r3, [r7, #20]
 8005e94:	687b      	ldr	r3, [r7, #4]
 8005e96:	2b00      	cmp	r3, #0
 8005e98:	d056      	beq.n	8005f48 <xTaskPriorityDisinherit+0xc4>
 8005e9a:	4b2e      	ldr	r3, [pc, #184]	; (8005f54 <xTaskPriorityDisinherit+0xd0>)
 8005e9c:	681b      	ldr	r3, [r3, #0]
 8005e9e:	693a      	ldr	r2, [r7, #16]
 8005ea0:	429a      	cmp	r2, r3
 8005ea2:	d00a      	beq.n	8005eba <xTaskPriorityDisinherit+0x36>
 8005ea4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005ea8:	f383 8811 	msr	BASEPRI, r3
 8005eac:	f3bf 8f6f 	isb	sy
 8005eb0:	f3bf 8f4f 	dsb	sy
 8005eb4:	60fb      	str	r3, [r7, #12]
 8005eb6:	bf00      	nop
 8005eb8:	e7fe      	b.n	8005eb8 <xTaskPriorityDisinherit+0x34>
 8005eba:	693b      	ldr	r3, [r7, #16]
 8005ebc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005ebe:	2b00      	cmp	r3, #0
 8005ec0:	d10a      	bne.n	8005ed8 <xTaskPriorityDisinherit+0x54>
 8005ec2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005ec6:	f383 8811 	msr	BASEPRI, r3
 8005eca:	f3bf 8f6f 	isb	sy
 8005ece:	f3bf 8f4f 	dsb	sy
 8005ed2:	60bb      	str	r3, [r7, #8]
 8005ed4:	bf00      	nop
 8005ed6:	e7fe      	b.n	8005ed6 <xTaskPriorityDisinherit+0x52>
 8005ed8:	693b      	ldr	r3, [r7, #16]
 8005eda:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005edc:	1e5a      	subs	r2, r3, #1
 8005ede:	693b      	ldr	r3, [r7, #16]
 8005ee0:	651a      	str	r2, [r3, #80]	; 0x50
 8005ee2:	693b      	ldr	r3, [r7, #16]
 8005ee4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005ee6:	693b      	ldr	r3, [r7, #16]
 8005ee8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005eea:	429a      	cmp	r2, r3
 8005eec:	d02c      	beq.n	8005f48 <xTaskPriorityDisinherit+0xc4>
 8005eee:	693b      	ldr	r3, [r7, #16]
 8005ef0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005ef2:	2b00      	cmp	r3, #0
 8005ef4:	d128      	bne.n	8005f48 <xTaskPriorityDisinherit+0xc4>
 8005ef6:	693b      	ldr	r3, [r7, #16]
 8005ef8:	3304      	adds	r3, #4
 8005efa:	4618      	mov	r0, r3
 8005efc:	f7fe fa4e 	bl	800439c <uxListRemove>
 8005f00:	693b      	ldr	r3, [r7, #16]
 8005f02:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005f04:	693b      	ldr	r3, [r7, #16]
 8005f06:	62da      	str	r2, [r3, #44]	; 0x2c
 8005f08:	693b      	ldr	r3, [r7, #16]
 8005f0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005f0c:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005f10:	693b      	ldr	r3, [r7, #16]
 8005f12:	619a      	str	r2, [r3, #24]
 8005f14:	693b      	ldr	r3, [r7, #16]
 8005f16:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005f18:	4b0f      	ldr	r3, [pc, #60]	; (8005f58 <xTaskPriorityDisinherit+0xd4>)
 8005f1a:	681b      	ldr	r3, [r3, #0]
 8005f1c:	429a      	cmp	r2, r3
 8005f1e:	d903      	bls.n	8005f28 <xTaskPriorityDisinherit+0xa4>
 8005f20:	693b      	ldr	r3, [r7, #16]
 8005f22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005f24:	4a0c      	ldr	r2, [pc, #48]	; (8005f58 <xTaskPriorityDisinherit+0xd4>)
 8005f26:	6013      	str	r3, [r2, #0]
 8005f28:	693b      	ldr	r3, [r7, #16]
 8005f2a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005f2c:	4613      	mov	r3, r2
 8005f2e:	009b      	lsls	r3, r3, #2
 8005f30:	4413      	add	r3, r2
 8005f32:	009b      	lsls	r3, r3, #2
 8005f34:	4a09      	ldr	r2, [pc, #36]	; (8005f5c <xTaskPriorityDisinherit+0xd8>)
 8005f36:	441a      	add	r2, r3
 8005f38:	693b      	ldr	r3, [r7, #16]
 8005f3a:	3304      	adds	r3, #4
 8005f3c:	4619      	mov	r1, r3
 8005f3e:	4610      	mov	r0, r2
 8005f40:	f7fe f9cf 	bl	80042e2 <vListInsertEnd>
 8005f44:	2301      	movs	r3, #1
 8005f46:	617b      	str	r3, [r7, #20]
 8005f48:	697b      	ldr	r3, [r7, #20]
 8005f4a:	4618      	mov	r0, r3
 8005f4c:	3718      	adds	r7, #24
 8005f4e:	46bd      	mov	sp, r7
 8005f50:	bd80      	pop	{r7, pc}
 8005f52:	bf00      	nop
 8005f54:	20000a44 	.word	0x20000a44
 8005f58:	20000f20 	.word	0x20000f20
 8005f5c:	20000a48 	.word	0x20000a48

08005f60 <vTaskPriorityDisinheritAfterTimeout>:
 8005f60:	b580      	push	{r7, lr}
 8005f62:	b088      	sub	sp, #32
 8005f64:	af00      	add	r7, sp, #0
 8005f66:	6078      	str	r0, [r7, #4]
 8005f68:	6039      	str	r1, [r7, #0]
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	61bb      	str	r3, [r7, #24]
 8005f6e:	2301      	movs	r3, #1
 8005f70:	617b      	str	r3, [r7, #20]
 8005f72:	687b      	ldr	r3, [r7, #4]
 8005f74:	2b00      	cmp	r3, #0
 8005f76:	d06a      	beq.n	800604e <vTaskPriorityDisinheritAfterTimeout+0xee>
 8005f78:	69bb      	ldr	r3, [r7, #24]
 8005f7a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005f7c:	2b00      	cmp	r3, #0
 8005f7e:	d10a      	bne.n	8005f96 <vTaskPriorityDisinheritAfterTimeout+0x36>
 8005f80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005f84:	f383 8811 	msr	BASEPRI, r3
 8005f88:	f3bf 8f6f 	isb	sy
 8005f8c:	f3bf 8f4f 	dsb	sy
 8005f90:	60fb      	str	r3, [r7, #12]
 8005f92:	bf00      	nop
 8005f94:	e7fe      	b.n	8005f94 <vTaskPriorityDisinheritAfterTimeout+0x34>
 8005f96:	69bb      	ldr	r3, [r7, #24]
 8005f98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005f9a:	683a      	ldr	r2, [r7, #0]
 8005f9c:	429a      	cmp	r2, r3
 8005f9e:	d902      	bls.n	8005fa6 <vTaskPriorityDisinheritAfterTimeout+0x46>
 8005fa0:	683b      	ldr	r3, [r7, #0]
 8005fa2:	61fb      	str	r3, [r7, #28]
 8005fa4:	e002      	b.n	8005fac <vTaskPriorityDisinheritAfterTimeout+0x4c>
 8005fa6:	69bb      	ldr	r3, [r7, #24]
 8005fa8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005faa:	61fb      	str	r3, [r7, #28]
 8005fac:	69bb      	ldr	r3, [r7, #24]
 8005fae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005fb0:	69fa      	ldr	r2, [r7, #28]
 8005fb2:	429a      	cmp	r2, r3
 8005fb4:	d04b      	beq.n	800604e <vTaskPriorityDisinheritAfterTimeout+0xee>
 8005fb6:	69bb      	ldr	r3, [r7, #24]
 8005fb8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005fba:	697a      	ldr	r2, [r7, #20]
 8005fbc:	429a      	cmp	r2, r3
 8005fbe:	d146      	bne.n	800604e <vTaskPriorityDisinheritAfterTimeout+0xee>
 8005fc0:	4b25      	ldr	r3, [pc, #148]	; (8006058 <vTaskPriorityDisinheritAfterTimeout+0xf8>)
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	69ba      	ldr	r2, [r7, #24]
 8005fc6:	429a      	cmp	r2, r3
 8005fc8:	d10a      	bne.n	8005fe0 <vTaskPriorityDisinheritAfterTimeout+0x80>
 8005fca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005fce:	f383 8811 	msr	BASEPRI, r3
 8005fd2:	f3bf 8f6f 	isb	sy
 8005fd6:	f3bf 8f4f 	dsb	sy
 8005fda:	60bb      	str	r3, [r7, #8]
 8005fdc:	bf00      	nop
 8005fde:	e7fe      	b.n	8005fde <vTaskPriorityDisinheritAfterTimeout+0x7e>
 8005fe0:	69bb      	ldr	r3, [r7, #24]
 8005fe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005fe4:	613b      	str	r3, [r7, #16]
 8005fe6:	69bb      	ldr	r3, [r7, #24]
 8005fe8:	69fa      	ldr	r2, [r7, #28]
 8005fea:	62da      	str	r2, [r3, #44]	; 0x2c
 8005fec:	69bb      	ldr	r3, [r7, #24]
 8005fee:	699b      	ldr	r3, [r3, #24]
 8005ff0:	2b00      	cmp	r3, #0
 8005ff2:	db04      	blt.n	8005ffe <vTaskPriorityDisinheritAfterTimeout+0x9e>
 8005ff4:	69fb      	ldr	r3, [r7, #28]
 8005ff6:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005ffa:	69bb      	ldr	r3, [r7, #24]
 8005ffc:	619a      	str	r2, [r3, #24]
 8005ffe:	69bb      	ldr	r3, [r7, #24]
 8006000:	6959      	ldr	r1, [r3, #20]
 8006002:	693a      	ldr	r2, [r7, #16]
 8006004:	4613      	mov	r3, r2
 8006006:	009b      	lsls	r3, r3, #2
 8006008:	4413      	add	r3, r2
 800600a:	009b      	lsls	r3, r3, #2
 800600c:	4a13      	ldr	r2, [pc, #76]	; (800605c <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 800600e:	4413      	add	r3, r2
 8006010:	4299      	cmp	r1, r3
 8006012:	d11c      	bne.n	800604e <vTaskPriorityDisinheritAfterTimeout+0xee>
 8006014:	69bb      	ldr	r3, [r7, #24]
 8006016:	3304      	adds	r3, #4
 8006018:	4618      	mov	r0, r3
 800601a:	f7fe f9bf 	bl	800439c <uxListRemove>
 800601e:	69bb      	ldr	r3, [r7, #24]
 8006020:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006022:	4b0f      	ldr	r3, [pc, #60]	; (8006060 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 8006024:	681b      	ldr	r3, [r3, #0]
 8006026:	429a      	cmp	r2, r3
 8006028:	d903      	bls.n	8006032 <vTaskPriorityDisinheritAfterTimeout+0xd2>
 800602a:	69bb      	ldr	r3, [r7, #24]
 800602c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800602e:	4a0c      	ldr	r2, [pc, #48]	; (8006060 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 8006030:	6013      	str	r3, [r2, #0]
 8006032:	69bb      	ldr	r3, [r7, #24]
 8006034:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006036:	4613      	mov	r3, r2
 8006038:	009b      	lsls	r3, r3, #2
 800603a:	4413      	add	r3, r2
 800603c:	009b      	lsls	r3, r3, #2
 800603e:	4a07      	ldr	r2, [pc, #28]	; (800605c <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 8006040:	441a      	add	r2, r3
 8006042:	69bb      	ldr	r3, [r7, #24]
 8006044:	3304      	adds	r3, #4
 8006046:	4619      	mov	r1, r3
 8006048:	4610      	mov	r0, r2
 800604a:	f7fe f94a 	bl	80042e2 <vListInsertEnd>
 800604e:	bf00      	nop
 8006050:	3720      	adds	r7, #32
 8006052:	46bd      	mov	sp, r7
 8006054:	bd80      	pop	{r7, pc}
 8006056:	bf00      	nop
 8006058:	20000a44 	.word	0x20000a44
 800605c:	20000a48 	.word	0x20000a48
 8006060:	20000f20 	.word	0x20000f20

08006064 <pvTaskIncrementMutexHeldCount>:
 8006064:	b480      	push	{r7}
 8006066:	af00      	add	r7, sp, #0
 8006068:	4b07      	ldr	r3, [pc, #28]	; (8006088 <pvTaskIncrementMutexHeldCount+0x24>)
 800606a:	681b      	ldr	r3, [r3, #0]
 800606c:	2b00      	cmp	r3, #0
 800606e:	d004      	beq.n	800607a <pvTaskIncrementMutexHeldCount+0x16>
 8006070:	4b05      	ldr	r3, [pc, #20]	; (8006088 <pvTaskIncrementMutexHeldCount+0x24>)
 8006072:	681b      	ldr	r3, [r3, #0]
 8006074:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8006076:	3201      	adds	r2, #1
 8006078:	651a      	str	r2, [r3, #80]	; 0x50
 800607a:	4b03      	ldr	r3, [pc, #12]	; (8006088 <pvTaskIncrementMutexHeldCount+0x24>)
 800607c:	681b      	ldr	r3, [r3, #0]
 800607e:	4618      	mov	r0, r3
 8006080:	46bd      	mov	sp, r7
 8006082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006086:	4770      	bx	lr
 8006088:	20000a44 	.word	0x20000a44

0800608c <prvAddCurrentTaskToDelayedList>:
 800608c:	b580      	push	{r7, lr}
 800608e:	b084      	sub	sp, #16
 8006090:	af00      	add	r7, sp, #0
 8006092:	6078      	str	r0, [r7, #4]
 8006094:	6039      	str	r1, [r7, #0]
 8006096:	4b21      	ldr	r3, [pc, #132]	; (800611c <prvAddCurrentTaskToDelayedList+0x90>)
 8006098:	681b      	ldr	r3, [r3, #0]
 800609a:	60fb      	str	r3, [r7, #12]
 800609c:	4b20      	ldr	r3, [pc, #128]	; (8006120 <prvAddCurrentTaskToDelayedList+0x94>)
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	3304      	adds	r3, #4
 80060a2:	4618      	mov	r0, r3
 80060a4:	f7fe f97a 	bl	800439c <uxListRemove>
 80060a8:	687b      	ldr	r3, [r7, #4]
 80060aa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80060ae:	d10a      	bne.n	80060c6 <prvAddCurrentTaskToDelayedList+0x3a>
 80060b0:	683b      	ldr	r3, [r7, #0]
 80060b2:	2b00      	cmp	r3, #0
 80060b4:	d007      	beq.n	80060c6 <prvAddCurrentTaskToDelayedList+0x3a>
 80060b6:	4b1a      	ldr	r3, [pc, #104]	; (8006120 <prvAddCurrentTaskToDelayedList+0x94>)
 80060b8:	681b      	ldr	r3, [r3, #0]
 80060ba:	3304      	adds	r3, #4
 80060bc:	4619      	mov	r1, r3
 80060be:	4819      	ldr	r0, [pc, #100]	; (8006124 <prvAddCurrentTaskToDelayedList+0x98>)
 80060c0:	f7fe f90f 	bl	80042e2 <vListInsertEnd>
 80060c4:	e026      	b.n	8006114 <prvAddCurrentTaskToDelayedList+0x88>
 80060c6:	68fa      	ldr	r2, [r7, #12]
 80060c8:	687b      	ldr	r3, [r7, #4]
 80060ca:	4413      	add	r3, r2
 80060cc:	60bb      	str	r3, [r7, #8]
 80060ce:	4b14      	ldr	r3, [pc, #80]	; (8006120 <prvAddCurrentTaskToDelayedList+0x94>)
 80060d0:	681b      	ldr	r3, [r3, #0]
 80060d2:	68ba      	ldr	r2, [r7, #8]
 80060d4:	605a      	str	r2, [r3, #4]
 80060d6:	68ba      	ldr	r2, [r7, #8]
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	429a      	cmp	r2, r3
 80060dc:	d209      	bcs.n	80060f2 <prvAddCurrentTaskToDelayedList+0x66>
 80060de:	4b12      	ldr	r3, [pc, #72]	; (8006128 <prvAddCurrentTaskToDelayedList+0x9c>)
 80060e0:	681a      	ldr	r2, [r3, #0]
 80060e2:	4b0f      	ldr	r3, [pc, #60]	; (8006120 <prvAddCurrentTaskToDelayedList+0x94>)
 80060e4:	681b      	ldr	r3, [r3, #0]
 80060e6:	3304      	adds	r3, #4
 80060e8:	4619      	mov	r1, r3
 80060ea:	4610      	mov	r0, r2
 80060ec:	f7fe f91d 	bl	800432a <vListInsert>
 80060f0:	e010      	b.n	8006114 <prvAddCurrentTaskToDelayedList+0x88>
 80060f2:	4b0e      	ldr	r3, [pc, #56]	; (800612c <prvAddCurrentTaskToDelayedList+0xa0>)
 80060f4:	681a      	ldr	r2, [r3, #0]
 80060f6:	4b0a      	ldr	r3, [pc, #40]	; (8006120 <prvAddCurrentTaskToDelayedList+0x94>)
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	3304      	adds	r3, #4
 80060fc:	4619      	mov	r1, r3
 80060fe:	4610      	mov	r0, r2
 8006100:	f7fe f913 	bl	800432a <vListInsert>
 8006104:	4b0a      	ldr	r3, [pc, #40]	; (8006130 <prvAddCurrentTaskToDelayedList+0xa4>)
 8006106:	681b      	ldr	r3, [r3, #0]
 8006108:	68ba      	ldr	r2, [r7, #8]
 800610a:	429a      	cmp	r2, r3
 800610c:	d202      	bcs.n	8006114 <prvAddCurrentTaskToDelayedList+0x88>
 800610e:	4a08      	ldr	r2, [pc, #32]	; (8006130 <prvAddCurrentTaskToDelayedList+0xa4>)
 8006110:	68bb      	ldr	r3, [r7, #8]
 8006112:	6013      	str	r3, [r2, #0]
 8006114:	bf00      	nop
 8006116:	3710      	adds	r7, #16
 8006118:	46bd      	mov	sp, r7
 800611a:	bd80      	pop	{r7, pc}
 800611c:	20000f1c 	.word	0x20000f1c
 8006120:	20000a44 	.word	0x20000a44
 8006124:	20000f04 	.word	0x20000f04
 8006128:	20000ed4 	.word	0x20000ed4
 800612c:	20000ed0 	.word	0x20000ed0
 8006130:	20000f38 	.word	0x20000f38

08006134 <xTimerCreateTimerTask>:
 8006134:	b580      	push	{r7, lr}
 8006136:	b08a      	sub	sp, #40	; 0x28
 8006138:	af04      	add	r7, sp, #16
 800613a:	2300      	movs	r3, #0
 800613c:	617b      	str	r3, [r7, #20]
 800613e:	f000 fb63 	bl	8006808 <prvCheckForValidListAndQueue>
 8006142:	4b1c      	ldr	r3, [pc, #112]	; (80061b4 <xTimerCreateTimerTask+0x80>)
 8006144:	681b      	ldr	r3, [r3, #0]
 8006146:	2b00      	cmp	r3, #0
 8006148:	d021      	beq.n	800618e <xTimerCreateTimerTask+0x5a>
 800614a:	2300      	movs	r3, #0
 800614c:	60fb      	str	r3, [r7, #12]
 800614e:	2300      	movs	r3, #0
 8006150:	60bb      	str	r3, [r7, #8]
 8006152:	1d3a      	adds	r2, r7, #4
 8006154:	f107 0108 	add.w	r1, r7, #8
 8006158:	f107 030c 	add.w	r3, r7, #12
 800615c:	4618      	mov	r0, r3
 800615e:	f7fe f879 	bl	8004254 <vApplicationGetTimerTaskMemory>
 8006162:	6879      	ldr	r1, [r7, #4]
 8006164:	68bb      	ldr	r3, [r7, #8]
 8006166:	68fa      	ldr	r2, [r7, #12]
 8006168:	9202      	str	r2, [sp, #8]
 800616a:	9301      	str	r3, [sp, #4]
 800616c:	2302      	movs	r3, #2
 800616e:	9300      	str	r3, [sp, #0]
 8006170:	2300      	movs	r3, #0
 8006172:	460a      	mov	r2, r1
 8006174:	4910      	ldr	r1, [pc, #64]	; (80061b8 <xTimerCreateTimerTask+0x84>)
 8006176:	4811      	ldr	r0, [pc, #68]	; (80061bc <xTimerCreateTimerTask+0x88>)
 8006178:	f7fe ffb6 	bl	80050e8 <xTaskCreateStatic>
 800617c:	4603      	mov	r3, r0
 800617e:	4a10      	ldr	r2, [pc, #64]	; (80061c0 <xTimerCreateTimerTask+0x8c>)
 8006180:	6013      	str	r3, [r2, #0]
 8006182:	4b0f      	ldr	r3, [pc, #60]	; (80061c0 <xTimerCreateTimerTask+0x8c>)
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	2b00      	cmp	r3, #0
 8006188:	d001      	beq.n	800618e <xTimerCreateTimerTask+0x5a>
 800618a:	2301      	movs	r3, #1
 800618c:	617b      	str	r3, [r7, #20]
 800618e:	697b      	ldr	r3, [r7, #20]
 8006190:	2b00      	cmp	r3, #0
 8006192:	d10a      	bne.n	80061aa <xTimerCreateTimerTask+0x76>
 8006194:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006198:	f383 8811 	msr	BASEPRI, r3
 800619c:	f3bf 8f6f 	isb	sy
 80061a0:	f3bf 8f4f 	dsb	sy
 80061a4:	613b      	str	r3, [r7, #16]
 80061a6:	bf00      	nop
 80061a8:	e7fe      	b.n	80061a8 <xTimerCreateTimerTask+0x74>
 80061aa:	697b      	ldr	r3, [r7, #20]
 80061ac:	4618      	mov	r0, r3
 80061ae:	3718      	adds	r7, #24
 80061b0:	46bd      	mov	sp, r7
 80061b2:	bd80      	pop	{r7, pc}
 80061b4:	20000f74 	.word	0x20000f74
 80061b8:	08008268 	.word	0x08008268
 80061bc:	080063b1 	.word	0x080063b1
 80061c0:	20000f78 	.word	0x20000f78

080061c4 <xTimerCreate>:
 80061c4:	b580      	push	{r7, lr}
 80061c6:	b088      	sub	sp, #32
 80061c8:	af02      	add	r7, sp, #8
 80061ca:	60f8      	str	r0, [r7, #12]
 80061cc:	60b9      	str	r1, [r7, #8]
 80061ce:	607a      	str	r2, [r7, #4]
 80061d0:	603b      	str	r3, [r7, #0]
 80061d2:	202c      	movs	r0, #44	; 0x2c
 80061d4:	f000 fda8 	bl	8006d28 <pvPortMalloc>
 80061d8:	6178      	str	r0, [r7, #20]
 80061da:	697b      	ldr	r3, [r7, #20]
 80061dc:	2b00      	cmp	r3, #0
 80061de:	d00d      	beq.n	80061fc <xTimerCreate+0x38>
 80061e0:	697b      	ldr	r3, [r7, #20]
 80061e2:	2200      	movs	r2, #0
 80061e4:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80061e8:	697b      	ldr	r3, [r7, #20]
 80061ea:	9301      	str	r3, [sp, #4]
 80061ec:	6a3b      	ldr	r3, [r7, #32]
 80061ee:	9300      	str	r3, [sp, #0]
 80061f0:	683b      	ldr	r3, [r7, #0]
 80061f2:	687a      	ldr	r2, [r7, #4]
 80061f4:	68b9      	ldr	r1, [r7, #8]
 80061f6:	68f8      	ldr	r0, [r7, #12]
 80061f8:	f000 f805 	bl	8006206 <prvInitialiseNewTimer>
 80061fc:	697b      	ldr	r3, [r7, #20]
 80061fe:	4618      	mov	r0, r3
 8006200:	3718      	adds	r7, #24
 8006202:	46bd      	mov	sp, r7
 8006204:	bd80      	pop	{r7, pc}

08006206 <prvInitialiseNewTimer>:
 8006206:	b580      	push	{r7, lr}
 8006208:	b086      	sub	sp, #24
 800620a:	af00      	add	r7, sp, #0
 800620c:	60f8      	str	r0, [r7, #12]
 800620e:	60b9      	str	r1, [r7, #8]
 8006210:	607a      	str	r2, [r7, #4]
 8006212:	603b      	str	r3, [r7, #0]
 8006214:	68bb      	ldr	r3, [r7, #8]
 8006216:	2b00      	cmp	r3, #0
 8006218:	d10a      	bne.n	8006230 <prvInitialiseNewTimer+0x2a>
 800621a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800621e:	f383 8811 	msr	BASEPRI, r3
 8006222:	f3bf 8f6f 	isb	sy
 8006226:	f3bf 8f4f 	dsb	sy
 800622a:	617b      	str	r3, [r7, #20]
 800622c:	bf00      	nop
 800622e:	e7fe      	b.n	800622e <prvInitialiseNewTimer+0x28>
 8006230:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006232:	2b00      	cmp	r3, #0
 8006234:	d01e      	beq.n	8006274 <prvInitialiseNewTimer+0x6e>
 8006236:	f000 fae7 	bl	8006808 <prvCheckForValidListAndQueue>
 800623a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800623c:	68fa      	ldr	r2, [r7, #12]
 800623e:	601a      	str	r2, [r3, #0]
 8006240:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006242:	68ba      	ldr	r2, [r7, #8]
 8006244:	619a      	str	r2, [r3, #24]
 8006246:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006248:	683a      	ldr	r2, [r7, #0]
 800624a:	61da      	str	r2, [r3, #28]
 800624c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800624e:	6a3a      	ldr	r2, [r7, #32]
 8006250:	621a      	str	r2, [r3, #32]
 8006252:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006254:	3304      	adds	r3, #4
 8006256:	4618      	mov	r0, r3
 8006258:	f7fe f836 	bl	80042c8 <vListInitialiseItem>
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	2b00      	cmp	r3, #0
 8006260:	d008      	beq.n	8006274 <prvInitialiseNewTimer+0x6e>
 8006262:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006264:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006268:	f043 0304 	orr.w	r3, r3, #4
 800626c:	b2da      	uxtb	r2, r3
 800626e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006270:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006274:	bf00      	nop
 8006276:	3718      	adds	r7, #24
 8006278:	46bd      	mov	sp, r7
 800627a:	bd80      	pop	{r7, pc}

0800627c <xTimerGenericCommand>:
 800627c:	b580      	push	{r7, lr}
 800627e:	b08a      	sub	sp, #40	; 0x28
 8006280:	af00      	add	r7, sp, #0
 8006282:	60f8      	str	r0, [r7, #12]
 8006284:	60b9      	str	r1, [r7, #8]
 8006286:	607a      	str	r2, [r7, #4]
 8006288:	603b      	str	r3, [r7, #0]
 800628a:	2300      	movs	r3, #0
 800628c:	627b      	str	r3, [r7, #36]	; 0x24
 800628e:	68fb      	ldr	r3, [r7, #12]
 8006290:	2b00      	cmp	r3, #0
 8006292:	d10a      	bne.n	80062aa <xTimerGenericCommand+0x2e>
 8006294:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006298:	f383 8811 	msr	BASEPRI, r3
 800629c:	f3bf 8f6f 	isb	sy
 80062a0:	f3bf 8f4f 	dsb	sy
 80062a4:	623b      	str	r3, [r7, #32]
 80062a6:	bf00      	nop
 80062a8:	e7fe      	b.n	80062a8 <xTimerGenericCommand+0x2c>
 80062aa:	4b1a      	ldr	r3, [pc, #104]	; (8006314 <xTimerGenericCommand+0x98>)
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	2b00      	cmp	r3, #0
 80062b0:	d02a      	beq.n	8006308 <xTimerGenericCommand+0x8c>
 80062b2:	68bb      	ldr	r3, [r7, #8]
 80062b4:	613b      	str	r3, [r7, #16]
 80062b6:	687b      	ldr	r3, [r7, #4]
 80062b8:	617b      	str	r3, [r7, #20]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	61bb      	str	r3, [r7, #24]
 80062be:	68bb      	ldr	r3, [r7, #8]
 80062c0:	2b05      	cmp	r3, #5
 80062c2:	dc18      	bgt.n	80062f6 <xTimerGenericCommand+0x7a>
 80062c4:	f7ff fd58 	bl	8005d78 <xTaskGetSchedulerState>
 80062c8:	4603      	mov	r3, r0
 80062ca:	2b02      	cmp	r3, #2
 80062cc:	d109      	bne.n	80062e2 <xTimerGenericCommand+0x66>
 80062ce:	4b11      	ldr	r3, [pc, #68]	; (8006314 <xTimerGenericCommand+0x98>)
 80062d0:	6818      	ldr	r0, [r3, #0]
 80062d2:	f107 0110 	add.w	r1, r7, #16
 80062d6:	2300      	movs	r3, #0
 80062d8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80062da:	f7fe f9f9 	bl	80046d0 <xQueueGenericSend>
 80062de:	6278      	str	r0, [r7, #36]	; 0x24
 80062e0:	e012      	b.n	8006308 <xTimerGenericCommand+0x8c>
 80062e2:	4b0c      	ldr	r3, [pc, #48]	; (8006314 <xTimerGenericCommand+0x98>)
 80062e4:	6818      	ldr	r0, [r3, #0]
 80062e6:	f107 0110 	add.w	r1, r7, #16
 80062ea:	2300      	movs	r3, #0
 80062ec:	2200      	movs	r2, #0
 80062ee:	f7fe f9ef 	bl	80046d0 <xQueueGenericSend>
 80062f2:	6278      	str	r0, [r7, #36]	; 0x24
 80062f4:	e008      	b.n	8006308 <xTimerGenericCommand+0x8c>
 80062f6:	4b07      	ldr	r3, [pc, #28]	; (8006314 <xTimerGenericCommand+0x98>)
 80062f8:	6818      	ldr	r0, [r3, #0]
 80062fa:	f107 0110 	add.w	r1, r7, #16
 80062fe:	2300      	movs	r3, #0
 8006300:	683a      	ldr	r2, [r7, #0]
 8006302:	f7fe fae3 	bl	80048cc <xQueueGenericSendFromISR>
 8006306:	6278      	str	r0, [r7, #36]	; 0x24
 8006308:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800630a:	4618      	mov	r0, r3
 800630c:	3728      	adds	r7, #40	; 0x28
 800630e:	46bd      	mov	sp, r7
 8006310:	bd80      	pop	{r7, pc}
 8006312:	bf00      	nop
 8006314:	20000f74 	.word	0x20000f74

08006318 <prvProcessExpiredTimer>:
 8006318:	b580      	push	{r7, lr}
 800631a:	b088      	sub	sp, #32
 800631c:	af02      	add	r7, sp, #8
 800631e:	6078      	str	r0, [r7, #4]
 8006320:	6039      	str	r1, [r7, #0]
 8006322:	4b22      	ldr	r3, [pc, #136]	; (80063ac <prvProcessExpiredTimer+0x94>)
 8006324:	681b      	ldr	r3, [r3, #0]
 8006326:	68db      	ldr	r3, [r3, #12]
 8006328:	68db      	ldr	r3, [r3, #12]
 800632a:	617b      	str	r3, [r7, #20]
 800632c:	697b      	ldr	r3, [r7, #20]
 800632e:	3304      	adds	r3, #4
 8006330:	4618      	mov	r0, r3
 8006332:	f7fe f833 	bl	800439c <uxListRemove>
 8006336:	697b      	ldr	r3, [r7, #20]
 8006338:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800633c:	f003 0304 	and.w	r3, r3, #4
 8006340:	2b00      	cmp	r3, #0
 8006342:	d022      	beq.n	800638a <prvProcessExpiredTimer+0x72>
 8006344:	697b      	ldr	r3, [r7, #20]
 8006346:	699a      	ldr	r2, [r3, #24]
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	18d1      	adds	r1, r2, r3
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	683a      	ldr	r2, [r7, #0]
 8006350:	6978      	ldr	r0, [r7, #20]
 8006352:	f000 f8d1 	bl	80064f8 <prvInsertTimerInActiveList>
 8006356:	4603      	mov	r3, r0
 8006358:	2b00      	cmp	r3, #0
 800635a:	d01f      	beq.n	800639c <prvProcessExpiredTimer+0x84>
 800635c:	2300      	movs	r3, #0
 800635e:	9300      	str	r3, [sp, #0]
 8006360:	2300      	movs	r3, #0
 8006362:	687a      	ldr	r2, [r7, #4]
 8006364:	2100      	movs	r1, #0
 8006366:	6978      	ldr	r0, [r7, #20]
 8006368:	f7ff ff88 	bl	800627c <xTimerGenericCommand>
 800636c:	6138      	str	r0, [r7, #16]
 800636e:	693b      	ldr	r3, [r7, #16]
 8006370:	2b00      	cmp	r3, #0
 8006372:	d113      	bne.n	800639c <prvProcessExpiredTimer+0x84>
 8006374:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006378:	f383 8811 	msr	BASEPRI, r3
 800637c:	f3bf 8f6f 	isb	sy
 8006380:	f3bf 8f4f 	dsb	sy
 8006384:	60fb      	str	r3, [r7, #12]
 8006386:	bf00      	nop
 8006388:	e7fe      	b.n	8006388 <prvProcessExpiredTimer+0x70>
 800638a:	697b      	ldr	r3, [r7, #20]
 800638c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006390:	f023 0301 	bic.w	r3, r3, #1
 8006394:	b2da      	uxtb	r2, r3
 8006396:	697b      	ldr	r3, [r7, #20]
 8006398:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800639c:	697b      	ldr	r3, [r7, #20]
 800639e:	6a1b      	ldr	r3, [r3, #32]
 80063a0:	6978      	ldr	r0, [r7, #20]
 80063a2:	4798      	blx	r3
 80063a4:	bf00      	nop
 80063a6:	3718      	adds	r7, #24
 80063a8:	46bd      	mov	sp, r7
 80063aa:	bd80      	pop	{r7, pc}
 80063ac:	20000f6c 	.word	0x20000f6c

080063b0 <prvTimerTask>:
 80063b0:	b580      	push	{r7, lr}
 80063b2:	b084      	sub	sp, #16
 80063b4:	af00      	add	r7, sp, #0
 80063b6:	6078      	str	r0, [r7, #4]
 80063b8:	f107 0308 	add.w	r3, r7, #8
 80063bc:	4618      	mov	r0, r3
 80063be:	f000 f857 	bl	8006470 <prvGetNextExpireTime>
 80063c2:	60f8      	str	r0, [r7, #12]
 80063c4:	68bb      	ldr	r3, [r7, #8]
 80063c6:	4619      	mov	r1, r3
 80063c8:	68f8      	ldr	r0, [r7, #12]
 80063ca:	f000 f803 	bl	80063d4 <prvProcessTimerOrBlockTask>
 80063ce:	f000 f8d5 	bl	800657c <prvProcessReceivedCommands>
 80063d2:	e7f1      	b.n	80063b8 <prvTimerTask+0x8>

080063d4 <prvProcessTimerOrBlockTask>:
 80063d4:	b580      	push	{r7, lr}
 80063d6:	b084      	sub	sp, #16
 80063d8:	af00      	add	r7, sp, #0
 80063da:	6078      	str	r0, [r7, #4]
 80063dc:	6039      	str	r1, [r7, #0]
 80063de:	f7ff f8df 	bl	80055a0 <vTaskSuspendAll>
 80063e2:	f107 0308 	add.w	r3, r7, #8
 80063e6:	4618      	mov	r0, r3
 80063e8:	f000 f866 	bl	80064b8 <prvSampleTimeNow>
 80063ec:	60f8      	str	r0, [r7, #12]
 80063ee:	68bb      	ldr	r3, [r7, #8]
 80063f0:	2b00      	cmp	r3, #0
 80063f2:	d130      	bne.n	8006456 <prvProcessTimerOrBlockTask+0x82>
 80063f4:	683b      	ldr	r3, [r7, #0]
 80063f6:	2b00      	cmp	r3, #0
 80063f8:	d10a      	bne.n	8006410 <prvProcessTimerOrBlockTask+0x3c>
 80063fa:	687a      	ldr	r2, [r7, #4]
 80063fc:	68fb      	ldr	r3, [r7, #12]
 80063fe:	429a      	cmp	r2, r3
 8006400:	d806      	bhi.n	8006410 <prvProcessTimerOrBlockTask+0x3c>
 8006402:	f7ff f8db 	bl	80055bc <xTaskResumeAll>
 8006406:	68f9      	ldr	r1, [r7, #12]
 8006408:	6878      	ldr	r0, [r7, #4]
 800640a:	f7ff ff85 	bl	8006318 <prvProcessExpiredTimer>
 800640e:	e024      	b.n	800645a <prvProcessTimerOrBlockTask+0x86>
 8006410:	683b      	ldr	r3, [r7, #0]
 8006412:	2b00      	cmp	r3, #0
 8006414:	d008      	beq.n	8006428 <prvProcessTimerOrBlockTask+0x54>
 8006416:	4b13      	ldr	r3, [pc, #76]	; (8006464 <prvProcessTimerOrBlockTask+0x90>)
 8006418:	681b      	ldr	r3, [r3, #0]
 800641a:	681b      	ldr	r3, [r3, #0]
 800641c:	2b00      	cmp	r3, #0
 800641e:	d101      	bne.n	8006424 <prvProcessTimerOrBlockTask+0x50>
 8006420:	2301      	movs	r3, #1
 8006422:	e000      	b.n	8006426 <prvProcessTimerOrBlockTask+0x52>
 8006424:	2300      	movs	r3, #0
 8006426:	603b      	str	r3, [r7, #0]
 8006428:	4b0f      	ldr	r3, [pc, #60]	; (8006468 <prvProcessTimerOrBlockTask+0x94>)
 800642a:	6818      	ldr	r0, [r3, #0]
 800642c:	687a      	ldr	r2, [r7, #4]
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	1ad3      	subs	r3, r2, r3
 8006432:	683a      	ldr	r2, [r7, #0]
 8006434:	4619      	mov	r1, r3
 8006436:	f7fe fe23 	bl	8005080 <vQueueWaitForMessageRestricted>
 800643a:	f7ff f8bf 	bl	80055bc <xTaskResumeAll>
 800643e:	4603      	mov	r3, r0
 8006440:	2b00      	cmp	r3, #0
 8006442:	d10a      	bne.n	800645a <prvProcessTimerOrBlockTask+0x86>
 8006444:	4b09      	ldr	r3, [pc, #36]	; (800646c <prvProcessTimerOrBlockTask+0x98>)
 8006446:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800644a:	601a      	str	r2, [r3, #0]
 800644c:	f3bf 8f4f 	dsb	sy
 8006450:	f3bf 8f6f 	isb	sy
 8006454:	e001      	b.n	800645a <prvProcessTimerOrBlockTask+0x86>
 8006456:	f7ff f8b1 	bl	80055bc <xTaskResumeAll>
 800645a:	bf00      	nop
 800645c:	3710      	adds	r7, #16
 800645e:	46bd      	mov	sp, r7
 8006460:	bd80      	pop	{r7, pc}
 8006462:	bf00      	nop
 8006464:	20000f70 	.word	0x20000f70
 8006468:	20000f74 	.word	0x20000f74
 800646c:	e000ed04 	.word	0xe000ed04

08006470 <prvGetNextExpireTime>:
 8006470:	b480      	push	{r7}
 8006472:	b085      	sub	sp, #20
 8006474:	af00      	add	r7, sp, #0
 8006476:	6078      	str	r0, [r7, #4]
 8006478:	4b0e      	ldr	r3, [pc, #56]	; (80064b4 <prvGetNextExpireTime+0x44>)
 800647a:	681b      	ldr	r3, [r3, #0]
 800647c:	681b      	ldr	r3, [r3, #0]
 800647e:	2b00      	cmp	r3, #0
 8006480:	d101      	bne.n	8006486 <prvGetNextExpireTime+0x16>
 8006482:	2201      	movs	r2, #1
 8006484:	e000      	b.n	8006488 <prvGetNextExpireTime+0x18>
 8006486:	2200      	movs	r2, #0
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	601a      	str	r2, [r3, #0]
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	681b      	ldr	r3, [r3, #0]
 8006490:	2b00      	cmp	r3, #0
 8006492:	d105      	bne.n	80064a0 <prvGetNextExpireTime+0x30>
 8006494:	4b07      	ldr	r3, [pc, #28]	; (80064b4 <prvGetNextExpireTime+0x44>)
 8006496:	681b      	ldr	r3, [r3, #0]
 8006498:	68db      	ldr	r3, [r3, #12]
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	60fb      	str	r3, [r7, #12]
 800649e:	e001      	b.n	80064a4 <prvGetNextExpireTime+0x34>
 80064a0:	2300      	movs	r3, #0
 80064a2:	60fb      	str	r3, [r7, #12]
 80064a4:	68fb      	ldr	r3, [r7, #12]
 80064a6:	4618      	mov	r0, r3
 80064a8:	3714      	adds	r7, #20
 80064aa:	46bd      	mov	sp, r7
 80064ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064b0:	4770      	bx	lr
 80064b2:	bf00      	nop
 80064b4:	20000f6c 	.word	0x20000f6c

080064b8 <prvSampleTimeNow>:
 80064b8:	b580      	push	{r7, lr}
 80064ba:	b084      	sub	sp, #16
 80064bc:	af00      	add	r7, sp, #0
 80064be:	6078      	str	r0, [r7, #4]
 80064c0:	f7ff f91a 	bl	80056f8 <xTaskGetTickCount>
 80064c4:	60f8      	str	r0, [r7, #12]
 80064c6:	4b0b      	ldr	r3, [pc, #44]	; (80064f4 <prvSampleTimeNow+0x3c>)
 80064c8:	681b      	ldr	r3, [r3, #0]
 80064ca:	68fa      	ldr	r2, [r7, #12]
 80064cc:	429a      	cmp	r2, r3
 80064ce:	d205      	bcs.n	80064dc <prvSampleTimeNow+0x24>
 80064d0:	f000 f936 	bl	8006740 <prvSwitchTimerLists>
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	2201      	movs	r2, #1
 80064d8:	601a      	str	r2, [r3, #0]
 80064da:	e002      	b.n	80064e2 <prvSampleTimeNow+0x2a>
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	2200      	movs	r2, #0
 80064e0:	601a      	str	r2, [r3, #0]
 80064e2:	4a04      	ldr	r2, [pc, #16]	; (80064f4 <prvSampleTimeNow+0x3c>)
 80064e4:	68fb      	ldr	r3, [r7, #12]
 80064e6:	6013      	str	r3, [r2, #0]
 80064e8:	68fb      	ldr	r3, [r7, #12]
 80064ea:	4618      	mov	r0, r3
 80064ec:	3710      	adds	r7, #16
 80064ee:	46bd      	mov	sp, r7
 80064f0:	bd80      	pop	{r7, pc}
 80064f2:	bf00      	nop
 80064f4:	20000f7c 	.word	0x20000f7c

080064f8 <prvInsertTimerInActiveList>:
 80064f8:	b580      	push	{r7, lr}
 80064fa:	b086      	sub	sp, #24
 80064fc:	af00      	add	r7, sp, #0
 80064fe:	60f8      	str	r0, [r7, #12]
 8006500:	60b9      	str	r1, [r7, #8]
 8006502:	607a      	str	r2, [r7, #4]
 8006504:	603b      	str	r3, [r7, #0]
 8006506:	2300      	movs	r3, #0
 8006508:	617b      	str	r3, [r7, #20]
 800650a:	68fb      	ldr	r3, [r7, #12]
 800650c:	68ba      	ldr	r2, [r7, #8]
 800650e:	605a      	str	r2, [r3, #4]
 8006510:	68fb      	ldr	r3, [r7, #12]
 8006512:	68fa      	ldr	r2, [r7, #12]
 8006514:	611a      	str	r2, [r3, #16]
 8006516:	68ba      	ldr	r2, [r7, #8]
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	429a      	cmp	r2, r3
 800651c:	d812      	bhi.n	8006544 <prvInsertTimerInActiveList+0x4c>
 800651e:	687a      	ldr	r2, [r7, #4]
 8006520:	683b      	ldr	r3, [r7, #0]
 8006522:	1ad2      	subs	r2, r2, r3
 8006524:	68fb      	ldr	r3, [r7, #12]
 8006526:	699b      	ldr	r3, [r3, #24]
 8006528:	429a      	cmp	r2, r3
 800652a:	d302      	bcc.n	8006532 <prvInsertTimerInActiveList+0x3a>
 800652c:	2301      	movs	r3, #1
 800652e:	617b      	str	r3, [r7, #20]
 8006530:	e01b      	b.n	800656a <prvInsertTimerInActiveList+0x72>
 8006532:	4b10      	ldr	r3, [pc, #64]	; (8006574 <prvInsertTimerInActiveList+0x7c>)
 8006534:	681a      	ldr	r2, [r3, #0]
 8006536:	68fb      	ldr	r3, [r7, #12]
 8006538:	3304      	adds	r3, #4
 800653a:	4619      	mov	r1, r3
 800653c:	4610      	mov	r0, r2
 800653e:	f7fd fef4 	bl	800432a <vListInsert>
 8006542:	e012      	b.n	800656a <prvInsertTimerInActiveList+0x72>
 8006544:	687a      	ldr	r2, [r7, #4]
 8006546:	683b      	ldr	r3, [r7, #0]
 8006548:	429a      	cmp	r2, r3
 800654a:	d206      	bcs.n	800655a <prvInsertTimerInActiveList+0x62>
 800654c:	68ba      	ldr	r2, [r7, #8]
 800654e:	683b      	ldr	r3, [r7, #0]
 8006550:	429a      	cmp	r2, r3
 8006552:	d302      	bcc.n	800655a <prvInsertTimerInActiveList+0x62>
 8006554:	2301      	movs	r3, #1
 8006556:	617b      	str	r3, [r7, #20]
 8006558:	e007      	b.n	800656a <prvInsertTimerInActiveList+0x72>
 800655a:	4b07      	ldr	r3, [pc, #28]	; (8006578 <prvInsertTimerInActiveList+0x80>)
 800655c:	681a      	ldr	r2, [r3, #0]
 800655e:	68fb      	ldr	r3, [r7, #12]
 8006560:	3304      	adds	r3, #4
 8006562:	4619      	mov	r1, r3
 8006564:	4610      	mov	r0, r2
 8006566:	f7fd fee0 	bl	800432a <vListInsert>
 800656a:	697b      	ldr	r3, [r7, #20]
 800656c:	4618      	mov	r0, r3
 800656e:	3718      	adds	r7, #24
 8006570:	46bd      	mov	sp, r7
 8006572:	bd80      	pop	{r7, pc}
 8006574:	20000f70 	.word	0x20000f70
 8006578:	20000f6c 	.word	0x20000f6c

0800657c <prvProcessReceivedCommands>:
 800657c:	b580      	push	{r7, lr}
 800657e:	b08e      	sub	sp, #56	; 0x38
 8006580:	af02      	add	r7, sp, #8
 8006582:	e0ca      	b.n	800671a <prvProcessReceivedCommands+0x19e>
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	2b00      	cmp	r3, #0
 8006588:	da18      	bge.n	80065bc <prvProcessReceivedCommands+0x40>
 800658a:	1d3b      	adds	r3, r7, #4
 800658c:	3304      	adds	r3, #4
 800658e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006590:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006592:	2b00      	cmp	r3, #0
 8006594:	d10a      	bne.n	80065ac <prvProcessReceivedCommands+0x30>
 8006596:	f04f 0350 	mov.w	r3, #80	; 0x50
 800659a:	f383 8811 	msr	BASEPRI, r3
 800659e:	f3bf 8f6f 	isb	sy
 80065a2:	f3bf 8f4f 	dsb	sy
 80065a6:	61fb      	str	r3, [r7, #28]
 80065a8:	bf00      	nop
 80065aa:	e7fe      	b.n	80065aa <prvProcessReceivedCommands+0x2e>
 80065ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80065ae:	681b      	ldr	r3, [r3, #0]
 80065b0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80065b2:	6850      	ldr	r0, [r2, #4]
 80065b4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80065b6:	6892      	ldr	r2, [r2, #8]
 80065b8:	4611      	mov	r1, r2
 80065ba:	4798      	blx	r3
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	2b00      	cmp	r3, #0
 80065c0:	f2c0 80aa 	blt.w	8006718 <prvProcessReceivedCommands+0x19c>
 80065c4:	68fb      	ldr	r3, [r7, #12]
 80065c6:	62bb      	str	r3, [r7, #40]	; 0x28
 80065c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80065ca:	695b      	ldr	r3, [r3, #20]
 80065cc:	2b00      	cmp	r3, #0
 80065ce:	d004      	beq.n	80065da <prvProcessReceivedCommands+0x5e>
 80065d0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80065d2:	3304      	adds	r3, #4
 80065d4:	4618      	mov	r0, r3
 80065d6:	f7fd fee1 	bl	800439c <uxListRemove>
 80065da:	463b      	mov	r3, r7
 80065dc:	4618      	mov	r0, r3
 80065de:	f7ff ff6b 	bl	80064b8 <prvSampleTimeNow>
 80065e2:	6278      	str	r0, [r7, #36]	; 0x24
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	2b09      	cmp	r3, #9
 80065e8:	f200 8097 	bhi.w	800671a <prvProcessReceivedCommands+0x19e>
 80065ec:	a201      	add	r2, pc, #4	; (adr r2, 80065f4 <prvProcessReceivedCommands+0x78>)
 80065ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80065f2:	bf00      	nop
 80065f4:	0800661d 	.word	0x0800661d
 80065f8:	0800661d 	.word	0x0800661d
 80065fc:	0800661d 	.word	0x0800661d
 8006600:	08006691 	.word	0x08006691
 8006604:	080066a5 	.word	0x080066a5
 8006608:	080066ef 	.word	0x080066ef
 800660c:	0800661d 	.word	0x0800661d
 8006610:	0800661d 	.word	0x0800661d
 8006614:	08006691 	.word	0x08006691
 8006618:	080066a5 	.word	0x080066a5
 800661c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800661e:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006622:	f043 0301 	orr.w	r3, r3, #1
 8006626:	b2da      	uxtb	r2, r3
 8006628:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800662a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800662e:	68ba      	ldr	r2, [r7, #8]
 8006630:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006632:	699b      	ldr	r3, [r3, #24]
 8006634:	18d1      	adds	r1, r2, r3
 8006636:	68bb      	ldr	r3, [r7, #8]
 8006638:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800663a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800663c:	f7ff ff5c 	bl	80064f8 <prvInsertTimerInActiveList>
 8006640:	4603      	mov	r3, r0
 8006642:	2b00      	cmp	r3, #0
 8006644:	d069      	beq.n	800671a <prvProcessReceivedCommands+0x19e>
 8006646:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006648:	6a1b      	ldr	r3, [r3, #32]
 800664a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800664c:	4798      	blx	r3
 800664e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006650:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006654:	f003 0304 	and.w	r3, r3, #4
 8006658:	2b00      	cmp	r3, #0
 800665a:	d05e      	beq.n	800671a <prvProcessReceivedCommands+0x19e>
 800665c:	68ba      	ldr	r2, [r7, #8]
 800665e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006660:	699b      	ldr	r3, [r3, #24]
 8006662:	441a      	add	r2, r3
 8006664:	2300      	movs	r3, #0
 8006666:	9300      	str	r3, [sp, #0]
 8006668:	2300      	movs	r3, #0
 800666a:	2100      	movs	r1, #0
 800666c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800666e:	f7ff fe05 	bl	800627c <xTimerGenericCommand>
 8006672:	6238      	str	r0, [r7, #32]
 8006674:	6a3b      	ldr	r3, [r7, #32]
 8006676:	2b00      	cmp	r3, #0
 8006678:	d14f      	bne.n	800671a <prvProcessReceivedCommands+0x19e>
 800667a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800667e:	f383 8811 	msr	BASEPRI, r3
 8006682:	f3bf 8f6f 	isb	sy
 8006686:	f3bf 8f4f 	dsb	sy
 800668a:	61bb      	str	r3, [r7, #24]
 800668c:	bf00      	nop
 800668e:	e7fe      	b.n	800668e <prvProcessReceivedCommands+0x112>
 8006690:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006692:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006696:	f023 0301 	bic.w	r3, r3, #1
 800669a:	b2da      	uxtb	r2, r3
 800669c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800669e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80066a2:	e03a      	b.n	800671a <prvProcessReceivedCommands+0x19e>
 80066a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80066a6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80066aa:	f043 0301 	orr.w	r3, r3, #1
 80066ae:	b2da      	uxtb	r2, r3
 80066b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80066b2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80066b6:	68ba      	ldr	r2, [r7, #8]
 80066b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80066ba:	619a      	str	r2, [r3, #24]
 80066bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80066be:	699b      	ldr	r3, [r3, #24]
 80066c0:	2b00      	cmp	r3, #0
 80066c2:	d10a      	bne.n	80066da <prvProcessReceivedCommands+0x15e>
 80066c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80066c8:	f383 8811 	msr	BASEPRI, r3
 80066cc:	f3bf 8f6f 	isb	sy
 80066d0:	f3bf 8f4f 	dsb	sy
 80066d4:	617b      	str	r3, [r7, #20]
 80066d6:	bf00      	nop
 80066d8:	e7fe      	b.n	80066d8 <prvProcessReceivedCommands+0x15c>
 80066da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80066dc:	699a      	ldr	r2, [r3, #24]
 80066de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066e0:	18d1      	adds	r1, r2, r3
 80066e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066e4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80066e6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80066e8:	f7ff ff06 	bl	80064f8 <prvInsertTimerInActiveList>
 80066ec:	e015      	b.n	800671a <prvProcessReceivedCommands+0x19e>
 80066ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80066f0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80066f4:	f003 0302 	and.w	r3, r3, #2
 80066f8:	2b00      	cmp	r3, #0
 80066fa:	d103      	bne.n	8006704 <prvProcessReceivedCommands+0x188>
 80066fc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80066fe:	f000 fb59 	bl	8006db4 <vPortFree>
 8006702:	e00a      	b.n	800671a <prvProcessReceivedCommands+0x19e>
 8006704:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006706:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800670a:	f023 0301 	bic.w	r3, r3, #1
 800670e:	b2da      	uxtb	r2, r3
 8006710:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006712:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006716:	e000      	b.n	800671a <prvProcessReceivedCommands+0x19e>
 8006718:	bf00      	nop
 800671a:	4b08      	ldr	r3, [pc, #32]	; (800673c <prvProcessReceivedCommands+0x1c0>)
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	1d39      	adds	r1, r7, #4
 8006720:	2200      	movs	r2, #0
 8006722:	4618      	mov	r0, r3
 8006724:	f7fe f96e 	bl	8004a04 <xQueueReceive>
 8006728:	4603      	mov	r3, r0
 800672a:	2b00      	cmp	r3, #0
 800672c:	f47f af2a 	bne.w	8006584 <prvProcessReceivedCommands+0x8>
 8006730:	bf00      	nop
 8006732:	bf00      	nop
 8006734:	3730      	adds	r7, #48	; 0x30
 8006736:	46bd      	mov	sp, r7
 8006738:	bd80      	pop	{r7, pc}
 800673a:	bf00      	nop
 800673c:	20000f74 	.word	0x20000f74

08006740 <prvSwitchTimerLists>:
 8006740:	b580      	push	{r7, lr}
 8006742:	b088      	sub	sp, #32
 8006744:	af02      	add	r7, sp, #8
 8006746:	e048      	b.n	80067da <prvSwitchTimerLists+0x9a>
 8006748:	4b2d      	ldr	r3, [pc, #180]	; (8006800 <prvSwitchTimerLists+0xc0>)
 800674a:	681b      	ldr	r3, [r3, #0]
 800674c:	68db      	ldr	r3, [r3, #12]
 800674e:	681b      	ldr	r3, [r3, #0]
 8006750:	613b      	str	r3, [r7, #16]
 8006752:	4b2b      	ldr	r3, [pc, #172]	; (8006800 <prvSwitchTimerLists+0xc0>)
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	68db      	ldr	r3, [r3, #12]
 8006758:	68db      	ldr	r3, [r3, #12]
 800675a:	60fb      	str	r3, [r7, #12]
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	3304      	adds	r3, #4
 8006760:	4618      	mov	r0, r3
 8006762:	f7fd fe1b 	bl	800439c <uxListRemove>
 8006766:	68fb      	ldr	r3, [r7, #12]
 8006768:	6a1b      	ldr	r3, [r3, #32]
 800676a:	68f8      	ldr	r0, [r7, #12]
 800676c:	4798      	blx	r3
 800676e:	68fb      	ldr	r3, [r7, #12]
 8006770:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006774:	f003 0304 	and.w	r3, r3, #4
 8006778:	2b00      	cmp	r3, #0
 800677a:	d02e      	beq.n	80067da <prvSwitchTimerLists+0x9a>
 800677c:	68fb      	ldr	r3, [r7, #12]
 800677e:	699b      	ldr	r3, [r3, #24]
 8006780:	693a      	ldr	r2, [r7, #16]
 8006782:	4413      	add	r3, r2
 8006784:	60bb      	str	r3, [r7, #8]
 8006786:	68ba      	ldr	r2, [r7, #8]
 8006788:	693b      	ldr	r3, [r7, #16]
 800678a:	429a      	cmp	r2, r3
 800678c:	d90e      	bls.n	80067ac <prvSwitchTimerLists+0x6c>
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	68ba      	ldr	r2, [r7, #8]
 8006792:	605a      	str	r2, [r3, #4]
 8006794:	68fb      	ldr	r3, [r7, #12]
 8006796:	68fa      	ldr	r2, [r7, #12]
 8006798:	611a      	str	r2, [r3, #16]
 800679a:	4b19      	ldr	r3, [pc, #100]	; (8006800 <prvSwitchTimerLists+0xc0>)
 800679c:	681a      	ldr	r2, [r3, #0]
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	3304      	adds	r3, #4
 80067a2:	4619      	mov	r1, r3
 80067a4:	4610      	mov	r0, r2
 80067a6:	f7fd fdc0 	bl	800432a <vListInsert>
 80067aa:	e016      	b.n	80067da <prvSwitchTimerLists+0x9a>
 80067ac:	2300      	movs	r3, #0
 80067ae:	9300      	str	r3, [sp, #0]
 80067b0:	2300      	movs	r3, #0
 80067b2:	693a      	ldr	r2, [r7, #16]
 80067b4:	2100      	movs	r1, #0
 80067b6:	68f8      	ldr	r0, [r7, #12]
 80067b8:	f7ff fd60 	bl	800627c <xTimerGenericCommand>
 80067bc:	6078      	str	r0, [r7, #4]
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	2b00      	cmp	r3, #0
 80067c2:	d10a      	bne.n	80067da <prvSwitchTimerLists+0x9a>
 80067c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80067c8:	f383 8811 	msr	BASEPRI, r3
 80067cc:	f3bf 8f6f 	isb	sy
 80067d0:	f3bf 8f4f 	dsb	sy
 80067d4:	603b      	str	r3, [r7, #0]
 80067d6:	bf00      	nop
 80067d8:	e7fe      	b.n	80067d8 <prvSwitchTimerLists+0x98>
 80067da:	4b09      	ldr	r3, [pc, #36]	; (8006800 <prvSwitchTimerLists+0xc0>)
 80067dc:	681b      	ldr	r3, [r3, #0]
 80067de:	681b      	ldr	r3, [r3, #0]
 80067e0:	2b00      	cmp	r3, #0
 80067e2:	d1b1      	bne.n	8006748 <prvSwitchTimerLists+0x8>
 80067e4:	4b06      	ldr	r3, [pc, #24]	; (8006800 <prvSwitchTimerLists+0xc0>)
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	617b      	str	r3, [r7, #20]
 80067ea:	4b06      	ldr	r3, [pc, #24]	; (8006804 <prvSwitchTimerLists+0xc4>)
 80067ec:	681b      	ldr	r3, [r3, #0]
 80067ee:	4a04      	ldr	r2, [pc, #16]	; (8006800 <prvSwitchTimerLists+0xc0>)
 80067f0:	6013      	str	r3, [r2, #0]
 80067f2:	4a04      	ldr	r2, [pc, #16]	; (8006804 <prvSwitchTimerLists+0xc4>)
 80067f4:	697b      	ldr	r3, [r7, #20]
 80067f6:	6013      	str	r3, [r2, #0]
 80067f8:	bf00      	nop
 80067fa:	3718      	adds	r7, #24
 80067fc:	46bd      	mov	sp, r7
 80067fe:	bd80      	pop	{r7, pc}
 8006800:	20000f6c 	.word	0x20000f6c
 8006804:	20000f70 	.word	0x20000f70

08006808 <prvCheckForValidListAndQueue>:
 8006808:	b580      	push	{r7, lr}
 800680a:	b082      	sub	sp, #8
 800680c:	af02      	add	r7, sp, #8
 800680e:	f000 f969 	bl	8006ae4 <vPortEnterCritical>
 8006812:	4b15      	ldr	r3, [pc, #84]	; (8006868 <prvCheckForValidListAndQueue+0x60>)
 8006814:	681b      	ldr	r3, [r3, #0]
 8006816:	2b00      	cmp	r3, #0
 8006818:	d120      	bne.n	800685c <prvCheckForValidListAndQueue+0x54>
 800681a:	4814      	ldr	r0, [pc, #80]	; (800686c <prvCheckForValidListAndQueue+0x64>)
 800681c:	f7fd fd34 	bl	8004288 <vListInitialise>
 8006820:	4813      	ldr	r0, [pc, #76]	; (8006870 <prvCheckForValidListAndQueue+0x68>)
 8006822:	f7fd fd31 	bl	8004288 <vListInitialise>
 8006826:	4b13      	ldr	r3, [pc, #76]	; (8006874 <prvCheckForValidListAndQueue+0x6c>)
 8006828:	4a10      	ldr	r2, [pc, #64]	; (800686c <prvCheckForValidListAndQueue+0x64>)
 800682a:	601a      	str	r2, [r3, #0]
 800682c:	4b12      	ldr	r3, [pc, #72]	; (8006878 <prvCheckForValidListAndQueue+0x70>)
 800682e:	4a10      	ldr	r2, [pc, #64]	; (8006870 <prvCheckForValidListAndQueue+0x68>)
 8006830:	601a      	str	r2, [r3, #0]
 8006832:	2300      	movs	r3, #0
 8006834:	9300      	str	r3, [sp, #0]
 8006836:	4b11      	ldr	r3, [pc, #68]	; (800687c <prvCheckForValidListAndQueue+0x74>)
 8006838:	4a11      	ldr	r2, [pc, #68]	; (8006880 <prvCheckForValidListAndQueue+0x78>)
 800683a:	2110      	movs	r1, #16
 800683c:	200a      	movs	r0, #10
 800683e:	f7fd fe3f 	bl	80044c0 <xQueueGenericCreateStatic>
 8006842:	4603      	mov	r3, r0
 8006844:	4a08      	ldr	r2, [pc, #32]	; (8006868 <prvCheckForValidListAndQueue+0x60>)
 8006846:	6013      	str	r3, [r2, #0]
 8006848:	4b07      	ldr	r3, [pc, #28]	; (8006868 <prvCheckForValidListAndQueue+0x60>)
 800684a:	681b      	ldr	r3, [r3, #0]
 800684c:	2b00      	cmp	r3, #0
 800684e:	d005      	beq.n	800685c <prvCheckForValidListAndQueue+0x54>
 8006850:	4b05      	ldr	r3, [pc, #20]	; (8006868 <prvCheckForValidListAndQueue+0x60>)
 8006852:	681b      	ldr	r3, [r3, #0]
 8006854:	490b      	ldr	r1, [pc, #44]	; (8006884 <prvCheckForValidListAndQueue+0x7c>)
 8006856:	4618      	mov	r0, r3
 8006858:	f7fe fbe8 	bl	800502c <vQueueAddToRegistry>
 800685c:	f000 f972 	bl	8006b44 <vPortExitCritical>
 8006860:	bf00      	nop
 8006862:	46bd      	mov	sp, r7
 8006864:	bd80      	pop	{r7, pc}
 8006866:	bf00      	nop
 8006868:	20000f74 	.word	0x20000f74
 800686c:	20000f44 	.word	0x20000f44
 8006870:	20000f58 	.word	0x20000f58
 8006874:	20000f6c 	.word	0x20000f6c
 8006878:	20000f70 	.word	0x20000f70
 800687c:	20001020 	.word	0x20001020
 8006880:	20000f80 	.word	0x20000f80
 8006884:	08008270 	.word	0x08008270

08006888 <pxPortInitialiseStack>:
 8006888:	b480      	push	{r7}
 800688a:	b085      	sub	sp, #20
 800688c:	af00      	add	r7, sp, #0
 800688e:	60f8      	str	r0, [r7, #12]
 8006890:	60b9      	str	r1, [r7, #8]
 8006892:	607a      	str	r2, [r7, #4]
 8006894:	68fb      	ldr	r3, [r7, #12]
 8006896:	3b04      	subs	r3, #4
 8006898:	60fb      	str	r3, [r7, #12]
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80068a0:	601a      	str	r2, [r3, #0]
 80068a2:	68fb      	ldr	r3, [r7, #12]
 80068a4:	3b04      	subs	r3, #4
 80068a6:	60fb      	str	r3, [r7, #12]
 80068a8:	68bb      	ldr	r3, [r7, #8]
 80068aa:	f023 0201 	bic.w	r2, r3, #1
 80068ae:	68fb      	ldr	r3, [r7, #12]
 80068b0:	601a      	str	r2, [r3, #0]
 80068b2:	68fb      	ldr	r3, [r7, #12]
 80068b4:	3b04      	subs	r3, #4
 80068b6:	60fb      	str	r3, [r7, #12]
 80068b8:	4a0c      	ldr	r2, [pc, #48]	; (80068ec <pxPortInitialiseStack+0x64>)
 80068ba:	68fb      	ldr	r3, [r7, #12]
 80068bc:	601a      	str	r2, [r3, #0]
 80068be:	68fb      	ldr	r3, [r7, #12]
 80068c0:	3b14      	subs	r3, #20
 80068c2:	60fb      	str	r3, [r7, #12]
 80068c4:	687a      	ldr	r2, [r7, #4]
 80068c6:	68fb      	ldr	r3, [r7, #12]
 80068c8:	601a      	str	r2, [r3, #0]
 80068ca:	68fb      	ldr	r3, [r7, #12]
 80068cc:	3b04      	subs	r3, #4
 80068ce:	60fb      	str	r3, [r7, #12]
 80068d0:	68fb      	ldr	r3, [r7, #12]
 80068d2:	f06f 0202 	mvn.w	r2, #2
 80068d6:	601a      	str	r2, [r3, #0]
 80068d8:	68fb      	ldr	r3, [r7, #12]
 80068da:	3b20      	subs	r3, #32
 80068dc:	60fb      	str	r3, [r7, #12]
 80068de:	68fb      	ldr	r3, [r7, #12]
 80068e0:	4618      	mov	r0, r3
 80068e2:	3714      	adds	r7, #20
 80068e4:	46bd      	mov	sp, r7
 80068e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068ea:	4770      	bx	lr
 80068ec:	080068f1 	.word	0x080068f1

080068f0 <prvTaskExitError>:
 80068f0:	b480      	push	{r7}
 80068f2:	b085      	sub	sp, #20
 80068f4:	af00      	add	r7, sp, #0
 80068f6:	2300      	movs	r3, #0
 80068f8:	607b      	str	r3, [r7, #4]
 80068fa:	4b12      	ldr	r3, [pc, #72]	; (8006944 <prvTaskExitError+0x54>)
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006902:	d00a      	beq.n	800691a <prvTaskExitError+0x2a>
 8006904:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006908:	f383 8811 	msr	BASEPRI, r3
 800690c:	f3bf 8f6f 	isb	sy
 8006910:	f3bf 8f4f 	dsb	sy
 8006914:	60fb      	str	r3, [r7, #12]
 8006916:	bf00      	nop
 8006918:	e7fe      	b.n	8006918 <prvTaskExitError+0x28>
 800691a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800691e:	f383 8811 	msr	BASEPRI, r3
 8006922:	f3bf 8f6f 	isb	sy
 8006926:	f3bf 8f4f 	dsb	sy
 800692a:	60bb      	str	r3, [r7, #8]
 800692c:	bf00      	nop
 800692e:	bf00      	nop
 8006930:	687b      	ldr	r3, [r7, #4]
 8006932:	2b00      	cmp	r3, #0
 8006934:	d0fc      	beq.n	8006930 <prvTaskExitError+0x40>
 8006936:	bf00      	nop
 8006938:	bf00      	nop
 800693a:	3714      	adds	r7, #20
 800693c:	46bd      	mov	sp, r7
 800693e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006942:	4770      	bx	lr
 8006944:	20000020 	.word	0x20000020
	...

08006950 <SVC_Handler>:
 8006950:	4b07      	ldr	r3, [pc, #28]	; (8006970 <pxCurrentTCBConst2>)
 8006952:	6819      	ldr	r1, [r3, #0]
 8006954:	6808      	ldr	r0, [r1, #0]
 8006956:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800695a:	f380 8809 	msr	PSP, r0
 800695e:	f3bf 8f6f 	isb	sy
 8006962:	f04f 0000 	mov.w	r0, #0
 8006966:	f380 8811 	msr	BASEPRI, r0
 800696a:	4770      	bx	lr
 800696c:	f3af 8000 	nop.w

08006970 <pxCurrentTCBConst2>:
 8006970:	20000a44 	.word	0x20000a44
 8006974:	bf00      	nop
 8006976:	bf00      	nop

08006978 <prvPortStartFirstTask>:
 8006978:	4808      	ldr	r0, [pc, #32]	; (800699c <prvPortStartFirstTask+0x24>)
 800697a:	6800      	ldr	r0, [r0, #0]
 800697c:	6800      	ldr	r0, [r0, #0]
 800697e:	f380 8808 	msr	MSP, r0
 8006982:	f04f 0000 	mov.w	r0, #0
 8006986:	f380 8814 	msr	CONTROL, r0
 800698a:	b662      	cpsie	i
 800698c:	b661      	cpsie	f
 800698e:	f3bf 8f4f 	dsb	sy
 8006992:	f3bf 8f6f 	isb	sy
 8006996:	df00      	svc	0
 8006998:	bf00      	nop
 800699a:	bf00      	nop
 800699c:	e000ed08 	.word	0xe000ed08

080069a0 <xPortStartScheduler>:
 80069a0:	b580      	push	{r7, lr}
 80069a2:	b086      	sub	sp, #24
 80069a4:	af00      	add	r7, sp, #0
 80069a6:	4b46      	ldr	r3, [pc, #280]	; (8006ac0 <xPortStartScheduler+0x120>)
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	4a46      	ldr	r2, [pc, #280]	; (8006ac4 <xPortStartScheduler+0x124>)
 80069ac:	4293      	cmp	r3, r2
 80069ae:	d10a      	bne.n	80069c6 <xPortStartScheduler+0x26>
 80069b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80069b4:	f383 8811 	msr	BASEPRI, r3
 80069b8:	f3bf 8f6f 	isb	sy
 80069bc:	f3bf 8f4f 	dsb	sy
 80069c0:	613b      	str	r3, [r7, #16]
 80069c2:	bf00      	nop
 80069c4:	e7fe      	b.n	80069c4 <xPortStartScheduler+0x24>
 80069c6:	4b3e      	ldr	r3, [pc, #248]	; (8006ac0 <xPortStartScheduler+0x120>)
 80069c8:	681b      	ldr	r3, [r3, #0]
 80069ca:	4a3f      	ldr	r2, [pc, #252]	; (8006ac8 <xPortStartScheduler+0x128>)
 80069cc:	4293      	cmp	r3, r2
 80069ce:	d10a      	bne.n	80069e6 <xPortStartScheduler+0x46>
 80069d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80069d4:	f383 8811 	msr	BASEPRI, r3
 80069d8:	f3bf 8f6f 	isb	sy
 80069dc:	f3bf 8f4f 	dsb	sy
 80069e0:	60fb      	str	r3, [r7, #12]
 80069e2:	bf00      	nop
 80069e4:	e7fe      	b.n	80069e4 <xPortStartScheduler+0x44>
 80069e6:	4b39      	ldr	r3, [pc, #228]	; (8006acc <xPortStartScheduler+0x12c>)
 80069e8:	617b      	str	r3, [r7, #20]
 80069ea:	697b      	ldr	r3, [r7, #20]
 80069ec:	781b      	ldrb	r3, [r3, #0]
 80069ee:	b2db      	uxtb	r3, r3
 80069f0:	607b      	str	r3, [r7, #4]
 80069f2:	697b      	ldr	r3, [r7, #20]
 80069f4:	22ff      	movs	r2, #255	; 0xff
 80069f6:	701a      	strb	r2, [r3, #0]
 80069f8:	697b      	ldr	r3, [r7, #20]
 80069fa:	781b      	ldrb	r3, [r3, #0]
 80069fc:	b2db      	uxtb	r3, r3
 80069fe:	70fb      	strb	r3, [r7, #3]
 8006a00:	78fb      	ldrb	r3, [r7, #3]
 8006a02:	b2db      	uxtb	r3, r3
 8006a04:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006a08:	b2da      	uxtb	r2, r3
 8006a0a:	4b31      	ldr	r3, [pc, #196]	; (8006ad0 <xPortStartScheduler+0x130>)
 8006a0c:	701a      	strb	r2, [r3, #0]
 8006a0e:	4b31      	ldr	r3, [pc, #196]	; (8006ad4 <xPortStartScheduler+0x134>)
 8006a10:	2207      	movs	r2, #7
 8006a12:	601a      	str	r2, [r3, #0]
 8006a14:	e009      	b.n	8006a2a <xPortStartScheduler+0x8a>
 8006a16:	4b2f      	ldr	r3, [pc, #188]	; (8006ad4 <xPortStartScheduler+0x134>)
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	3b01      	subs	r3, #1
 8006a1c:	4a2d      	ldr	r2, [pc, #180]	; (8006ad4 <xPortStartScheduler+0x134>)
 8006a1e:	6013      	str	r3, [r2, #0]
 8006a20:	78fb      	ldrb	r3, [r7, #3]
 8006a22:	b2db      	uxtb	r3, r3
 8006a24:	005b      	lsls	r3, r3, #1
 8006a26:	b2db      	uxtb	r3, r3
 8006a28:	70fb      	strb	r3, [r7, #3]
 8006a2a:	78fb      	ldrb	r3, [r7, #3]
 8006a2c:	b2db      	uxtb	r3, r3
 8006a2e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006a32:	2b80      	cmp	r3, #128	; 0x80
 8006a34:	d0ef      	beq.n	8006a16 <xPortStartScheduler+0x76>
 8006a36:	4b27      	ldr	r3, [pc, #156]	; (8006ad4 <xPortStartScheduler+0x134>)
 8006a38:	681b      	ldr	r3, [r3, #0]
 8006a3a:	f1c3 0307 	rsb	r3, r3, #7
 8006a3e:	2b04      	cmp	r3, #4
 8006a40:	d00a      	beq.n	8006a58 <xPortStartScheduler+0xb8>
 8006a42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006a46:	f383 8811 	msr	BASEPRI, r3
 8006a4a:	f3bf 8f6f 	isb	sy
 8006a4e:	f3bf 8f4f 	dsb	sy
 8006a52:	60bb      	str	r3, [r7, #8]
 8006a54:	bf00      	nop
 8006a56:	e7fe      	b.n	8006a56 <xPortStartScheduler+0xb6>
 8006a58:	4b1e      	ldr	r3, [pc, #120]	; (8006ad4 <xPortStartScheduler+0x134>)
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	021b      	lsls	r3, r3, #8
 8006a5e:	4a1d      	ldr	r2, [pc, #116]	; (8006ad4 <xPortStartScheduler+0x134>)
 8006a60:	6013      	str	r3, [r2, #0]
 8006a62:	4b1c      	ldr	r3, [pc, #112]	; (8006ad4 <xPortStartScheduler+0x134>)
 8006a64:	681b      	ldr	r3, [r3, #0]
 8006a66:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8006a6a:	4a1a      	ldr	r2, [pc, #104]	; (8006ad4 <xPortStartScheduler+0x134>)
 8006a6c:	6013      	str	r3, [r2, #0]
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	b2da      	uxtb	r2, r3
 8006a72:	697b      	ldr	r3, [r7, #20]
 8006a74:	701a      	strb	r2, [r3, #0]
 8006a76:	4b18      	ldr	r3, [pc, #96]	; (8006ad8 <xPortStartScheduler+0x138>)
 8006a78:	681b      	ldr	r3, [r3, #0]
 8006a7a:	4a17      	ldr	r2, [pc, #92]	; (8006ad8 <xPortStartScheduler+0x138>)
 8006a7c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8006a80:	6013      	str	r3, [r2, #0]
 8006a82:	4b15      	ldr	r3, [pc, #84]	; (8006ad8 <xPortStartScheduler+0x138>)
 8006a84:	681b      	ldr	r3, [r3, #0]
 8006a86:	4a14      	ldr	r2, [pc, #80]	; (8006ad8 <xPortStartScheduler+0x138>)
 8006a88:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8006a8c:	6013      	str	r3, [r2, #0]
 8006a8e:	f000 f8dd 	bl	8006c4c <vPortSetupTimerInterrupt>
 8006a92:	4b12      	ldr	r3, [pc, #72]	; (8006adc <xPortStartScheduler+0x13c>)
 8006a94:	2200      	movs	r2, #0
 8006a96:	601a      	str	r2, [r3, #0]
 8006a98:	f000 f8fc 	bl	8006c94 <vPortEnableVFP>
 8006a9c:	4b10      	ldr	r3, [pc, #64]	; (8006ae0 <xPortStartScheduler+0x140>)
 8006a9e:	681b      	ldr	r3, [r3, #0]
 8006aa0:	4a0f      	ldr	r2, [pc, #60]	; (8006ae0 <xPortStartScheduler+0x140>)
 8006aa2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8006aa6:	6013      	str	r3, [r2, #0]
 8006aa8:	f7ff ff66 	bl	8006978 <prvPortStartFirstTask>
 8006aac:	f7fe feee 	bl	800588c <vTaskSwitchContext>
 8006ab0:	f7ff ff1e 	bl	80068f0 <prvTaskExitError>
 8006ab4:	2300      	movs	r3, #0
 8006ab6:	4618      	mov	r0, r3
 8006ab8:	3718      	adds	r7, #24
 8006aba:	46bd      	mov	sp, r7
 8006abc:	bd80      	pop	{r7, pc}
 8006abe:	bf00      	nop
 8006ac0:	e000ed00 	.word	0xe000ed00
 8006ac4:	410fc271 	.word	0x410fc271
 8006ac8:	410fc270 	.word	0x410fc270
 8006acc:	e000e400 	.word	0xe000e400
 8006ad0:	20001070 	.word	0x20001070
 8006ad4:	20001074 	.word	0x20001074
 8006ad8:	e000ed20 	.word	0xe000ed20
 8006adc:	20000020 	.word	0x20000020
 8006ae0:	e000ef34 	.word	0xe000ef34

08006ae4 <vPortEnterCritical>:
 8006ae4:	b480      	push	{r7}
 8006ae6:	b083      	sub	sp, #12
 8006ae8:	af00      	add	r7, sp, #0
 8006aea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006aee:	f383 8811 	msr	BASEPRI, r3
 8006af2:	f3bf 8f6f 	isb	sy
 8006af6:	f3bf 8f4f 	dsb	sy
 8006afa:	607b      	str	r3, [r7, #4]
 8006afc:	bf00      	nop
 8006afe:	4b0f      	ldr	r3, [pc, #60]	; (8006b3c <vPortEnterCritical+0x58>)
 8006b00:	681b      	ldr	r3, [r3, #0]
 8006b02:	3301      	adds	r3, #1
 8006b04:	4a0d      	ldr	r2, [pc, #52]	; (8006b3c <vPortEnterCritical+0x58>)
 8006b06:	6013      	str	r3, [r2, #0]
 8006b08:	4b0c      	ldr	r3, [pc, #48]	; (8006b3c <vPortEnterCritical+0x58>)
 8006b0a:	681b      	ldr	r3, [r3, #0]
 8006b0c:	2b01      	cmp	r3, #1
 8006b0e:	d10f      	bne.n	8006b30 <vPortEnterCritical+0x4c>
 8006b10:	4b0b      	ldr	r3, [pc, #44]	; (8006b40 <vPortEnterCritical+0x5c>)
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	b2db      	uxtb	r3, r3
 8006b16:	2b00      	cmp	r3, #0
 8006b18:	d00a      	beq.n	8006b30 <vPortEnterCritical+0x4c>
 8006b1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b1e:	f383 8811 	msr	BASEPRI, r3
 8006b22:	f3bf 8f6f 	isb	sy
 8006b26:	f3bf 8f4f 	dsb	sy
 8006b2a:	603b      	str	r3, [r7, #0]
 8006b2c:	bf00      	nop
 8006b2e:	e7fe      	b.n	8006b2e <vPortEnterCritical+0x4a>
 8006b30:	bf00      	nop
 8006b32:	370c      	adds	r7, #12
 8006b34:	46bd      	mov	sp, r7
 8006b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b3a:	4770      	bx	lr
 8006b3c:	20000020 	.word	0x20000020
 8006b40:	e000ed04 	.word	0xe000ed04

08006b44 <vPortExitCritical>:
 8006b44:	b480      	push	{r7}
 8006b46:	b083      	sub	sp, #12
 8006b48:	af00      	add	r7, sp, #0
 8006b4a:	4b12      	ldr	r3, [pc, #72]	; (8006b94 <vPortExitCritical+0x50>)
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	2b00      	cmp	r3, #0
 8006b50:	d10a      	bne.n	8006b68 <vPortExitCritical+0x24>
 8006b52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b56:	f383 8811 	msr	BASEPRI, r3
 8006b5a:	f3bf 8f6f 	isb	sy
 8006b5e:	f3bf 8f4f 	dsb	sy
 8006b62:	607b      	str	r3, [r7, #4]
 8006b64:	bf00      	nop
 8006b66:	e7fe      	b.n	8006b66 <vPortExitCritical+0x22>
 8006b68:	4b0a      	ldr	r3, [pc, #40]	; (8006b94 <vPortExitCritical+0x50>)
 8006b6a:	681b      	ldr	r3, [r3, #0]
 8006b6c:	3b01      	subs	r3, #1
 8006b6e:	4a09      	ldr	r2, [pc, #36]	; (8006b94 <vPortExitCritical+0x50>)
 8006b70:	6013      	str	r3, [r2, #0]
 8006b72:	4b08      	ldr	r3, [pc, #32]	; (8006b94 <vPortExitCritical+0x50>)
 8006b74:	681b      	ldr	r3, [r3, #0]
 8006b76:	2b00      	cmp	r3, #0
 8006b78:	d105      	bne.n	8006b86 <vPortExitCritical+0x42>
 8006b7a:	2300      	movs	r3, #0
 8006b7c:	603b      	str	r3, [r7, #0]
 8006b7e:	683b      	ldr	r3, [r7, #0]
 8006b80:	f383 8811 	msr	BASEPRI, r3
 8006b84:	bf00      	nop
 8006b86:	bf00      	nop
 8006b88:	370c      	adds	r7, #12
 8006b8a:	46bd      	mov	sp, r7
 8006b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b90:	4770      	bx	lr
 8006b92:	bf00      	nop
 8006b94:	20000020 	.word	0x20000020
	...

08006ba0 <PendSV_Handler>:
 8006ba0:	f3ef 8009 	mrs	r0, PSP
 8006ba4:	f3bf 8f6f 	isb	sy
 8006ba8:	4b15      	ldr	r3, [pc, #84]	; (8006c00 <pxCurrentTCBConst>)
 8006baa:	681a      	ldr	r2, [r3, #0]
 8006bac:	f01e 0f10 	tst.w	lr, #16
 8006bb0:	bf08      	it	eq
 8006bb2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8006bb6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006bba:	6010      	str	r0, [r2, #0]
 8006bbc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8006bc0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8006bc4:	f380 8811 	msr	BASEPRI, r0
 8006bc8:	f3bf 8f4f 	dsb	sy
 8006bcc:	f3bf 8f6f 	isb	sy
 8006bd0:	f7fe fe5c 	bl	800588c <vTaskSwitchContext>
 8006bd4:	f04f 0000 	mov.w	r0, #0
 8006bd8:	f380 8811 	msr	BASEPRI, r0
 8006bdc:	bc09      	pop	{r0, r3}
 8006bde:	6819      	ldr	r1, [r3, #0]
 8006be0:	6808      	ldr	r0, [r1, #0]
 8006be2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006be6:	f01e 0f10 	tst.w	lr, #16
 8006bea:	bf08      	it	eq
 8006bec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8006bf0:	f380 8809 	msr	PSP, r0
 8006bf4:	f3bf 8f6f 	isb	sy
 8006bf8:	4770      	bx	lr
 8006bfa:	bf00      	nop
 8006bfc:	f3af 8000 	nop.w

08006c00 <pxCurrentTCBConst>:
 8006c00:	20000a44 	.word	0x20000a44
 8006c04:	bf00      	nop
 8006c06:	bf00      	nop

08006c08 <xPortSysTickHandler>:
 8006c08:	b580      	push	{r7, lr}
 8006c0a:	b082      	sub	sp, #8
 8006c0c:	af00      	add	r7, sp, #0
 8006c0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c12:	f383 8811 	msr	BASEPRI, r3
 8006c16:	f3bf 8f6f 	isb	sy
 8006c1a:	f3bf 8f4f 	dsb	sy
 8006c1e:	607b      	str	r3, [r7, #4]
 8006c20:	bf00      	nop
 8006c22:	f7fe fd79 	bl	8005718 <xTaskIncrementTick>
 8006c26:	4603      	mov	r3, r0
 8006c28:	2b00      	cmp	r3, #0
 8006c2a:	d003      	beq.n	8006c34 <xPortSysTickHandler+0x2c>
 8006c2c:	4b06      	ldr	r3, [pc, #24]	; (8006c48 <xPortSysTickHandler+0x40>)
 8006c2e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c32:	601a      	str	r2, [r3, #0]
 8006c34:	2300      	movs	r3, #0
 8006c36:	603b      	str	r3, [r7, #0]
 8006c38:	683b      	ldr	r3, [r7, #0]
 8006c3a:	f383 8811 	msr	BASEPRI, r3
 8006c3e:	bf00      	nop
 8006c40:	bf00      	nop
 8006c42:	3708      	adds	r7, #8
 8006c44:	46bd      	mov	sp, r7
 8006c46:	bd80      	pop	{r7, pc}
 8006c48:	e000ed04 	.word	0xe000ed04

08006c4c <vPortSetupTimerInterrupt>:
 8006c4c:	b480      	push	{r7}
 8006c4e:	af00      	add	r7, sp, #0
 8006c50:	4b0b      	ldr	r3, [pc, #44]	; (8006c80 <vPortSetupTimerInterrupt+0x34>)
 8006c52:	2200      	movs	r2, #0
 8006c54:	601a      	str	r2, [r3, #0]
 8006c56:	4b0b      	ldr	r3, [pc, #44]	; (8006c84 <vPortSetupTimerInterrupt+0x38>)
 8006c58:	2200      	movs	r2, #0
 8006c5a:	601a      	str	r2, [r3, #0]
 8006c5c:	4b0a      	ldr	r3, [pc, #40]	; (8006c88 <vPortSetupTimerInterrupt+0x3c>)
 8006c5e:	681b      	ldr	r3, [r3, #0]
 8006c60:	4a0a      	ldr	r2, [pc, #40]	; (8006c8c <vPortSetupTimerInterrupt+0x40>)
 8006c62:	fba2 2303 	umull	r2, r3, r2, r3
 8006c66:	099b      	lsrs	r3, r3, #6
 8006c68:	4a09      	ldr	r2, [pc, #36]	; (8006c90 <vPortSetupTimerInterrupt+0x44>)
 8006c6a:	3b01      	subs	r3, #1
 8006c6c:	6013      	str	r3, [r2, #0]
 8006c6e:	4b04      	ldr	r3, [pc, #16]	; (8006c80 <vPortSetupTimerInterrupt+0x34>)
 8006c70:	2207      	movs	r2, #7
 8006c72:	601a      	str	r2, [r3, #0]
 8006c74:	bf00      	nop
 8006c76:	46bd      	mov	sp, r7
 8006c78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c7c:	4770      	bx	lr
 8006c7e:	bf00      	nop
 8006c80:	e000e010 	.word	0xe000e010
 8006c84:	e000e018 	.word	0xe000e018
 8006c88:	20000014 	.word	0x20000014
 8006c8c:	10624dd3 	.word	0x10624dd3
 8006c90:	e000e014 	.word	0xe000e014

08006c94 <vPortEnableVFP>:
 8006c94:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006ca4 <vPortEnableVFP+0x10>
 8006c98:	6801      	ldr	r1, [r0, #0]
 8006c9a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006c9e:	6001      	str	r1, [r0, #0]
 8006ca0:	4770      	bx	lr
 8006ca2:	bf00      	nop
 8006ca4:	e000ed88 	.word	0xe000ed88

08006ca8 <vPortValidateInterruptPriority>:
 8006ca8:	b480      	push	{r7}
 8006caa:	b085      	sub	sp, #20
 8006cac:	af00      	add	r7, sp, #0
 8006cae:	f3ef 8305 	mrs	r3, IPSR
 8006cb2:	60fb      	str	r3, [r7, #12]
 8006cb4:	68fb      	ldr	r3, [r7, #12]
 8006cb6:	2b0f      	cmp	r3, #15
 8006cb8:	d914      	bls.n	8006ce4 <vPortValidateInterruptPriority+0x3c>
 8006cba:	4a17      	ldr	r2, [pc, #92]	; (8006d18 <vPortValidateInterruptPriority+0x70>)
 8006cbc:	68fb      	ldr	r3, [r7, #12]
 8006cbe:	4413      	add	r3, r2
 8006cc0:	781b      	ldrb	r3, [r3, #0]
 8006cc2:	72fb      	strb	r3, [r7, #11]
 8006cc4:	4b15      	ldr	r3, [pc, #84]	; (8006d1c <vPortValidateInterruptPriority+0x74>)
 8006cc6:	781b      	ldrb	r3, [r3, #0]
 8006cc8:	7afa      	ldrb	r2, [r7, #11]
 8006cca:	429a      	cmp	r2, r3
 8006ccc:	d20a      	bcs.n	8006ce4 <vPortValidateInterruptPriority+0x3c>
 8006cce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cd2:	f383 8811 	msr	BASEPRI, r3
 8006cd6:	f3bf 8f6f 	isb	sy
 8006cda:	f3bf 8f4f 	dsb	sy
 8006cde:	607b      	str	r3, [r7, #4]
 8006ce0:	bf00      	nop
 8006ce2:	e7fe      	b.n	8006ce2 <vPortValidateInterruptPriority+0x3a>
 8006ce4:	4b0e      	ldr	r3, [pc, #56]	; (8006d20 <vPortValidateInterruptPriority+0x78>)
 8006ce6:	681b      	ldr	r3, [r3, #0]
 8006ce8:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8006cec:	4b0d      	ldr	r3, [pc, #52]	; (8006d24 <vPortValidateInterruptPriority+0x7c>)
 8006cee:	681b      	ldr	r3, [r3, #0]
 8006cf0:	429a      	cmp	r2, r3
 8006cf2:	d90a      	bls.n	8006d0a <vPortValidateInterruptPriority+0x62>
 8006cf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006cf8:	f383 8811 	msr	BASEPRI, r3
 8006cfc:	f3bf 8f6f 	isb	sy
 8006d00:	f3bf 8f4f 	dsb	sy
 8006d04:	603b      	str	r3, [r7, #0]
 8006d06:	bf00      	nop
 8006d08:	e7fe      	b.n	8006d08 <vPortValidateInterruptPriority+0x60>
 8006d0a:	bf00      	nop
 8006d0c:	3714      	adds	r7, #20
 8006d0e:	46bd      	mov	sp, r7
 8006d10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d14:	4770      	bx	lr
 8006d16:	bf00      	nop
 8006d18:	e000e3f0 	.word	0xe000e3f0
 8006d1c:	20001070 	.word	0x20001070
 8006d20:	e000ed0c 	.word	0xe000ed0c
 8006d24:	20001074 	.word	0x20001074

08006d28 <pvPortMalloc>:
 8006d28:	b580      	push	{r7, lr}
 8006d2a:	b084      	sub	sp, #16
 8006d2c:	af00      	add	r7, sp, #0
 8006d2e:	6078      	str	r0, [r7, #4]
 8006d30:	2300      	movs	r3, #0
 8006d32:	60fb      	str	r3, [r7, #12]
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	f003 0307 	and.w	r3, r3, #7
 8006d3a:	2b00      	cmp	r3, #0
 8006d3c:	d004      	beq.n	8006d48 <pvPortMalloc+0x20>
 8006d3e:	687b      	ldr	r3, [r7, #4]
 8006d40:	f023 0307 	bic.w	r3, r3, #7
 8006d44:	3308      	adds	r3, #8
 8006d46:	607b      	str	r3, [r7, #4]
 8006d48:	f7fe fc2a 	bl	80055a0 <vTaskSuspendAll>
 8006d4c:	4b16      	ldr	r3, [pc, #88]	; (8006da8 <pvPortMalloc+0x80>)
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	2b00      	cmp	r3, #0
 8006d52:	d105      	bne.n	8006d60 <pvPortMalloc+0x38>
 8006d54:	4b15      	ldr	r3, [pc, #84]	; (8006dac <pvPortMalloc+0x84>)
 8006d56:	f023 0307 	bic.w	r3, r3, #7
 8006d5a:	461a      	mov	r2, r3
 8006d5c:	4b12      	ldr	r3, [pc, #72]	; (8006da8 <pvPortMalloc+0x80>)
 8006d5e:	601a      	str	r2, [r3, #0]
 8006d60:	4b13      	ldr	r3, [pc, #76]	; (8006db0 <pvPortMalloc+0x88>)
 8006d62:	681a      	ldr	r2, [r3, #0]
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	4413      	add	r3, r2
 8006d68:	f643 32f7 	movw	r2, #15351	; 0x3bf7
 8006d6c:	4293      	cmp	r3, r2
 8006d6e:	d813      	bhi.n	8006d98 <pvPortMalloc+0x70>
 8006d70:	4b0f      	ldr	r3, [pc, #60]	; (8006db0 <pvPortMalloc+0x88>)
 8006d72:	681a      	ldr	r2, [r3, #0]
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	441a      	add	r2, r3
 8006d78:	4b0d      	ldr	r3, [pc, #52]	; (8006db0 <pvPortMalloc+0x88>)
 8006d7a:	681b      	ldr	r3, [r3, #0]
 8006d7c:	429a      	cmp	r2, r3
 8006d7e:	d90b      	bls.n	8006d98 <pvPortMalloc+0x70>
 8006d80:	4b09      	ldr	r3, [pc, #36]	; (8006da8 <pvPortMalloc+0x80>)
 8006d82:	681a      	ldr	r2, [r3, #0]
 8006d84:	4b0a      	ldr	r3, [pc, #40]	; (8006db0 <pvPortMalloc+0x88>)
 8006d86:	681b      	ldr	r3, [r3, #0]
 8006d88:	4413      	add	r3, r2
 8006d8a:	60fb      	str	r3, [r7, #12]
 8006d8c:	4b08      	ldr	r3, [pc, #32]	; (8006db0 <pvPortMalloc+0x88>)
 8006d8e:	681a      	ldr	r2, [r3, #0]
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	4413      	add	r3, r2
 8006d94:	4a06      	ldr	r2, [pc, #24]	; (8006db0 <pvPortMalloc+0x88>)
 8006d96:	6013      	str	r3, [r2, #0]
 8006d98:	f7fe fc10 	bl	80055bc <xTaskResumeAll>
 8006d9c:	68fb      	ldr	r3, [r7, #12]
 8006d9e:	4618      	mov	r0, r3
 8006da0:	3710      	adds	r7, #16
 8006da2:	46bd      	mov	sp, r7
 8006da4:	bd80      	pop	{r7, pc}
 8006da6:	bf00      	nop
 8006da8:	20004c7c 	.word	0x20004c7c
 8006dac:	20001080 	.word	0x20001080
 8006db0:	20004c78 	.word	0x20004c78

08006db4 <vPortFree>:
 8006db4:	b480      	push	{r7}
 8006db6:	b085      	sub	sp, #20
 8006db8:	af00      	add	r7, sp, #0
 8006dba:	6078      	str	r0, [r7, #4]
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	2b00      	cmp	r3, #0
 8006dc0:	d00a      	beq.n	8006dd8 <vPortFree+0x24>
 8006dc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dc6:	f383 8811 	msr	BASEPRI, r3
 8006dca:	f3bf 8f6f 	isb	sy
 8006dce:	f3bf 8f4f 	dsb	sy
 8006dd2:	60fb      	str	r3, [r7, #12]
 8006dd4:	bf00      	nop
 8006dd6:	e7fe      	b.n	8006dd6 <vPortFree+0x22>
 8006dd8:	bf00      	nop
 8006dda:	3714      	adds	r7, #20
 8006ddc:	46bd      	mov	sp, r7
 8006dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006de2:	4770      	bx	lr

08006de4 <__errno>:
 8006de4:	4b01      	ldr	r3, [pc, #4]	; (8006dec <__errno+0x8>)
 8006de6:	6818      	ldr	r0, [r3, #0]
 8006de8:	4770      	bx	lr
 8006dea:	bf00      	nop
 8006dec:	20000024 	.word	0x20000024

08006df0 <__libc_init_array>:
 8006df0:	b570      	push	{r4, r5, r6, lr}
 8006df2:	4d0d      	ldr	r5, [pc, #52]	; (8006e28 <__libc_init_array+0x38>)
 8006df4:	4c0d      	ldr	r4, [pc, #52]	; (8006e2c <__libc_init_array+0x3c>)
 8006df6:	1b64      	subs	r4, r4, r5
 8006df8:	10a4      	asrs	r4, r4, #2
 8006dfa:	2600      	movs	r6, #0
 8006dfc:	42a6      	cmp	r6, r4
 8006dfe:	d109      	bne.n	8006e14 <__libc_init_array+0x24>
 8006e00:	4d0b      	ldr	r5, [pc, #44]	; (8006e30 <__libc_init_array+0x40>)
 8006e02:	4c0c      	ldr	r4, [pc, #48]	; (8006e34 <__libc_init_array+0x44>)
 8006e04:	f000 fd84 	bl	8007910 <_init>
 8006e08:	1b64      	subs	r4, r4, r5
 8006e0a:	10a4      	asrs	r4, r4, #2
 8006e0c:	2600      	movs	r6, #0
 8006e0e:	42a6      	cmp	r6, r4
 8006e10:	d105      	bne.n	8006e1e <__libc_init_array+0x2e>
 8006e12:	bd70      	pop	{r4, r5, r6, pc}
 8006e14:	f855 3b04 	ldr.w	r3, [r5], #4
 8006e18:	4798      	blx	r3
 8006e1a:	3601      	adds	r6, #1
 8006e1c:	e7ee      	b.n	8006dfc <__libc_init_array+0xc>
 8006e1e:	f855 3b04 	ldr.w	r3, [r5], #4
 8006e22:	4798      	blx	r3
 8006e24:	3601      	adds	r6, #1
 8006e26:	e7f2      	b.n	8006e0e <__libc_init_array+0x1e>
 8006e28:	0800842c 	.word	0x0800842c
 8006e2c:	0800842c 	.word	0x0800842c
 8006e30:	0800842c 	.word	0x0800842c
 8006e34:	08008430 	.word	0x08008430

08006e38 <__retarget_lock_acquire_recursive>:
 8006e38:	4770      	bx	lr

08006e3a <__retarget_lock_release_recursive>:
 8006e3a:	4770      	bx	lr

08006e3c <memcpy>:
 8006e3c:	440a      	add	r2, r1
 8006e3e:	4291      	cmp	r1, r2
 8006e40:	f100 33ff 	add.w	r3, r0, #4294967295
 8006e44:	d100      	bne.n	8006e48 <memcpy+0xc>
 8006e46:	4770      	bx	lr
 8006e48:	b510      	push	{r4, lr}
 8006e4a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006e4e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006e52:	4291      	cmp	r1, r2
 8006e54:	d1f9      	bne.n	8006e4a <memcpy+0xe>
 8006e56:	bd10      	pop	{r4, pc}

08006e58 <memset>:
 8006e58:	4402      	add	r2, r0
 8006e5a:	4603      	mov	r3, r0
 8006e5c:	4293      	cmp	r3, r2
 8006e5e:	d100      	bne.n	8006e62 <memset+0xa>
 8006e60:	4770      	bx	lr
 8006e62:	f803 1b01 	strb.w	r1, [r3], #1
 8006e66:	e7f9      	b.n	8006e5c <memset+0x4>

08006e68 <sbrk_aligned>:
 8006e68:	b570      	push	{r4, r5, r6, lr}
 8006e6a:	4e0e      	ldr	r6, [pc, #56]	; (8006ea4 <sbrk_aligned+0x3c>)
 8006e6c:	460c      	mov	r4, r1
 8006e6e:	6831      	ldr	r1, [r6, #0]
 8006e70:	4605      	mov	r5, r0
 8006e72:	b911      	cbnz	r1, 8006e7a <sbrk_aligned+0x12>
 8006e74:	f000 f8f6 	bl	8007064 <_sbrk_r>
 8006e78:	6030      	str	r0, [r6, #0]
 8006e7a:	4621      	mov	r1, r4
 8006e7c:	4628      	mov	r0, r5
 8006e7e:	f000 f8f1 	bl	8007064 <_sbrk_r>
 8006e82:	1c43      	adds	r3, r0, #1
 8006e84:	d00a      	beq.n	8006e9c <sbrk_aligned+0x34>
 8006e86:	1cc4      	adds	r4, r0, #3
 8006e88:	f024 0403 	bic.w	r4, r4, #3
 8006e8c:	42a0      	cmp	r0, r4
 8006e8e:	d007      	beq.n	8006ea0 <sbrk_aligned+0x38>
 8006e90:	1a21      	subs	r1, r4, r0
 8006e92:	4628      	mov	r0, r5
 8006e94:	f000 f8e6 	bl	8007064 <_sbrk_r>
 8006e98:	3001      	adds	r0, #1
 8006e9a:	d101      	bne.n	8006ea0 <sbrk_aligned+0x38>
 8006e9c:	f04f 34ff 	mov.w	r4, #4294967295
 8006ea0:	4620      	mov	r0, r4
 8006ea2:	bd70      	pop	{r4, r5, r6, pc}
 8006ea4:	20004c88 	.word	0x20004c88

08006ea8 <_malloc_r>:
 8006ea8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006eac:	1ccd      	adds	r5, r1, #3
 8006eae:	f025 0503 	bic.w	r5, r5, #3
 8006eb2:	3508      	adds	r5, #8
 8006eb4:	2d0c      	cmp	r5, #12
 8006eb6:	bf38      	it	cc
 8006eb8:	250c      	movcc	r5, #12
 8006eba:	2d00      	cmp	r5, #0
 8006ebc:	4607      	mov	r7, r0
 8006ebe:	db01      	blt.n	8006ec4 <_malloc_r+0x1c>
 8006ec0:	42a9      	cmp	r1, r5
 8006ec2:	d905      	bls.n	8006ed0 <_malloc_r+0x28>
 8006ec4:	230c      	movs	r3, #12
 8006ec6:	603b      	str	r3, [r7, #0]
 8006ec8:	2600      	movs	r6, #0
 8006eca:	4630      	mov	r0, r6
 8006ecc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006ed0:	4e2e      	ldr	r6, [pc, #184]	; (8006f8c <_malloc_r+0xe4>)
 8006ed2:	f000 f983 	bl	80071dc <__malloc_lock>
 8006ed6:	6833      	ldr	r3, [r6, #0]
 8006ed8:	461c      	mov	r4, r3
 8006eda:	bb34      	cbnz	r4, 8006f2a <_malloc_r+0x82>
 8006edc:	4629      	mov	r1, r5
 8006ede:	4638      	mov	r0, r7
 8006ee0:	f7ff ffc2 	bl	8006e68 <sbrk_aligned>
 8006ee4:	1c43      	adds	r3, r0, #1
 8006ee6:	4604      	mov	r4, r0
 8006ee8:	d14d      	bne.n	8006f86 <_malloc_r+0xde>
 8006eea:	6834      	ldr	r4, [r6, #0]
 8006eec:	4626      	mov	r6, r4
 8006eee:	2e00      	cmp	r6, #0
 8006ef0:	d140      	bne.n	8006f74 <_malloc_r+0xcc>
 8006ef2:	6823      	ldr	r3, [r4, #0]
 8006ef4:	4631      	mov	r1, r6
 8006ef6:	4638      	mov	r0, r7
 8006ef8:	eb04 0803 	add.w	r8, r4, r3
 8006efc:	f000 f8b2 	bl	8007064 <_sbrk_r>
 8006f00:	4580      	cmp	r8, r0
 8006f02:	d13a      	bne.n	8006f7a <_malloc_r+0xd2>
 8006f04:	6821      	ldr	r1, [r4, #0]
 8006f06:	3503      	adds	r5, #3
 8006f08:	1a6d      	subs	r5, r5, r1
 8006f0a:	f025 0503 	bic.w	r5, r5, #3
 8006f0e:	3508      	adds	r5, #8
 8006f10:	2d0c      	cmp	r5, #12
 8006f12:	bf38      	it	cc
 8006f14:	250c      	movcc	r5, #12
 8006f16:	4629      	mov	r1, r5
 8006f18:	4638      	mov	r0, r7
 8006f1a:	f7ff ffa5 	bl	8006e68 <sbrk_aligned>
 8006f1e:	3001      	adds	r0, #1
 8006f20:	d02b      	beq.n	8006f7a <_malloc_r+0xd2>
 8006f22:	6823      	ldr	r3, [r4, #0]
 8006f24:	442b      	add	r3, r5
 8006f26:	6023      	str	r3, [r4, #0]
 8006f28:	e00e      	b.n	8006f48 <_malloc_r+0xa0>
 8006f2a:	6822      	ldr	r2, [r4, #0]
 8006f2c:	1b52      	subs	r2, r2, r5
 8006f2e:	d41e      	bmi.n	8006f6e <_malloc_r+0xc6>
 8006f30:	2a0b      	cmp	r2, #11
 8006f32:	d916      	bls.n	8006f62 <_malloc_r+0xba>
 8006f34:	1961      	adds	r1, r4, r5
 8006f36:	42a3      	cmp	r3, r4
 8006f38:	6025      	str	r5, [r4, #0]
 8006f3a:	bf18      	it	ne
 8006f3c:	6059      	strne	r1, [r3, #4]
 8006f3e:	6863      	ldr	r3, [r4, #4]
 8006f40:	bf08      	it	eq
 8006f42:	6031      	streq	r1, [r6, #0]
 8006f44:	5162      	str	r2, [r4, r5]
 8006f46:	604b      	str	r3, [r1, #4]
 8006f48:	4638      	mov	r0, r7
 8006f4a:	f104 060b 	add.w	r6, r4, #11
 8006f4e:	f000 f94b 	bl	80071e8 <__malloc_unlock>
 8006f52:	f026 0607 	bic.w	r6, r6, #7
 8006f56:	1d23      	adds	r3, r4, #4
 8006f58:	1af2      	subs	r2, r6, r3
 8006f5a:	d0b6      	beq.n	8006eca <_malloc_r+0x22>
 8006f5c:	1b9b      	subs	r3, r3, r6
 8006f5e:	50a3      	str	r3, [r4, r2]
 8006f60:	e7b3      	b.n	8006eca <_malloc_r+0x22>
 8006f62:	6862      	ldr	r2, [r4, #4]
 8006f64:	42a3      	cmp	r3, r4
 8006f66:	bf0c      	ite	eq
 8006f68:	6032      	streq	r2, [r6, #0]
 8006f6a:	605a      	strne	r2, [r3, #4]
 8006f6c:	e7ec      	b.n	8006f48 <_malloc_r+0xa0>
 8006f6e:	4623      	mov	r3, r4
 8006f70:	6864      	ldr	r4, [r4, #4]
 8006f72:	e7b2      	b.n	8006eda <_malloc_r+0x32>
 8006f74:	4634      	mov	r4, r6
 8006f76:	6876      	ldr	r6, [r6, #4]
 8006f78:	e7b9      	b.n	8006eee <_malloc_r+0x46>
 8006f7a:	230c      	movs	r3, #12
 8006f7c:	603b      	str	r3, [r7, #0]
 8006f7e:	4638      	mov	r0, r7
 8006f80:	f000 f932 	bl	80071e8 <__malloc_unlock>
 8006f84:	e7a1      	b.n	8006eca <_malloc_r+0x22>
 8006f86:	6025      	str	r5, [r4, #0]
 8006f88:	e7de      	b.n	8006f48 <_malloc_r+0xa0>
 8006f8a:	bf00      	nop
 8006f8c:	20004c84 	.word	0x20004c84

08006f90 <cleanup_glue>:
 8006f90:	b538      	push	{r3, r4, r5, lr}
 8006f92:	460c      	mov	r4, r1
 8006f94:	6809      	ldr	r1, [r1, #0]
 8006f96:	4605      	mov	r5, r0
 8006f98:	b109      	cbz	r1, 8006f9e <cleanup_glue+0xe>
 8006f9a:	f7ff fff9 	bl	8006f90 <cleanup_glue>
 8006f9e:	4621      	mov	r1, r4
 8006fa0:	4628      	mov	r0, r5
 8006fa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006fa6:	f000 b925 	b.w	80071f4 <_free_r>
	...

08006fac <_reclaim_reent>:
 8006fac:	4b2c      	ldr	r3, [pc, #176]	; (8007060 <_reclaim_reent+0xb4>)
 8006fae:	681b      	ldr	r3, [r3, #0]
 8006fb0:	4283      	cmp	r3, r0
 8006fb2:	b570      	push	{r4, r5, r6, lr}
 8006fb4:	4604      	mov	r4, r0
 8006fb6:	d051      	beq.n	800705c <_reclaim_reent+0xb0>
 8006fb8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8006fba:	b143      	cbz	r3, 8006fce <_reclaim_reent+0x22>
 8006fbc:	68db      	ldr	r3, [r3, #12]
 8006fbe:	2b00      	cmp	r3, #0
 8006fc0:	d14a      	bne.n	8007058 <_reclaim_reent+0xac>
 8006fc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006fc4:	6819      	ldr	r1, [r3, #0]
 8006fc6:	b111      	cbz	r1, 8006fce <_reclaim_reent+0x22>
 8006fc8:	4620      	mov	r0, r4
 8006fca:	f000 f913 	bl	80071f4 <_free_r>
 8006fce:	6961      	ldr	r1, [r4, #20]
 8006fd0:	b111      	cbz	r1, 8006fd8 <_reclaim_reent+0x2c>
 8006fd2:	4620      	mov	r0, r4
 8006fd4:	f000 f90e 	bl	80071f4 <_free_r>
 8006fd8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8006fda:	b111      	cbz	r1, 8006fe2 <_reclaim_reent+0x36>
 8006fdc:	4620      	mov	r0, r4
 8006fde:	f000 f909 	bl	80071f4 <_free_r>
 8006fe2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8006fe4:	b111      	cbz	r1, 8006fec <_reclaim_reent+0x40>
 8006fe6:	4620      	mov	r0, r4
 8006fe8:	f000 f904 	bl	80071f4 <_free_r>
 8006fec:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8006fee:	b111      	cbz	r1, 8006ff6 <_reclaim_reent+0x4a>
 8006ff0:	4620      	mov	r0, r4
 8006ff2:	f000 f8ff 	bl	80071f4 <_free_r>
 8006ff6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8006ff8:	b111      	cbz	r1, 8007000 <_reclaim_reent+0x54>
 8006ffa:	4620      	mov	r0, r4
 8006ffc:	f000 f8fa 	bl	80071f4 <_free_r>
 8007000:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8007002:	b111      	cbz	r1, 800700a <_reclaim_reent+0x5e>
 8007004:	4620      	mov	r0, r4
 8007006:	f000 f8f5 	bl	80071f4 <_free_r>
 800700a:	6da1      	ldr	r1, [r4, #88]	; 0x58
 800700c:	b111      	cbz	r1, 8007014 <_reclaim_reent+0x68>
 800700e:	4620      	mov	r0, r4
 8007010:	f000 f8f0 	bl	80071f4 <_free_r>
 8007014:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007016:	b111      	cbz	r1, 800701e <_reclaim_reent+0x72>
 8007018:	4620      	mov	r0, r4
 800701a:	f000 f8eb 	bl	80071f4 <_free_r>
 800701e:	69a3      	ldr	r3, [r4, #24]
 8007020:	b1e3      	cbz	r3, 800705c <_reclaim_reent+0xb0>
 8007022:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007024:	4620      	mov	r0, r4
 8007026:	4798      	blx	r3
 8007028:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800702a:	b1b9      	cbz	r1, 800705c <_reclaim_reent+0xb0>
 800702c:	4620      	mov	r0, r4
 800702e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007032:	f7ff bfad 	b.w	8006f90 <cleanup_glue>
 8007036:	5949      	ldr	r1, [r1, r5]
 8007038:	b941      	cbnz	r1, 800704c <_reclaim_reent+0xa0>
 800703a:	3504      	adds	r5, #4
 800703c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800703e:	2d80      	cmp	r5, #128	; 0x80
 8007040:	68d9      	ldr	r1, [r3, #12]
 8007042:	d1f8      	bne.n	8007036 <_reclaim_reent+0x8a>
 8007044:	4620      	mov	r0, r4
 8007046:	f000 f8d5 	bl	80071f4 <_free_r>
 800704a:	e7ba      	b.n	8006fc2 <_reclaim_reent+0x16>
 800704c:	680e      	ldr	r6, [r1, #0]
 800704e:	4620      	mov	r0, r4
 8007050:	f000 f8d0 	bl	80071f4 <_free_r>
 8007054:	4631      	mov	r1, r6
 8007056:	e7ef      	b.n	8007038 <_reclaim_reent+0x8c>
 8007058:	2500      	movs	r5, #0
 800705a:	e7ef      	b.n	800703c <_reclaim_reent+0x90>
 800705c:	bd70      	pop	{r4, r5, r6, pc}
 800705e:	bf00      	nop
 8007060:	20000024 	.word	0x20000024

08007064 <_sbrk_r>:
 8007064:	b538      	push	{r3, r4, r5, lr}
 8007066:	4d06      	ldr	r5, [pc, #24]	; (8007080 <_sbrk_r+0x1c>)
 8007068:	2300      	movs	r3, #0
 800706a:	4604      	mov	r4, r0
 800706c:	4608      	mov	r0, r1
 800706e:	602b      	str	r3, [r5, #0]
 8007070:	f7fa fd24 	bl	8001abc <_sbrk>
 8007074:	1c43      	adds	r3, r0, #1
 8007076:	d102      	bne.n	800707e <_sbrk_r+0x1a>
 8007078:	682b      	ldr	r3, [r5, #0]
 800707a:	b103      	cbz	r3, 800707e <_sbrk_r+0x1a>
 800707c:	6023      	str	r3, [r4, #0]
 800707e:	bd38      	pop	{r3, r4, r5, pc}
 8007080:	20004c8c 	.word	0x20004c8c

08007084 <siprintf>:
 8007084:	b40e      	push	{r1, r2, r3}
 8007086:	b500      	push	{lr}
 8007088:	b09c      	sub	sp, #112	; 0x70
 800708a:	ab1d      	add	r3, sp, #116	; 0x74
 800708c:	9002      	str	r0, [sp, #8]
 800708e:	9006      	str	r0, [sp, #24]
 8007090:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8007094:	4809      	ldr	r0, [pc, #36]	; (80070bc <siprintf+0x38>)
 8007096:	9107      	str	r1, [sp, #28]
 8007098:	9104      	str	r1, [sp, #16]
 800709a:	4909      	ldr	r1, [pc, #36]	; (80070c0 <siprintf+0x3c>)
 800709c:	f853 2b04 	ldr.w	r2, [r3], #4
 80070a0:	9105      	str	r1, [sp, #20]
 80070a2:	6800      	ldr	r0, [r0, #0]
 80070a4:	9301      	str	r3, [sp, #4]
 80070a6:	a902      	add	r1, sp, #8
 80070a8:	f000 f94c 	bl	8007344 <_svfiprintf_r>
 80070ac:	9b02      	ldr	r3, [sp, #8]
 80070ae:	2200      	movs	r2, #0
 80070b0:	701a      	strb	r2, [r3, #0]
 80070b2:	b01c      	add	sp, #112	; 0x70
 80070b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80070b8:	b003      	add	sp, #12
 80070ba:	4770      	bx	lr
 80070bc:	20000024 	.word	0x20000024
 80070c0:	ffff0208 	.word	0xffff0208

080070c4 <_strtol_l.constprop.0>:
 80070c4:	2b01      	cmp	r3, #1
 80070c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80070ca:	d001      	beq.n	80070d0 <_strtol_l.constprop.0+0xc>
 80070cc:	2b24      	cmp	r3, #36	; 0x24
 80070ce:	d906      	bls.n	80070de <_strtol_l.constprop.0+0x1a>
 80070d0:	f7ff fe88 	bl	8006de4 <__errno>
 80070d4:	2316      	movs	r3, #22
 80070d6:	6003      	str	r3, [r0, #0]
 80070d8:	2000      	movs	r0, #0
 80070da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80070de:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80071c4 <_strtol_l.constprop.0+0x100>
 80070e2:	460d      	mov	r5, r1
 80070e4:	462e      	mov	r6, r5
 80070e6:	f815 4b01 	ldrb.w	r4, [r5], #1
 80070ea:	f814 700c 	ldrb.w	r7, [r4, ip]
 80070ee:	f017 0708 	ands.w	r7, r7, #8
 80070f2:	d1f7      	bne.n	80070e4 <_strtol_l.constprop.0+0x20>
 80070f4:	2c2d      	cmp	r4, #45	; 0x2d
 80070f6:	d132      	bne.n	800715e <_strtol_l.constprop.0+0x9a>
 80070f8:	782c      	ldrb	r4, [r5, #0]
 80070fa:	2701      	movs	r7, #1
 80070fc:	1cb5      	adds	r5, r6, #2
 80070fe:	2b00      	cmp	r3, #0
 8007100:	d05b      	beq.n	80071ba <_strtol_l.constprop.0+0xf6>
 8007102:	2b10      	cmp	r3, #16
 8007104:	d109      	bne.n	800711a <_strtol_l.constprop.0+0x56>
 8007106:	2c30      	cmp	r4, #48	; 0x30
 8007108:	d107      	bne.n	800711a <_strtol_l.constprop.0+0x56>
 800710a:	782c      	ldrb	r4, [r5, #0]
 800710c:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8007110:	2c58      	cmp	r4, #88	; 0x58
 8007112:	d14d      	bne.n	80071b0 <_strtol_l.constprop.0+0xec>
 8007114:	786c      	ldrb	r4, [r5, #1]
 8007116:	2310      	movs	r3, #16
 8007118:	3502      	adds	r5, #2
 800711a:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 800711e:	f108 38ff 	add.w	r8, r8, #4294967295
 8007122:	f04f 0c00 	mov.w	ip, #0
 8007126:	fbb8 f9f3 	udiv	r9, r8, r3
 800712a:	4666      	mov	r6, ip
 800712c:	fb03 8a19 	mls	sl, r3, r9, r8
 8007130:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8007134:	f1be 0f09 	cmp.w	lr, #9
 8007138:	d816      	bhi.n	8007168 <_strtol_l.constprop.0+0xa4>
 800713a:	4674      	mov	r4, lr
 800713c:	42a3      	cmp	r3, r4
 800713e:	dd24      	ble.n	800718a <_strtol_l.constprop.0+0xc6>
 8007140:	f1bc 0f00 	cmp.w	ip, #0
 8007144:	db1e      	blt.n	8007184 <_strtol_l.constprop.0+0xc0>
 8007146:	45b1      	cmp	r9, r6
 8007148:	d31c      	bcc.n	8007184 <_strtol_l.constprop.0+0xc0>
 800714a:	d101      	bne.n	8007150 <_strtol_l.constprop.0+0x8c>
 800714c:	45a2      	cmp	sl, r4
 800714e:	db19      	blt.n	8007184 <_strtol_l.constprop.0+0xc0>
 8007150:	fb06 4603 	mla	r6, r6, r3, r4
 8007154:	f04f 0c01 	mov.w	ip, #1
 8007158:	f815 4b01 	ldrb.w	r4, [r5], #1
 800715c:	e7e8      	b.n	8007130 <_strtol_l.constprop.0+0x6c>
 800715e:	2c2b      	cmp	r4, #43	; 0x2b
 8007160:	bf04      	itt	eq
 8007162:	782c      	ldrbeq	r4, [r5, #0]
 8007164:	1cb5      	addeq	r5, r6, #2
 8007166:	e7ca      	b.n	80070fe <_strtol_l.constprop.0+0x3a>
 8007168:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 800716c:	f1be 0f19 	cmp.w	lr, #25
 8007170:	d801      	bhi.n	8007176 <_strtol_l.constprop.0+0xb2>
 8007172:	3c37      	subs	r4, #55	; 0x37
 8007174:	e7e2      	b.n	800713c <_strtol_l.constprop.0+0x78>
 8007176:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 800717a:	f1be 0f19 	cmp.w	lr, #25
 800717e:	d804      	bhi.n	800718a <_strtol_l.constprop.0+0xc6>
 8007180:	3c57      	subs	r4, #87	; 0x57
 8007182:	e7db      	b.n	800713c <_strtol_l.constprop.0+0x78>
 8007184:	f04f 3cff 	mov.w	ip, #4294967295
 8007188:	e7e6      	b.n	8007158 <_strtol_l.constprop.0+0x94>
 800718a:	f1bc 0f00 	cmp.w	ip, #0
 800718e:	da05      	bge.n	800719c <_strtol_l.constprop.0+0xd8>
 8007190:	2322      	movs	r3, #34	; 0x22
 8007192:	6003      	str	r3, [r0, #0]
 8007194:	4646      	mov	r6, r8
 8007196:	b942      	cbnz	r2, 80071aa <_strtol_l.constprop.0+0xe6>
 8007198:	4630      	mov	r0, r6
 800719a:	e79e      	b.n	80070da <_strtol_l.constprop.0+0x16>
 800719c:	b107      	cbz	r7, 80071a0 <_strtol_l.constprop.0+0xdc>
 800719e:	4276      	negs	r6, r6
 80071a0:	2a00      	cmp	r2, #0
 80071a2:	d0f9      	beq.n	8007198 <_strtol_l.constprop.0+0xd4>
 80071a4:	f1bc 0f00 	cmp.w	ip, #0
 80071a8:	d000      	beq.n	80071ac <_strtol_l.constprop.0+0xe8>
 80071aa:	1e69      	subs	r1, r5, #1
 80071ac:	6011      	str	r1, [r2, #0]
 80071ae:	e7f3      	b.n	8007198 <_strtol_l.constprop.0+0xd4>
 80071b0:	2430      	movs	r4, #48	; 0x30
 80071b2:	2b00      	cmp	r3, #0
 80071b4:	d1b1      	bne.n	800711a <_strtol_l.constprop.0+0x56>
 80071b6:	2308      	movs	r3, #8
 80071b8:	e7af      	b.n	800711a <_strtol_l.constprop.0+0x56>
 80071ba:	2c30      	cmp	r4, #48	; 0x30
 80071bc:	d0a5      	beq.n	800710a <_strtol_l.constprop.0+0x46>
 80071be:	230a      	movs	r3, #10
 80071c0:	e7ab      	b.n	800711a <_strtol_l.constprop.0+0x56>
 80071c2:	bf00      	nop
 80071c4:	080082f1 	.word	0x080082f1

080071c8 <strtol>:
 80071c8:	4613      	mov	r3, r2
 80071ca:	460a      	mov	r2, r1
 80071cc:	4601      	mov	r1, r0
 80071ce:	4802      	ldr	r0, [pc, #8]	; (80071d8 <strtol+0x10>)
 80071d0:	6800      	ldr	r0, [r0, #0]
 80071d2:	f7ff bf77 	b.w	80070c4 <_strtol_l.constprop.0>
 80071d6:	bf00      	nop
 80071d8:	20000024 	.word	0x20000024

080071dc <__malloc_lock>:
 80071dc:	4801      	ldr	r0, [pc, #4]	; (80071e4 <__malloc_lock+0x8>)
 80071de:	f7ff be2b 	b.w	8006e38 <__retarget_lock_acquire_recursive>
 80071e2:	bf00      	nop
 80071e4:	20004c80 	.word	0x20004c80

080071e8 <__malloc_unlock>:
 80071e8:	4801      	ldr	r0, [pc, #4]	; (80071f0 <__malloc_unlock+0x8>)
 80071ea:	f7ff be26 	b.w	8006e3a <__retarget_lock_release_recursive>
 80071ee:	bf00      	nop
 80071f0:	20004c80 	.word	0x20004c80

080071f4 <_free_r>:
 80071f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80071f6:	2900      	cmp	r1, #0
 80071f8:	d044      	beq.n	8007284 <_free_r+0x90>
 80071fa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80071fe:	9001      	str	r0, [sp, #4]
 8007200:	2b00      	cmp	r3, #0
 8007202:	f1a1 0404 	sub.w	r4, r1, #4
 8007206:	bfb8      	it	lt
 8007208:	18e4      	addlt	r4, r4, r3
 800720a:	f7ff ffe7 	bl	80071dc <__malloc_lock>
 800720e:	4a1e      	ldr	r2, [pc, #120]	; (8007288 <_free_r+0x94>)
 8007210:	9801      	ldr	r0, [sp, #4]
 8007212:	6813      	ldr	r3, [r2, #0]
 8007214:	b933      	cbnz	r3, 8007224 <_free_r+0x30>
 8007216:	6063      	str	r3, [r4, #4]
 8007218:	6014      	str	r4, [r2, #0]
 800721a:	b003      	add	sp, #12
 800721c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8007220:	f7ff bfe2 	b.w	80071e8 <__malloc_unlock>
 8007224:	42a3      	cmp	r3, r4
 8007226:	d908      	bls.n	800723a <_free_r+0x46>
 8007228:	6825      	ldr	r5, [r4, #0]
 800722a:	1961      	adds	r1, r4, r5
 800722c:	428b      	cmp	r3, r1
 800722e:	bf01      	itttt	eq
 8007230:	6819      	ldreq	r1, [r3, #0]
 8007232:	685b      	ldreq	r3, [r3, #4]
 8007234:	1949      	addeq	r1, r1, r5
 8007236:	6021      	streq	r1, [r4, #0]
 8007238:	e7ed      	b.n	8007216 <_free_r+0x22>
 800723a:	461a      	mov	r2, r3
 800723c:	685b      	ldr	r3, [r3, #4]
 800723e:	b10b      	cbz	r3, 8007244 <_free_r+0x50>
 8007240:	42a3      	cmp	r3, r4
 8007242:	d9fa      	bls.n	800723a <_free_r+0x46>
 8007244:	6811      	ldr	r1, [r2, #0]
 8007246:	1855      	adds	r5, r2, r1
 8007248:	42a5      	cmp	r5, r4
 800724a:	d10b      	bne.n	8007264 <_free_r+0x70>
 800724c:	6824      	ldr	r4, [r4, #0]
 800724e:	4421      	add	r1, r4
 8007250:	1854      	adds	r4, r2, r1
 8007252:	42a3      	cmp	r3, r4
 8007254:	6011      	str	r1, [r2, #0]
 8007256:	d1e0      	bne.n	800721a <_free_r+0x26>
 8007258:	681c      	ldr	r4, [r3, #0]
 800725a:	685b      	ldr	r3, [r3, #4]
 800725c:	6053      	str	r3, [r2, #4]
 800725e:	4421      	add	r1, r4
 8007260:	6011      	str	r1, [r2, #0]
 8007262:	e7da      	b.n	800721a <_free_r+0x26>
 8007264:	d902      	bls.n	800726c <_free_r+0x78>
 8007266:	230c      	movs	r3, #12
 8007268:	6003      	str	r3, [r0, #0]
 800726a:	e7d6      	b.n	800721a <_free_r+0x26>
 800726c:	6825      	ldr	r5, [r4, #0]
 800726e:	1961      	adds	r1, r4, r5
 8007270:	428b      	cmp	r3, r1
 8007272:	bf04      	itt	eq
 8007274:	6819      	ldreq	r1, [r3, #0]
 8007276:	685b      	ldreq	r3, [r3, #4]
 8007278:	6063      	str	r3, [r4, #4]
 800727a:	bf04      	itt	eq
 800727c:	1949      	addeq	r1, r1, r5
 800727e:	6021      	streq	r1, [r4, #0]
 8007280:	6054      	str	r4, [r2, #4]
 8007282:	e7ca      	b.n	800721a <_free_r+0x26>
 8007284:	b003      	add	sp, #12
 8007286:	bd30      	pop	{r4, r5, pc}
 8007288:	20004c84 	.word	0x20004c84

0800728c <__ssputs_r>:
 800728c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007290:	688e      	ldr	r6, [r1, #8]
 8007292:	429e      	cmp	r6, r3
 8007294:	4682      	mov	sl, r0
 8007296:	460c      	mov	r4, r1
 8007298:	4690      	mov	r8, r2
 800729a:	461f      	mov	r7, r3
 800729c:	d838      	bhi.n	8007310 <__ssputs_r+0x84>
 800729e:	898a      	ldrh	r2, [r1, #12]
 80072a0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80072a4:	d032      	beq.n	800730c <__ssputs_r+0x80>
 80072a6:	6825      	ldr	r5, [r4, #0]
 80072a8:	6909      	ldr	r1, [r1, #16]
 80072aa:	eba5 0901 	sub.w	r9, r5, r1
 80072ae:	6965      	ldr	r5, [r4, #20]
 80072b0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80072b4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80072b8:	3301      	adds	r3, #1
 80072ba:	444b      	add	r3, r9
 80072bc:	106d      	asrs	r5, r5, #1
 80072be:	429d      	cmp	r5, r3
 80072c0:	bf38      	it	cc
 80072c2:	461d      	movcc	r5, r3
 80072c4:	0553      	lsls	r3, r2, #21
 80072c6:	d531      	bpl.n	800732c <__ssputs_r+0xa0>
 80072c8:	4629      	mov	r1, r5
 80072ca:	f7ff fded 	bl	8006ea8 <_malloc_r>
 80072ce:	4606      	mov	r6, r0
 80072d0:	b950      	cbnz	r0, 80072e8 <__ssputs_r+0x5c>
 80072d2:	230c      	movs	r3, #12
 80072d4:	f8ca 3000 	str.w	r3, [sl]
 80072d8:	89a3      	ldrh	r3, [r4, #12]
 80072da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80072de:	81a3      	strh	r3, [r4, #12]
 80072e0:	f04f 30ff 	mov.w	r0, #4294967295
 80072e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80072e8:	6921      	ldr	r1, [r4, #16]
 80072ea:	464a      	mov	r2, r9
 80072ec:	f7ff fda6 	bl	8006e3c <memcpy>
 80072f0:	89a3      	ldrh	r3, [r4, #12]
 80072f2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80072f6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80072fa:	81a3      	strh	r3, [r4, #12]
 80072fc:	6126      	str	r6, [r4, #16]
 80072fe:	6165      	str	r5, [r4, #20]
 8007300:	444e      	add	r6, r9
 8007302:	eba5 0509 	sub.w	r5, r5, r9
 8007306:	6026      	str	r6, [r4, #0]
 8007308:	60a5      	str	r5, [r4, #8]
 800730a:	463e      	mov	r6, r7
 800730c:	42be      	cmp	r6, r7
 800730e:	d900      	bls.n	8007312 <__ssputs_r+0x86>
 8007310:	463e      	mov	r6, r7
 8007312:	6820      	ldr	r0, [r4, #0]
 8007314:	4632      	mov	r2, r6
 8007316:	4641      	mov	r1, r8
 8007318:	f000 faa8 	bl	800786c <memmove>
 800731c:	68a3      	ldr	r3, [r4, #8]
 800731e:	1b9b      	subs	r3, r3, r6
 8007320:	60a3      	str	r3, [r4, #8]
 8007322:	6823      	ldr	r3, [r4, #0]
 8007324:	4433      	add	r3, r6
 8007326:	6023      	str	r3, [r4, #0]
 8007328:	2000      	movs	r0, #0
 800732a:	e7db      	b.n	80072e4 <__ssputs_r+0x58>
 800732c:	462a      	mov	r2, r5
 800732e:	f000 fab7 	bl	80078a0 <_realloc_r>
 8007332:	4606      	mov	r6, r0
 8007334:	2800      	cmp	r0, #0
 8007336:	d1e1      	bne.n	80072fc <__ssputs_r+0x70>
 8007338:	6921      	ldr	r1, [r4, #16]
 800733a:	4650      	mov	r0, sl
 800733c:	f7ff ff5a 	bl	80071f4 <_free_r>
 8007340:	e7c7      	b.n	80072d2 <__ssputs_r+0x46>
	...

08007344 <_svfiprintf_r>:
 8007344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007348:	4698      	mov	r8, r3
 800734a:	898b      	ldrh	r3, [r1, #12]
 800734c:	061b      	lsls	r3, r3, #24
 800734e:	b09d      	sub	sp, #116	; 0x74
 8007350:	4607      	mov	r7, r0
 8007352:	460d      	mov	r5, r1
 8007354:	4614      	mov	r4, r2
 8007356:	d50e      	bpl.n	8007376 <_svfiprintf_r+0x32>
 8007358:	690b      	ldr	r3, [r1, #16]
 800735a:	b963      	cbnz	r3, 8007376 <_svfiprintf_r+0x32>
 800735c:	2140      	movs	r1, #64	; 0x40
 800735e:	f7ff fda3 	bl	8006ea8 <_malloc_r>
 8007362:	6028      	str	r0, [r5, #0]
 8007364:	6128      	str	r0, [r5, #16]
 8007366:	b920      	cbnz	r0, 8007372 <_svfiprintf_r+0x2e>
 8007368:	230c      	movs	r3, #12
 800736a:	603b      	str	r3, [r7, #0]
 800736c:	f04f 30ff 	mov.w	r0, #4294967295
 8007370:	e0d1      	b.n	8007516 <_svfiprintf_r+0x1d2>
 8007372:	2340      	movs	r3, #64	; 0x40
 8007374:	616b      	str	r3, [r5, #20]
 8007376:	2300      	movs	r3, #0
 8007378:	9309      	str	r3, [sp, #36]	; 0x24
 800737a:	2320      	movs	r3, #32
 800737c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007380:	f8cd 800c 	str.w	r8, [sp, #12]
 8007384:	2330      	movs	r3, #48	; 0x30
 8007386:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8007530 <_svfiprintf_r+0x1ec>
 800738a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800738e:	f04f 0901 	mov.w	r9, #1
 8007392:	4623      	mov	r3, r4
 8007394:	469a      	mov	sl, r3
 8007396:	f813 2b01 	ldrb.w	r2, [r3], #1
 800739a:	b10a      	cbz	r2, 80073a0 <_svfiprintf_r+0x5c>
 800739c:	2a25      	cmp	r2, #37	; 0x25
 800739e:	d1f9      	bne.n	8007394 <_svfiprintf_r+0x50>
 80073a0:	ebba 0b04 	subs.w	fp, sl, r4
 80073a4:	d00b      	beq.n	80073be <_svfiprintf_r+0x7a>
 80073a6:	465b      	mov	r3, fp
 80073a8:	4622      	mov	r2, r4
 80073aa:	4629      	mov	r1, r5
 80073ac:	4638      	mov	r0, r7
 80073ae:	f7ff ff6d 	bl	800728c <__ssputs_r>
 80073b2:	3001      	adds	r0, #1
 80073b4:	f000 80aa 	beq.w	800750c <_svfiprintf_r+0x1c8>
 80073b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80073ba:	445a      	add	r2, fp
 80073bc:	9209      	str	r2, [sp, #36]	; 0x24
 80073be:	f89a 3000 	ldrb.w	r3, [sl]
 80073c2:	2b00      	cmp	r3, #0
 80073c4:	f000 80a2 	beq.w	800750c <_svfiprintf_r+0x1c8>
 80073c8:	2300      	movs	r3, #0
 80073ca:	f04f 32ff 	mov.w	r2, #4294967295
 80073ce:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80073d2:	f10a 0a01 	add.w	sl, sl, #1
 80073d6:	9304      	str	r3, [sp, #16]
 80073d8:	9307      	str	r3, [sp, #28]
 80073da:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80073de:	931a      	str	r3, [sp, #104]	; 0x68
 80073e0:	4654      	mov	r4, sl
 80073e2:	2205      	movs	r2, #5
 80073e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80073e8:	4851      	ldr	r0, [pc, #324]	; (8007530 <_svfiprintf_r+0x1ec>)
 80073ea:	f7f8 ff11 	bl	8000210 <memchr>
 80073ee:	9a04      	ldr	r2, [sp, #16]
 80073f0:	b9d8      	cbnz	r0, 800742a <_svfiprintf_r+0xe6>
 80073f2:	06d0      	lsls	r0, r2, #27
 80073f4:	bf44      	itt	mi
 80073f6:	2320      	movmi	r3, #32
 80073f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80073fc:	0711      	lsls	r1, r2, #28
 80073fe:	bf44      	itt	mi
 8007400:	232b      	movmi	r3, #43	; 0x2b
 8007402:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007406:	f89a 3000 	ldrb.w	r3, [sl]
 800740a:	2b2a      	cmp	r3, #42	; 0x2a
 800740c:	d015      	beq.n	800743a <_svfiprintf_r+0xf6>
 800740e:	9a07      	ldr	r2, [sp, #28]
 8007410:	4654      	mov	r4, sl
 8007412:	2000      	movs	r0, #0
 8007414:	f04f 0c0a 	mov.w	ip, #10
 8007418:	4621      	mov	r1, r4
 800741a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800741e:	3b30      	subs	r3, #48	; 0x30
 8007420:	2b09      	cmp	r3, #9
 8007422:	d94e      	bls.n	80074c2 <_svfiprintf_r+0x17e>
 8007424:	b1b0      	cbz	r0, 8007454 <_svfiprintf_r+0x110>
 8007426:	9207      	str	r2, [sp, #28]
 8007428:	e014      	b.n	8007454 <_svfiprintf_r+0x110>
 800742a:	eba0 0308 	sub.w	r3, r0, r8
 800742e:	fa09 f303 	lsl.w	r3, r9, r3
 8007432:	4313      	orrs	r3, r2
 8007434:	9304      	str	r3, [sp, #16]
 8007436:	46a2      	mov	sl, r4
 8007438:	e7d2      	b.n	80073e0 <_svfiprintf_r+0x9c>
 800743a:	9b03      	ldr	r3, [sp, #12]
 800743c:	1d19      	adds	r1, r3, #4
 800743e:	681b      	ldr	r3, [r3, #0]
 8007440:	9103      	str	r1, [sp, #12]
 8007442:	2b00      	cmp	r3, #0
 8007444:	bfbb      	ittet	lt
 8007446:	425b      	neglt	r3, r3
 8007448:	f042 0202 	orrlt.w	r2, r2, #2
 800744c:	9307      	strge	r3, [sp, #28]
 800744e:	9307      	strlt	r3, [sp, #28]
 8007450:	bfb8      	it	lt
 8007452:	9204      	strlt	r2, [sp, #16]
 8007454:	7823      	ldrb	r3, [r4, #0]
 8007456:	2b2e      	cmp	r3, #46	; 0x2e
 8007458:	d10c      	bne.n	8007474 <_svfiprintf_r+0x130>
 800745a:	7863      	ldrb	r3, [r4, #1]
 800745c:	2b2a      	cmp	r3, #42	; 0x2a
 800745e:	d135      	bne.n	80074cc <_svfiprintf_r+0x188>
 8007460:	9b03      	ldr	r3, [sp, #12]
 8007462:	1d1a      	adds	r2, r3, #4
 8007464:	681b      	ldr	r3, [r3, #0]
 8007466:	9203      	str	r2, [sp, #12]
 8007468:	2b00      	cmp	r3, #0
 800746a:	bfb8      	it	lt
 800746c:	f04f 33ff 	movlt.w	r3, #4294967295
 8007470:	3402      	adds	r4, #2
 8007472:	9305      	str	r3, [sp, #20]
 8007474:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007540 <_svfiprintf_r+0x1fc>
 8007478:	7821      	ldrb	r1, [r4, #0]
 800747a:	2203      	movs	r2, #3
 800747c:	4650      	mov	r0, sl
 800747e:	f7f8 fec7 	bl	8000210 <memchr>
 8007482:	b140      	cbz	r0, 8007496 <_svfiprintf_r+0x152>
 8007484:	2340      	movs	r3, #64	; 0x40
 8007486:	eba0 000a 	sub.w	r0, r0, sl
 800748a:	fa03 f000 	lsl.w	r0, r3, r0
 800748e:	9b04      	ldr	r3, [sp, #16]
 8007490:	4303      	orrs	r3, r0
 8007492:	3401      	adds	r4, #1
 8007494:	9304      	str	r3, [sp, #16]
 8007496:	f814 1b01 	ldrb.w	r1, [r4], #1
 800749a:	4826      	ldr	r0, [pc, #152]	; (8007534 <_svfiprintf_r+0x1f0>)
 800749c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80074a0:	2206      	movs	r2, #6
 80074a2:	f7f8 feb5 	bl	8000210 <memchr>
 80074a6:	2800      	cmp	r0, #0
 80074a8:	d038      	beq.n	800751c <_svfiprintf_r+0x1d8>
 80074aa:	4b23      	ldr	r3, [pc, #140]	; (8007538 <_svfiprintf_r+0x1f4>)
 80074ac:	bb1b      	cbnz	r3, 80074f6 <_svfiprintf_r+0x1b2>
 80074ae:	9b03      	ldr	r3, [sp, #12]
 80074b0:	3307      	adds	r3, #7
 80074b2:	f023 0307 	bic.w	r3, r3, #7
 80074b6:	3308      	adds	r3, #8
 80074b8:	9303      	str	r3, [sp, #12]
 80074ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80074bc:	4433      	add	r3, r6
 80074be:	9309      	str	r3, [sp, #36]	; 0x24
 80074c0:	e767      	b.n	8007392 <_svfiprintf_r+0x4e>
 80074c2:	fb0c 3202 	mla	r2, ip, r2, r3
 80074c6:	460c      	mov	r4, r1
 80074c8:	2001      	movs	r0, #1
 80074ca:	e7a5      	b.n	8007418 <_svfiprintf_r+0xd4>
 80074cc:	2300      	movs	r3, #0
 80074ce:	3401      	adds	r4, #1
 80074d0:	9305      	str	r3, [sp, #20]
 80074d2:	4619      	mov	r1, r3
 80074d4:	f04f 0c0a 	mov.w	ip, #10
 80074d8:	4620      	mov	r0, r4
 80074da:	f810 2b01 	ldrb.w	r2, [r0], #1
 80074de:	3a30      	subs	r2, #48	; 0x30
 80074e0:	2a09      	cmp	r2, #9
 80074e2:	d903      	bls.n	80074ec <_svfiprintf_r+0x1a8>
 80074e4:	2b00      	cmp	r3, #0
 80074e6:	d0c5      	beq.n	8007474 <_svfiprintf_r+0x130>
 80074e8:	9105      	str	r1, [sp, #20]
 80074ea:	e7c3      	b.n	8007474 <_svfiprintf_r+0x130>
 80074ec:	fb0c 2101 	mla	r1, ip, r1, r2
 80074f0:	4604      	mov	r4, r0
 80074f2:	2301      	movs	r3, #1
 80074f4:	e7f0      	b.n	80074d8 <_svfiprintf_r+0x194>
 80074f6:	ab03      	add	r3, sp, #12
 80074f8:	9300      	str	r3, [sp, #0]
 80074fa:	462a      	mov	r2, r5
 80074fc:	4b0f      	ldr	r3, [pc, #60]	; (800753c <_svfiprintf_r+0x1f8>)
 80074fe:	a904      	add	r1, sp, #16
 8007500:	4638      	mov	r0, r7
 8007502:	f3af 8000 	nop.w
 8007506:	1c42      	adds	r2, r0, #1
 8007508:	4606      	mov	r6, r0
 800750a:	d1d6      	bne.n	80074ba <_svfiprintf_r+0x176>
 800750c:	89ab      	ldrh	r3, [r5, #12]
 800750e:	065b      	lsls	r3, r3, #25
 8007510:	f53f af2c 	bmi.w	800736c <_svfiprintf_r+0x28>
 8007514:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007516:	b01d      	add	sp, #116	; 0x74
 8007518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800751c:	ab03      	add	r3, sp, #12
 800751e:	9300      	str	r3, [sp, #0]
 8007520:	462a      	mov	r2, r5
 8007522:	4b06      	ldr	r3, [pc, #24]	; (800753c <_svfiprintf_r+0x1f8>)
 8007524:	a904      	add	r1, sp, #16
 8007526:	4638      	mov	r0, r7
 8007528:	f000 f87a 	bl	8007620 <_printf_i>
 800752c:	e7eb      	b.n	8007506 <_svfiprintf_r+0x1c2>
 800752e:	bf00      	nop
 8007530:	080083f1 	.word	0x080083f1
 8007534:	080083fb 	.word	0x080083fb
 8007538:	00000000 	.word	0x00000000
 800753c:	0800728d 	.word	0x0800728d
 8007540:	080083f7 	.word	0x080083f7

08007544 <_printf_common>:
 8007544:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007548:	4616      	mov	r6, r2
 800754a:	4699      	mov	r9, r3
 800754c:	688a      	ldr	r2, [r1, #8]
 800754e:	690b      	ldr	r3, [r1, #16]
 8007550:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007554:	4293      	cmp	r3, r2
 8007556:	bfb8      	it	lt
 8007558:	4613      	movlt	r3, r2
 800755a:	6033      	str	r3, [r6, #0]
 800755c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007560:	4607      	mov	r7, r0
 8007562:	460c      	mov	r4, r1
 8007564:	b10a      	cbz	r2, 800756a <_printf_common+0x26>
 8007566:	3301      	adds	r3, #1
 8007568:	6033      	str	r3, [r6, #0]
 800756a:	6823      	ldr	r3, [r4, #0]
 800756c:	0699      	lsls	r1, r3, #26
 800756e:	bf42      	ittt	mi
 8007570:	6833      	ldrmi	r3, [r6, #0]
 8007572:	3302      	addmi	r3, #2
 8007574:	6033      	strmi	r3, [r6, #0]
 8007576:	6825      	ldr	r5, [r4, #0]
 8007578:	f015 0506 	ands.w	r5, r5, #6
 800757c:	d106      	bne.n	800758c <_printf_common+0x48>
 800757e:	f104 0a19 	add.w	sl, r4, #25
 8007582:	68e3      	ldr	r3, [r4, #12]
 8007584:	6832      	ldr	r2, [r6, #0]
 8007586:	1a9b      	subs	r3, r3, r2
 8007588:	42ab      	cmp	r3, r5
 800758a:	dc26      	bgt.n	80075da <_printf_common+0x96>
 800758c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007590:	1e13      	subs	r3, r2, #0
 8007592:	6822      	ldr	r2, [r4, #0]
 8007594:	bf18      	it	ne
 8007596:	2301      	movne	r3, #1
 8007598:	0692      	lsls	r2, r2, #26
 800759a:	d42b      	bmi.n	80075f4 <_printf_common+0xb0>
 800759c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80075a0:	4649      	mov	r1, r9
 80075a2:	4638      	mov	r0, r7
 80075a4:	47c0      	blx	r8
 80075a6:	3001      	adds	r0, #1
 80075a8:	d01e      	beq.n	80075e8 <_printf_common+0xa4>
 80075aa:	6823      	ldr	r3, [r4, #0]
 80075ac:	68e5      	ldr	r5, [r4, #12]
 80075ae:	6832      	ldr	r2, [r6, #0]
 80075b0:	f003 0306 	and.w	r3, r3, #6
 80075b4:	2b04      	cmp	r3, #4
 80075b6:	bf08      	it	eq
 80075b8:	1aad      	subeq	r5, r5, r2
 80075ba:	68a3      	ldr	r3, [r4, #8]
 80075bc:	6922      	ldr	r2, [r4, #16]
 80075be:	bf0c      	ite	eq
 80075c0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80075c4:	2500      	movne	r5, #0
 80075c6:	4293      	cmp	r3, r2
 80075c8:	bfc4      	itt	gt
 80075ca:	1a9b      	subgt	r3, r3, r2
 80075cc:	18ed      	addgt	r5, r5, r3
 80075ce:	2600      	movs	r6, #0
 80075d0:	341a      	adds	r4, #26
 80075d2:	42b5      	cmp	r5, r6
 80075d4:	d11a      	bne.n	800760c <_printf_common+0xc8>
 80075d6:	2000      	movs	r0, #0
 80075d8:	e008      	b.n	80075ec <_printf_common+0xa8>
 80075da:	2301      	movs	r3, #1
 80075dc:	4652      	mov	r2, sl
 80075de:	4649      	mov	r1, r9
 80075e0:	4638      	mov	r0, r7
 80075e2:	47c0      	blx	r8
 80075e4:	3001      	adds	r0, #1
 80075e6:	d103      	bne.n	80075f0 <_printf_common+0xac>
 80075e8:	f04f 30ff 	mov.w	r0, #4294967295
 80075ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80075f0:	3501      	adds	r5, #1
 80075f2:	e7c6      	b.n	8007582 <_printf_common+0x3e>
 80075f4:	18e1      	adds	r1, r4, r3
 80075f6:	1c5a      	adds	r2, r3, #1
 80075f8:	2030      	movs	r0, #48	; 0x30
 80075fa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80075fe:	4422      	add	r2, r4
 8007600:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8007604:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8007608:	3302      	adds	r3, #2
 800760a:	e7c7      	b.n	800759c <_printf_common+0x58>
 800760c:	2301      	movs	r3, #1
 800760e:	4622      	mov	r2, r4
 8007610:	4649      	mov	r1, r9
 8007612:	4638      	mov	r0, r7
 8007614:	47c0      	blx	r8
 8007616:	3001      	adds	r0, #1
 8007618:	d0e6      	beq.n	80075e8 <_printf_common+0xa4>
 800761a:	3601      	adds	r6, #1
 800761c:	e7d9      	b.n	80075d2 <_printf_common+0x8e>
	...

08007620 <_printf_i>:
 8007620:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007624:	7e0f      	ldrb	r7, [r1, #24]
 8007626:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007628:	2f78      	cmp	r7, #120	; 0x78
 800762a:	4691      	mov	r9, r2
 800762c:	4680      	mov	r8, r0
 800762e:	460c      	mov	r4, r1
 8007630:	469a      	mov	sl, r3
 8007632:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8007636:	d807      	bhi.n	8007648 <_printf_i+0x28>
 8007638:	2f62      	cmp	r7, #98	; 0x62
 800763a:	d80a      	bhi.n	8007652 <_printf_i+0x32>
 800763c:	2f00      	cmp	r7, #0
 800763e:	f000 80d8 	beq.w	80077f2 <_printf_i+0x1d2>
 8007642:	2f58      	cmp	r7, #88	; 0x58
 8007644:	f000 80a3 	beq.w	800778e <_printf_i+0x16e>
 8007648:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800764c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007650:	e03a      	b.n	80076c8 <_printf_i+0xa8>
 8007652:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8007656:	2b15      	cmp	r3, #21
 8007658:	d8f6      	bhi.n	8007648 <_printf_i+0x28>
 800765a:	a101      	add	r1, pc, #4	; (adr r1, 8007660 <_printf_i+0x40>)
 800765c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007660:	080076b9 	.word	0x080076b9
 8007664:	080076cd 	.word	0x080076cd
 8007668:	08007649 	.word	0x08007649
 800766c:	08007649 	.word	0x08007649
 8007670:	08007649 	.word	0x08007649
 8007674:	08007649 	.word	0x08007649
 8007678:	080076cd 	.word	0x080076cd
 800767c:	08007649 	.word	0x08007649
 8007680:	08007649 	.word	0x08007649
 8007684:	08007649 	.word	0x08007649
 8007688:	08007649 	.word	0x08007649
 800768c:	080077d9 	.word	0x080077d9
 8007690:	080076fd 	.word	0x080076fd
 8007694:	080077bb 	.word	0x080077bb
 8007698:	08007649 	.word	0x08007649
 800769c:	08007649 	.word	0x08007649
 80076a0:	080077fb 	.word	0x080077fb
 80076a4:	08007649 	.word	0x08007649
 80076a8:	080076fd 	.word	0x080076fd
 80076ac:	08007649 	.word	0x08007649
 80076b0:	08007649 	.word	0x08007649
 80076b4:	080077c3 	.word	0x080077c3
 80076b8:	682b      	ldr	r3, [r5, #0]
 80076ba:	1d1a      	adds	r2, r3, #4
 80076bc:	681b      	ldr	r3, [r3, #0]
 80076be:	602a      	str	r2, [r5, #0]
 80076c0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80076c4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80076c8:	2301      	movs	r3, #1
 80076ca:	e0a3      	b.n	8007814 <_printf_i+0x1f4>
 80076cc:	6820      	ldr	r0, [r4, #0]
 80076ce:	6829      	ldr	r1, [r5, #0]
 80076d0:	0606      	lsls	r6, r0, #24
 80076d2:	f101 0304 	add.w	r3, r1, #4
 80076d6:	d50a      	bpl.n	80076ee <_printf_i+0xce>
 80076d8:	680e      	ldr	r6, [r1, #0]
 80076da:	602b      	str	r3, [r5, #0]
 80076dc:	2e00      	cmp	r6, #0
 80076de:	da03      	bge.n	80076e8 <_printf_i+0xc8>
 80076e0:	232d      	movs	r3, #45	; 0x2d
 80076e2:	4276      	negs	r6, r6
 80076e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80076e8:	485e      	ldr	r0, [pc, #376]	; (8007864 <_printf_i+0x244>)
 80076ea:	230a      	movs	r3, #10
 80076ec:	e019      	b.n	8007722 <_printf_i+0x102>
 80076ee:	680e      	ldr	r6, [r1, #0]
 80076f0:	602b      	str	r3, [r5, #0]
 80076f2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80076f6:	bf18      	it	ne
 80076f8:	b236      	sxthne	r6, r6
 80076fa:	e7ef      	b.n	80076dc <_printf_i+0xbc>
 80076fc:	682b      	ldr	r3, [r5, #0]
 80076fe:	6820      	ldr	r0, [r4, #0]
 8007700:	1d19      	adds	r1, r3, #4
 8007702:	6029      	str	r1, [r5, #0]
 8007704:	0601      	lsls	r1, r0, #24
 8007706:	d501      	bpl.n	800770c <_printf_i+0xec>
 8007708:	681e      	ldr	r6, [r3, #0]
 800770a:	e002      	b.n	8007712 <_printf_i+0xf2>
 800770c:	0646      	lsls	r6, r0, #25
 800770e:	d5fb      	bpl.n	8007708 <_printf_i+0xe8>
 8007710:	881e      	ldrh	r6, [r3, #0]
 8007712:	4854      	ldr	r0, [pc, #336]	; (8007864 <_printf_i+0x244>)
 8007714:	2f6f      	cmp	r7, #111	; 0x6f
 8007716:	bf0c      	ite	eq
 8007718:	2308      	moveq	r3, #8
 800771a:	230a      	movne	r3, #10
 800771c:	2100      	movs	r1, #0
 800771e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8007722:	6865      	ldr	r5, [r4, #4]
 8007724:	60a5      	str	r5, [r4, #8]
 8007726:	2d00      	cmp	r5, #0
 8007728:	bfa2      	ittt	ge
 800772a:	6821      	ldrge	r1, [r4, #0]
 800772c:	f021 0104 	bicge.w	r1, r1, #4
 8007730:	6021      	strge	r1, [r4, #0]
 8007732:	b90e      	cbnz	r6, 8007738 <_printf_i+0x118>
 8007734:	2d00      	cmp	r5, #0
 8007736:	d04d      	beq.n	80077d4 <_printf_i+0x1b4>
 8007738:	4615      	mov	r5, r2
 800773a:	fbb6 f1f3 	udiv	r1, r6, r3
 800773e:	fb03 6711 	mls	r7, r3, r1, r6
 8007742:	5dc7      	ldrb	r7, [r0, r7]
 8007744:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8007748:	4637      	mov	r7, r6
 800774a:	42bb      	cmp	r3, r7
 800774c:	460e      	mov	r6, r1
 800774e:	d9f4      	bls.n	800773a <_printf_i+0x11a>
 8007750:	2b08      	cmp	r3, #8
 8007752:	d10b      	bne.n	800776c <_printf_i+0x14c>
 8007754:	6823      	ldr	r3, [r4, #0]
 8007756:	07de      	lsls	r6, r3, #31
 8007758:	d508      	bpl.n	800776c <_printf_i+0x14c>
 800775a:	6923      	ldr	r3, [r4, #16]
 800775c:	6861      	ldr	r1, [r4, #4]
 800775e:	4299      	cmp	r1, r3
 8007760:	bfde      	ittt	le
 8007762:	2330      	movle	r3, #48	; 0x30
 8007764:	f805 3c01 	strble.w	r3, [r5, #-1]
 8007768:	f105 35ff 	addle.w	r5, r5, #4294967295
 800776c:	1b52      	subs	r2, r2, r5
 800776e:	6122      	str	r2, [r4, #16]
 8007770:	f8cd a000 	str.w	sl, [sp]
 8007774:	464b      	mov	r3, r9
 8007776:	aa03      	add	r2, sp, #12
 8007778:	4621      	mov	r1, r4
 800777a:	4640      	mov	r0, r8
 800777c:	f7ff fee2 	bl	8007544 <_printf_common>
 8007780:	3001      	adds	r0, #1
 8007782:	d14c      	bne.n	800781e <_printf_i+0x1fe>
 8007784:	f04f 30ff 	mov.w	r0, #4294967295
 8007788:	b004      	add	sp, #16
 800778a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800778e:	4835      	ldr	r0, [pc, #212]	; (8007864 <_printf_i+0x244>)
 8007790:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8007794:	6829      	ldr	r1, [r5, #0]
 8007796:	6823      	ldr	r3, [r4, #0]
 8007798:	f851 6b04 	ldr.w	r6, [r1], #4
 800779c:	6029      	str	r1, [r5, #0]
 800779e:	061d      	lsls	r5, r3, #24
 80077a0:	d514      	bpl.n	80077cc <_printf_i+0x1ac>
 80077a2:	07df      	lsls	r7, r3, #31
 80077a4:	bf44      	itt	mi
 80077a6:	f043 0320 	orrmi.w	r3, r3, #32
 80077aa:	6023      	strmi	r3, [r4, #0]
 80077ac:	b91e      	cbnz	r6, 80077b6 <_printf_i+0x196>
 80077ae:	6823      	ldr	r3, [r4, #0]
 80077b0:	f023 0320 	bic.w	r3, r3, #32
 80077b4:	6023      	str	r3, [r4, #0]
 80077b6:	2310      	movs	r3, #16
 80077b8:	e7b0      	b.n	800771c <_printf_i+0xfc>
 80077ba:	6823      	ldr	r3, [r4, #0]
 80077bc:	f043 0320 	orr.w	r3, r3, #32
 80077c0:	6023      	str	r3, [r4, #0]
 80077c2:	2378      	movs	r3, #120	; 0x78
 80077c4:	4828      	ldr	r0, [pc, #160]	; (8007868 <_printf_i+0x248>)
 80077c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80077ca:	e7e3      	b.n	8007794 <_printf_i+0x174>
 80077cc:	0659      	lsls	r1, r3, #25
 80077ce:	bf48      	it	mi
 80077d0:	b2b6      	uxthmi	r6, r6
 80077d2:	e7e6      	b.n	80077a2 <_printf_i+0x182>
 80077d4:	4615      	mov	r5, r2
 80077d6:	e7bb      	b.n	8007750 <_printf_i+0x130>
 80077d8:	682b      	ldr	r3, [r5, #0]
 80077da:	6826      	ldr	r6, [r4, #0]
 80077dc:	6961      	ldr	r1, [r4, #20]
 80077de:	1d18      	adds	r0, r3, #4
 80077e0:	6028      	str	r0, [r5, #0]
 80077e2:	0635      	lsls	r5, r6, #24
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	d501      	bpl.n	80077ec <_printf_i+0x1cc>
 80077e8:	6019      	str	r1, [r3, #0]
 80077ea:	e002      	b.n	80077f2 <_printf_i+0x1d2>
 80077ec:	0670      	lsls	r0, r6, #25
 80077ee:	d5fb      	bpl.n	80077e8 <_printf_i+0x1c8>
 80077f0:	8019      	strh	r1, [r3, #0]
 80077f2:	2300      	movs	r3, #0
 80077f4:	6123      	str	r3, [r4, #16]
 80077f6:	4615      	mov	r5, r2
 80077f8:	e7ba      	b.n	8007770 <_printf_i+0x150>
 80077fa:	682b      	ldr	r3, [r5, #0]
 80077fc:	1d1a      	adds	r2, r3, #4
 80077fe:	602a      	str	r2, [r5, #0]
 8007800:	681d      	ldr	r5, [r3, #0]
 8007802:	6862      	ldr	r2, [r4, #4]
 8007804:	2100      	movs	r1, #0
 8007806:	4628      	mov	r0, r5
 8007808:	f7f8 fd02 	bl	8000210 <memchr>
 800780c:	b108      	cbz	r0, 8007812 <_printf_i+0x1f2>
 800780e:	1b40      	subs	r0, r0, r5
 8007810:	6060      	str	r0, [r4, #4]
 8007812:	6863      	ldr	r3, [r4, #4]
 8007814:	6123      	str	r3, [r4, #16]
 8007816:	2300      	movs	r3, #0
 8007818:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800781c:	e7a8      	b.n	8007770 <_printf_i+0x150>
 800781e:	6923      	ldr	r3, [r4, #16]
 8007820:	462a      	mov	r2, r5
 8007822:	4649      	mov	r1, r9
 8007824:	4640      	mov	r0, r8
 8007826:	47d0      	blx	sl
 8007828:	3001      	adds	r0, #1
 800782a:	d0ab      	beq.n	8007784 <_printf_i+0x164>
 800782c:	6823      	ldr	r3, [r4, #0]
 800782e:	079b      	lsls	r3, r3, #30
 8007830:	d413      	bmi.n	800785a <_printf_i+0x23a>
 8007832:	68e0      	ldr	r0, [r4, #12]
 8007834:	9b03      	ldr	r3, [sp, #12]
 8007836:	4298      	cmp	r0, r3
 8007838:	bfb8      	it	lt
 800783a:	4618      	movlt	r0, r3
 800783c:	e7a4      	b.n	8007788 <_printf_i+0x168>
 800783e:	2301      	movs	r3, #1
 8007840:	4632      	mov	r2, r6
 8007842:	4649      	mov	r1, r9
 8007844:	4640      	mov	r0, r8
 8007846:	47d0      	blx	sl
 8007848:	3001      	adds	r0, #1
 800784a:	d09b      	beq.n	8007784 <_printf_i+0x164>
 800784c:	3501      	adds	r5, #1
 800784e:	68e3      	ldr	r3, [r4, #12]
 8007850:	9903      	ldr	r1, [sp, #12]
 8007852:	1a5b      	subs	r3, r3, r1
 8007854:	42ab      	cmp	r3, r5
 8007856:	dcf2      	bgt.n	800783e <_printf_i+0x21e>
 8007858:	e7eb      	b.n	8007832 <_printf_i+0x212>
 800785a:	2500      	movs	r5, #0
 800785c:	f104 0619 	add.w	r6, r4, #25
 8007860:	e7f5      	b.n	800784e <_printf_i+0x22e>
 8007862:	bf00      	nop
 8007864:	08008402 	.word	0x08008402
 8007868:	08008413 	.word	0x08008413

0800786c <memmove>:
 800786c:	4288      	cmp	r0, r1
 800786e:	b510      	push	{r4, lr}
 8007870:	eb01 0402 	add.w	r4, r1, r2
 8007874:	d902      	bls.n	800787c <memmove+0x10>
 8007876:	4284      	cmp	r4, r0
 8007878:	4623      	mov	r3, r4
 800787a:	d807      	bhi.n	800788c <memmove+0x20>
 800787c:	1e43      	subs	r3, r0, #1
 800787e:	42a1      	cmp	r1, r4
 8007880:	d008      	beq.n	8007894 <memmove+0x28>
 8007882:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007886:	f803 2f01 	strb.w	r2, [r3, #1]!
 800788a:	e7f8      	b.n	800787e <memmove+0x12>
 800788c:	4402      	add	r2, r0
 800788e:	4601      	mov	r1, r0
 8007890:	428a      	cmp	r2, r1
 8007892:	d100      	bne.n	8007896 <memmove+0x2a>
 8007894:	bd10      	pop	{r4, pc}
 8007896:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800789a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800789e:	e7f7      	b.n	8007890 <memmove+0x24>

080078a0 <_realloc_r>:
 80078a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80078a4:	4680      	mov	r8, r0
 80078a6:	4614      	mov	r4, r2
 80078a8:	460e      	mov	r6, r1
 80078aa:	b921      	cbnz	r1, 80078b6 <_realloc_r+0x16>
 80078ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80078b0:	4611      	mov	r1, r2
 80078b2:	f7ff baf9 	b.w	8006ea8 <_malloc_r>
 80078b6:	b92a      	cbnz	r2, 80078c4 <_realloc_r+0x24>
 80078b8:	f7ff fc9c 	bl	80071f4 <_free_r>
 80078bc:	4625      	mov	r5, r4
 80078be:	4628      	mov	r0, r5
 80078c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80078c4:	f000 f81b 	bl	80078fe <_malloc_usable_size_r>
 80078c8:	4284      	cmp	r4, r0
 80078ca:	4607      	mov	r7, r0
 80078cc:	d802      	bhi.n	80078d4 <_realloc_r+0x34>
 80078ce:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80078d2:	d812      	bhi.n	80078fa <_realloc_r+0x5a>
 80078d4:	4621      	mov	r1, r4
 80078d6:	4640      	mov	r0, r8
 80078d8:	f7ff fae6 	bl	8006ea8 <_malloc_r>
 80078dc:	4605      	mov	r5, r0
 80078de:	2800      	cmp	r0, #0
 80078e0:	d0ed      	beq.n	80078be <_realloc_r+0x1e>
 80078e2:	42bc      	cmp	r4, r7
 80078e4:	4622      	mov	r2, r4
 80078e6:	4631      	mov	r1, r6
 80078e8:	bf28      	it	cs
 80078ea:	463a      	movcs	r2, r7
 80078ec:	f7ff faa6 	bl	8006e3c <memcpy>
 80078f0:	4631      	mov	r1, r6
 80078f2:	4640      	mov	r0, r8
 80078f4:	f7ff fc7e 	bl	80071f4 <_free_r>
 80078f8:	e7e1      	b.n	80078be <_realloc_r+0x1e>
 80078fa:	4635      	mov	r5, r6
 80078fc:	e7df      	b.n	80078be <_realloc_r+0x1e>

080078fe <_malloc_usable_size_r>:
 80078fe:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007902:	1f18      	subs	r0, r3, #4
 8007904:	2b00      	cmp	r3, #0
 8007906:	bfbc      	itt	lt
 8007908:	580b      	ldrlt	r3, [r1, r0]
 800790a:	18c0      	addlt	r0, r0, r3
 800790c:	4770      	bx	lr
	...

08007910 <_init>:
 8007910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007912:	bf00      	nop
 8007914:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007916:	bc08      	pop	{r3}
 8007918:	469e      	mov	lr, r3
 800791a:	4770      	bx	lr

0800791c <_fini>:
 800791c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800791e:	bf00      	nop
 8007920:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007922:	bc08      	pop	{r3}
 8007924:	469e      	mov	lr, r3
 8007926:	4770      	bx	lr
